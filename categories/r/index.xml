<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R on</title><link>https://yshghid.github.io/categories/r/</link><description>Recent content in R on</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 28 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yshghid.github.io/categories/r/index.xml" rel="self" type="application/rss+xml"/><item><title>Selenium: Influenza fasta 파일 크롤링</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi28/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi28/</guid><description>&lt;h1 id="selenium-influenza-fasta-파일-크롤링">
 Selenium: Influenza fasta 파일 크롤링
 &lt;a class="anchor" href="#selenium-influenza-fasta-%ed%8c%8c%ec%9d%bc-%ed%81%ac%eb%a1%a4%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">import&lt;/span> pandas &lt;span style="color:#fff;font-weight:bold">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">import&lt;/span> numpy &lt;span style="color:#fff;font-weight:bold">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">import&lt;/span> os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-set-path">
 2. Set path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>os.chdir(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;/Users/yshmbid/Desktop/workspace/gisaid&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os.getcwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/Users/yshmbid/Desktop/workspace/gisaid&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-run-crawling">
 3. Run crawling
 &lt;a class="anchor" href="#3-run-crawling">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># ChromeDriver 경로를 설치하고 Service 객체로 전달&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chrome_service = Service(ChromeDriverManager().install())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007f7f"># ChromeDriver 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> crawler = webdriver.Chrome(service=chrome_service)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007f7f"># 크롬드라이버가 없을 때 autoinstaller로 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chromedriver_autoinstaller.install(&lt;span style="color:#fff;font-weight:bold">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> crawler = webdriver.Chrome(service=chrome_service)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler.implicitly_wait(&lt;span style="color:#ff0;font-weight:bold">6&lt;/span>) &lt;span style="color:#007f7f"># 크롤러 대기 시간 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler.get(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;https://gisaid.org/&amp;#39;&lt;/span>) &lt;span style="color:#007f7f"># 웹사이트 열기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># login 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = WebDriverWait(crawler, &lt;span style="color:#ff0;font-weight:bold">10&lt;/span>).until(EC.element_to_be_clickable((By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;menuequer&amp;#34;]/li[7]/a&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># id 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WebDriverWait(crawler, &lt;span style="color:#ff0;font-weight:bold">10&lt;/span>).until(EC.element_to_be_clickable((By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;elogin&amp;#34;]&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;elogin&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler.execute_script(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;arguments[0].click();&amp;#34;&lt;/span>, engine)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.send_keys(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;*&amp;#39;&lt;/span>) &lt;span style="color:#007f7f"># *: id 블라인드 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># pw 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/br[3]&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;epassword&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler.execute_script(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;arguments[0].click();&amp;#34;&lt;/span>, engine)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.send_keys(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;*&amp;#39;&lt;/span>) &lt;span style="color:#007f7f"># *: pw 블라인드 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/input[3]&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = WebDriverWait(crawler, &lt;span style="color:#ff0;font-weight:bold">10&lt;/span>).until(EC.element_to_be_clickable((By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/input[3]&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># epiflu 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;main_nav&amp;#34;]/ul/li[2]/a&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># search&amp;amp;browse 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;c_sjk17x_ey-c_sjk17x_ey&amp;#34;]/div/div/div[7]/div&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;c_sjlgnx_11g-c_sjlgnx_11g&amp;#34;]/div/div/div[7]/div&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;c_sjk17x_ey-c_sjk17x_ey&amp;#34;]/div/div/div[7]/div&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># collection-date 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_q_input&amp;#34;]&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_hv_input&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.send_keys(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;2024-01-01&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_r_input&amp;#34;]&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_hw_input&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.send_keys(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;2024-02-01&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># search 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_1p&amp;#34;]/div/button&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine.click()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjlgnx_iu&amp;#34;]/div/button&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = WebDriverWait(crawler, &lt;span style="color:#ff0;font-weight:bold">10&lt;/span>).until(EC.element_to_be_clickable((By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_iu&amp;#34;]/div/button&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># check all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine = crawler.find_element(By.XPATH, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;//*[@id=&amp;#34;yui-dt0-th-c-liner&amp;#34;]/span/input&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine.click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>edgeR: DE 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi23/</link><pubDate>Sat, 12 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi23/</guid><description>&lt;h1 id="edger-de-분석">
 edgeR: DE 분석
 &lt;a class="anchor" href="#edger-de-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-12&lt;/p>
&lt;hr>
&lt;h3 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>library(edgeR)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>packageVersion(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;edgeR&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set-path">
 Set path
 &lt;a class="anchor" href="#set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>setwd(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data/home/ysh980101/2406/data-gne&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;data/home/ysh980101/2406/data-gne&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="load-data-run-edger">
 Load data, Run edgeR
 &lt;a class="anchor" href="#load-data-run-edger">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>tissue_type &amp;lt;- c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;G&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S1 &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#34;WT&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S2 &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#34;GneKI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">for&lt;/span> (tissue &lt;span style="color:#fff;font-weight:bold">in&lt;/span> tissue_type) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(tissue) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &amp;lt;- read.csv(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;count.csv&amp;#34;&lt;/span>, header = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts[, &lt;span style="color:#ff0;font-weight:bold">-1&lt;/span>] &amp;lt;- lapply(counts[, &lt;span style="color:#ff0;font-weight:bold">-1&lt;/span>], as.numeric)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &amp;lt;- counts[rowSums(counts[, &lt;span style="color:#ff0;font-weight:bold">-1&lt;/span>]) != &lt;span style="color:#ff0;font-weight:bold">0&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta &amp;lt;- read.csv(paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;mouse_meta_&amp;#34;&lt;/span>,tissue,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;.csv&amp;#34;&lt;/span>), header = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta &amp;lt;- meta[meta$Group %in% c(S1, S2), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &amp;lt;- counts[, c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;GeneID&amp;#34;&lt;/span>, unique(meta$SampleID))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &amp;lt;- counts[, colnames(counts) %in% c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;GeneID&amp;#34;&lt;/span>, c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;GeneID&amp;#34;&lt;/span>, unique(meta$SampleID)))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group &amp;lt;- factor(meta$Group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group &amp;lt;- relevel(Group, ref=S1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &amp;lt;- DGEList(counts=counts[,&lt;span style="color:#ff0;font-weight:bold">2&lt;/span>:ncol(counts)], group=Group, genes = counts[,&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &amp;lt;- calcNormFactors(y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &amp;lt;- y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design &amp;lt;- model.matrix(~Group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rownames(design) &amp;lt;- colnames(y3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &amp;lt;- estimateDisp(y3, design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &amp;lt;- estimateGLMRobustDisp(y3,design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fit3 &amp;lt;- glmFit(y3, design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrt3 &amp;lt;- glmLRT(fit3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plotMD(lrt3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> abline(h=c(&lt;span style="color:#ff0;font-weight:bold">-1&lt;/span>,&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>), col=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;blue&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(summary(decideTests(lrt3)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result_table &amp;lt;- topTags(lrt3, n = nrow(lrt3$table))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sorted_result_table &amp;lt;- result_table[order(result_table$table$FDR, decreasing = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filtered_result_table &amp;lt;- sorted_result_table[sorted_result_table$table$FDR &amp;lt; &lt;span style="color:#ff0;font-weight:bold">0.05&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> write.csv(sorted_result_table, file = paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;de-edger-&amp;#34;&lt;/span>,tissue,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;_&amp;#34;&lt;/span>,S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-&amp;#34;&lt;/span>,S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;.csv&amp;#34;&lt;/span>), row.names = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>[1] &amp;#34;G&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GroupGneKI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Down 50
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NotSig 10888
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Up 100
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="840" height="840" alt="image" src="https://github.com/user-attachments/assets/c51125bd-7a59-4241-b39c-da785b4dbc0e" /></description></item><item><title>gProfiler/ggplot2: Enrichment 분석, 버블 플롯</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi3/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi3/</guid><description>&lt;h1 id="gprofilerggplot2-enrichment-분석-버블-플롯">
 gProfiler/ggplot2: Enrichment 분석, 버블 플롯
 &lt;a class="anchor" href="#gprofilerggplot2-enrichment-%eb%b6%84%ec%84%9d-%eb%b2%84%eb%b8%94-%ed%94%8c%eb%a1%af">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="load-package">
 Load Package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>library(ggplot2)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set-path">
 Set Path
 &lt;a class="anchor" href="#set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>setwd(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data-blog/bi3&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data-blog/bi3&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="functional-enrichment-bubble-plot">
 Functional Enrichment Bubble Plot
 &lt;a class="anchor" href="#functional-enrichment-bubble-plot">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>condition &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;150_con&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gpsource &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;GO:BP&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#gpsource &amp;lt;- &amp;#39;REAC&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &amp;lt;- read.csv(paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;./sleuth_ward/gprofiler/gProfiler_&amp;#34;&lt;/span>,condition,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;_termsize.csv&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &amp;lt;- read.csv(paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;gProfiler_&amp;#34;&lt;/span>,condition,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;_c2_padj0.1.csv&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &amp;lt;- df_c1[df_c1$source == gpsource, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &amp;lt;- df_c2[df_c2$source == gpsource, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1$reg_type &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;down&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2$reg_type &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;up&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1$nlog &amp;lt;- -abs(df_c1$negative_log10_of_adjusted_p_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2$nlog &amp;lt;- abs(df_c2$negative_log10_of_adjusted_p_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &amp;lt;- df_c1[order(df_c1$negative_log10_of_adjusted_p_value), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &amp;lt;- df_c2[order(-df_c2$negative_log10_of_adjusted_p_value), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df &amp;lt;- rbind(df_c1, df_c2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ggplot(df, aes(x = reorder(term_name, nlog), y = negative_log10_of_adjusted_p_value, size = intersection_size, color = nlog)) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> geom_point(alpha = &lt;span style="color:#ff0;font-weight:bold">0.6&lt;/span>) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> theme(axis.text.y = element_text(angle = &lt;span style="color:#ff0;font-weight:bold">0&lt;/span>, vjust = &lt;span style="color:#ff0;font-weight:bold">0.5&lt;/span>, hjust=&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>)) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labs(title = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;Bubble Plot - GO:BP / 150_con&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;Term&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;-log10(p-adj)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;Intersection Size&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;-log10(p-adj)&amp;#34;&lt;/span>) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scale_size(range = c(&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>,&lt;span style="color:#ff0;font-weight:bold">10&lt;/span>)) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scale_color_gradient2(low = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;blue&amp;#34;&lt;/span>, mid = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;white&amp;#34;&lt;/span>, high = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;red&amp;#34;&lt;/span>) +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> coord_flip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ggsave(filename = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;./bubble_plot_150_con.png&amp;#34;&lt;/span>, width = &lt;span style="color:#ff0;font-weight:bold">12&lt;/span>, height = &lt;span style="color:#ff0;font-weight:bold">6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/6c08353b-e0b1-4f29-999a-7ca9fe4ec2fd" alt="image" />&lt;/p></description></item><item><title>Sleuth 작업</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi2/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi2/</guid><description>&lt;h1 id="sleuth-작업">
 Sleuth 작업
 &lt;a class="anchor" href="#sleuth-%ec%9e%91%ec%97%85">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="load-package-run-sleuth">
 Load Package, Run Sleuth
 &lt;a class="anchor" href="#load-package-run-sleuth">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>require(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;sleuth&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>packageVersion(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;sleuth&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;gridExtra&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;cowplot&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;biomaRt&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(readr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setwd(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data/home/ysh980101/2307_kallisto&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getwd()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &amp;lt;- dir(file.path(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;./&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &amp;lt;- grep(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;^output_(150|con)&amp;#34;&lt;/span>, sample_id, value = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &amp;lt;- substring(sample_id, &lt;span style="color:#ff0;font-weight:bold">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kal_dirs &amp;lt;- file.path(paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;./output_&amp;#34;&lt;/span>, sample_id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c &amp;lt;- read.table(file.path(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;./kallisto_demo_150_con.tsv&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> header = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stringsAsFactors = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sep = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;\t&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c &amp;lt;- dplyr::mutate(s2c, path = kal_dirs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>marts &amp;lt;- listMarts()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ensembl &amp;lt;- useMart(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &amp;lt;- listDatasets(ensembl)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filtered_datasets &amp;lt;- datasets[grepl(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;hsapiens&amp;#34;&lt;/span>, datasets$dataset), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hsapiens_mart &amp;lt;- useMart(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl&amp;#34;&lt;/span>,dataset=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;hsapiens_gene_ensembl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &amp;lt;- listDatasets(hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filtered_datasets &amp;lt;- datasets[grepl(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;hsapiens&amp;#34;&lt;/span>, datasets$dataset), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hsapiens_mart &amp;lt;- useMart(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl&amp;#34;&lt;/span>,dataset=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;hsapiens_gene_ensembl&amp;#34;&lt;/span>,host=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl.org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &amp;lt;- listDatasets(hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>t2g &amp;lt;- getBM(attributes = c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl_transcript_id_version&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0ff;font-weight:bold">&amp;#34;ensembl_gene_id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0ff;font-weight:bold">&amp;#34;description&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0ff;font-weight:bold">&amp;#34;external_gene_name&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mart = hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>head(t2g)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ttg &amp;lt;- dplyr::rename(t2g, target_id= ensembl_transcript_id_version, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ens_gene = ensembl_gene_id, ext_gene = external_gene_name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ttg &amp;lt;- dplyr::select(ttg, c(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;target_id&amp;#39;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;ens_gene&amp;#39;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;ext_gene&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>head(ttg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c$condition &amp;lt;- as.factor(s2c$condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c$condition &amp;lt;- relevel(s2c$condition, ref = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;con&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &amp;lt;- sleuth_prep(s2c, target_mapping = ttg,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aggregation_column = &lt;span style="color:#0ff;font-weight:bold">&amp;#39;ens_gene&amp;#39;&lt;/span>, extra_bootstrap_summary = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &amp;lt;- sleuth_fit(so, ~condition, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;full&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &amp;lt;- sleuth_fit(so, ~&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;reduced&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &amp;lt;- sleuth_lrt(so, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;reduced&amp;#39;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;full&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleuth_table_gene &amp;lt;- sleuth_results(so, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;reduced:full&amp;#39;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;lrt&amp;#39;&lt;/span>, show_all = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleuth_save(so, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;./sleuth_ward/150_con_so.sleuth&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>write_csv(sleuth_table_gene, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;./sleuth_ward/150_con.csv&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>DESeq2 워크플로우</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi10/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi10/</guid><description>&lt;h1 id="코드-deseq2-워크플로우">
 [코드] DESeq2 워크플로우
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c-deseq2-%ec%9b%8c%ed%81%ac%ed%94%8c%eb%a1%9c%ec%9a%b0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7084798e-4027-4b3f-9ed4-b5d815d05434" alt="image" />&lt;/p>
&lt;h2 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span># Input: genome_positions = list of genomic loci with H-scores
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># H_scores = dict {position: H_score}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Parameters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># MinPts = 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># eps_scale = 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># diminish_factor = 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initialize hotspots = []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># STEP 1. Search Candidate Core Mutation (CCM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>for position in genome_positions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> H = H_scores[position]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Deps = eps_scale * H
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> neighborhood = get_neighbors_within_deps(position, Deps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> avg_H = mean([H_scores[n] for n in neighborhood])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sum_H = sum([H_scores[n] for n in neighborhood])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_mutants = len([n for n in neighborhood if H_scores[n] &amp;gt; 0])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if H &amp;gt; 0.03 and avg_H &amp;gt; 0.01 and sum_H &amp;gt; 0.05 and num_mutants &amp;gt;= MinPts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mark position as CCM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># STEP 2. Cluster Expansion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>for ccm in CCM_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster = [ccm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current_Deps = eps_scale * H_scores[ccm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for direction in [-1, 1]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> step = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> while True:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> next_pos = ccm + direction * step
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if next_pos not in genome_positions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> break
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dist_from_ccm = abs(next_pos - ccm)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> diminishing_Deps = max(1, int(current_Deps - (dist_from_ccm / diminish_factor)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if dist_from_ccm &amp;gt; diminishing_Deps:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> break
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if H_scores[next_pos] &amp;gt; 0:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster.append(next_pos)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> step += 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if len(cluster) &amp;gt;= MinPts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hotspots.append(cluster)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Output: hotspots = list of identified mutation hotspot clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>DESeq2: DE 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi1/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi1/</guid><description>&lt;h1 id="deseq2-de-분석">
 DESeq2: DE 분석
 &lt;a class="anchor" href="#deseq2-de-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>suppressMessages({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;DESeq2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(pheatmap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(withr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007f7f">#library(tidyverse)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(RColorBrewer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(gplots)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> library(dplyr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set-path">
 Set path
 &lt;a class="anchor" href="#set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>setwd(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data-blog/bi1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data-blog/bi1&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="run-deseq2">
 Run DESeq2
 &lt;a class="anchor" href="#run-deseq2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>S1 &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;33&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S2 &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;150&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &amp;lt;- read.csv(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;results.csv&amp;#34;&lt;/span>, header=&lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>, sep=&lt;span style="color:#0ff;font-weight:bold">&amp;#39;,&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>colnames(countdata) &amp;lt;- c(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;GeneID&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-3&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &amp;lt;- countdata[, c(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;GeneID&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-3&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selected_columns &amp;lt;- paste(c(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;GeneID&amp;#39;&lt;/span>,paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-1&amp;#34;&lt;/span>), paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-2&amp;#34;&lt;/span>), paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-3&amp;#34;&lt;/span>),paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-1&amp;#34;&lt;/span>), paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-2&amp;#34;&lt;/span>), paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-3&amp;#34;&lt;/span>)), sep=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &amp;lt;- countdata[, selected_columns]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &amp;lt;- countdata[rowSums(countdata[, &lt;span style="color:#ff0;font-weight:bold">-1&lt;/span>]) != &lt;span style="color:#ff0;font-weight:bold">0&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample.names &amp;lt;- paste(c(paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-1&amp;#34;&lt;/span>), paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-2&amp;#34;&lt;/span>), paste0(S2,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-3&amp;#34;&lt;/span>),paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-1&amp;#34;&lt;/span>), paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-2&amp;#34;&lt;/span>), paste0(S1,&lt;span style="color:#0ff;font-weight:bold">&amp;#34;-3&amp;#34;&lt;/span>)), sep=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>conditions &amp;lt;- factor(c(S2,S2,S2,S1,S1,S1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata &amp;lt;- data.frame(Sample = sample.names, group = conditions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>N &amp;lt;- dim(countdata)[[2]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cData = countdata[,&lt;span style="color:#ff0;font-weight:bold">2&lt;/span>:N]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GeneID = countdata[,&lt;span style="color:#ff0;font-weight:bold">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rownames(cData) = GeneID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds &amp;lt;- DESeqDataSetFromMatrix(countData = cData,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> colData = metadata,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design = ~group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds$group &amp;lt;- relevel(dds$group, ref = S1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>colData(dds)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds &amp;lt;- DESeq(dds) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vsd &amp;lt;- vst(dds, blind=&lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rld &amp;lt;- rlogTransformation(dds, blind=&lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &amp;lt;- results(dds, contrast = c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;group&amp;#34;&lt;/span>, S2, S1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl &amp;lt;- as.data.frame(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl$GeneID &amp;lt;- rownames(res_tbl)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl &amp;lt;- res_tbl[order(res_tbl$padj), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NM_no_NA &amp;lt;- na.omit(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_cut &amp;lt;- NM_no_NA[NM_no_NA$padj&amp;lt;&lt;span style="color:#ff0;font-weight:bold">0.05&lt;/span>,]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_cut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># padj&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>val_str &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#39;padj&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cutoff &amp;lt;- &lt;span style="color:#ff0;font-weight:bold">0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cutoff_str &amp;lt;- as.character(cutoff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res &amp;lt;- dplyr::filter(res_tbl, padj &amp;lt; cutoff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res &amp;lt;- dplyr::arrange(sig_res, padj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res_file &amp;lt;- paste0(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;res_&amp;#39;&lt;/span>, S2, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;_&amp;#39;&lt;/span>, S1, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;_&amp;#39;&lt;/span>, val_str, cutoff_str, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;.csv&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f">#write.csv(sig_res, file = sig_res_file)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(paste0(S2, &lt;span style="color:#0ff;font-weight:bold">&amp;#39; vs &amp;#39;&lt;/span>, S1, &lt;span style="color:#0ff;font-weight:bold">&amp;#39; | &amp;#39;&lt;/span>, val_str, &lt;span style="color:#0ff;font-weight:bold">&amp;#39;&amp;lt;&amp;#39;&lt;/span>, cutoff_str))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_idx &amp;lt;- res$padj &amp;lt; cutoff &amp;amp; !is.na(res$padj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_dat &amp;lt;- assay(rld)[sig_idx, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>annC &amp;lt;- data.frame(condition = conditions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rownames(annC) &amp;lt;- colnames(sig_dat)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heat_colors &amp;lt;- brewer.pal(&lt;span style="color:#ff0;font-weight:bold">6&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;RdYlGn&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heat_colors_reversed &amp;lt;- rev(heat_colors)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ann_colors &amp;lt;- list(condition = setNames(c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;#F7819F&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;#58D3F7&amp;#34;&lt;/span>), c(S2, S1)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>A data.frame: 6 x 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sample	group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;chr&amp;gt;	&amp;lt;fct&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-1	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-2	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-3	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-1	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-2	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-3	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DataFrame with 6 rows and 2 columns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sample group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;character&amp;gt; &amp;lt;factor&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-1 150-1 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-2 150-2 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-3 150-3 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-1 33-1 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-2 33-2 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-3 33-3 33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>estimating size factors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>estimating dispersions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gene-wise dispersion estimates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mean-dispersion relationship
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>final dispersion estimates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fitting model and testing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log2 fold change (MLE): group 150 vs 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wald test p-value: group 150 vs 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DataFrame with 205 rows and 6 columns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> baseMean log2FoldChange lfcSE stat pvalue padj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ABHD2 50.721 1.352060 0.431587 3.13276 1.73168e-03 4.00143e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADAM12 706.120 -0.571960 0.168494 -3.39454 6.87431e-04 2.03489e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADD2 1819.643 0.868228 0.148791 5.83521 5.37230e-09 9.73246e-07
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AIF1L 144.513 1.168923 0.283764 4.11935 3.79938e-05 2.07318e-03
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AKAP5 1042.005 -0.637445 0.202189 -3.15271 1.61761e-03 3.81572e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF655 774.2459 -0.910286 0.198632 -4.58277 4.58855e-06 3.52229e-04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF682 59.7573 -1.382049 0.438336 -3.15295 1.61632e-03 3.81572e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF77 76.0271 -1.231188 0.388382 -3.17004 1.52417e-03 3.71126e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZRANB3 536.2301 -0.878732 0.179932 -4.88367 1.04128e-06 9.22422e-05
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZSCAN25 1257.3596 -0.460023 0.149161 -3.08408 2.04184e-03 4.57797e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[1] &amp;#34;150 vs 33 | padj&amp;lt;0.05&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/03bdf961-8b66-4321-89ce-9fa7f5c88849" alt="image" />&lt;/p></description></item><item><title>EBV RNA-seq 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi11/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi11/</guid><description>&lt;h1 id="ebv-rna-seq-전처리">
 EBV RNA-seq 전처리
 &lt;a class="anchor" href="#ebv-rna-seq-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>
&lt;p>분석 목적&lt;/p>
&lt;ul>
&lt;li>제공받은 fastq를 human genome에 매핑해서 전처리, 분석 후 DE 결과 보냄&lt;/li>
&lt;li>DE 분석시에 EBV 유전자도 포함해달라는 요청&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>해야하는것&lt;/p>
&lt;ul>
&lt;li>fastq를 EBV genome에 매핑해서 전처리, EBV count 생성&lt;/li>
&lt;li>human count에 EBV count를 붙이기&lt;/li>
&lt;li>통합 count로 DE 분석 재수행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="1-alignment">
 1. Alignment
 &lt;a class="anchor" href="#1-alignment">#&lt;/a>
&lt;/h2>
&lt;h3 id="load-package-set-path">
 Load package, Set Path
 &lt;a class="anchor" href="#load-package-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>library(edgeR)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(Rsubread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>library(org.Hs.eg.db)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>setwd(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data1/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="build-index">
 Build Index
 &lt;a class="anchor" href="#build-index">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># build index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ref &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/NC_007605.1.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>output_basename &amp;lt;- &lt;span style="color:#0ff;font-weight:bold">&amp;#34;NC_007605.1_idx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>buildindex(basename = output_basename, reference = ref)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="feature-count">
 Feature Count
 &lt;a class="anchor" href="#feature-count">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007f7f"># feature.count&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>targets &amp;lt;- read.delim(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;targets.txt&amp;#34;&lt;/span>, header=&lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>output.files &amp;lt;- c(targets$FileName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fc &amp;lt;- featureCounts(output.files, annot.inbuilt=&lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>, annot.ext = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/NC_007605.1.gtf&amp;#34;&lt;/span>, isGTFAnnotationFile = &lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GTF.featureType = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;exon&amp;#34;&lt;/span>, GTF.attrType = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;transcript_id&amp;#34;&lt;/span>, GTF.attrType.extra = &lt;span style="color:#fff;font-weight:bold">NULL&lt;/span>, isPairedEnd=&lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>, countReadPairs=&lt;span style="color:#fff;font-weight:bold">TRUE&lt;/span>)&lt;span style="color:#007f7f"># nthreads=30)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="save">
 Save
 &lt;a class="anchor" href="#save">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>colnames(fc$counts) &amp;lt;- c(&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;33-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;150-3&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-1&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-2&amp;#39;&lt;/span>,&lt;span style="color:#0ff;font-weight:bold">&amp;#39;con-3&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>head(fc$counts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>group &amp;lt;- factor(targets$Status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &amp;lt;- DGEList(fc$counts, group=group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fc$sort.counts &amp;lt;- fc$counts[order(rownames(fc$counts)), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort.counts.df &amp;lt;- as.data.frame(fc$sort.counts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort.counts.df$trans_id &amp;lt;- rownames(fc$sort.counts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort.counts.df &amp;lt;- sort.counts.df[, c(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;trans_id&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;33-1&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;33-2&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;33-3&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;150-1&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;150-2&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;150-3&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;con-1&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;con-2&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;con-3&amp;#34;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>write.table(sort.counts.df, file = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;count.tsv&amp;#34;&lt;/span>, sep = &lt;span style="color:#0ff;font-weight:bold">&amp;#34;\t&amp;#34;&lt;/span>, quote = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>, row.names = &lt;span style="color:#fff;font-weight:bold">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-annotation">
 2. Annotation
 &lt;a class="anchor" href="#2-annotation">#&lt;/a>
&lt;/h2>
&lt;h3 id="load-package">
 Load Package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">import&lt;/span> pandas &lt;span style="color:#fff;font-weight:bold">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set-path">
 Set Path
 &lt;a class="anchor" href="#set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>os.chdir(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os.getcwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data1/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="load-gtf-file">
 Load GTF file
 &lt;a class="anchor" href="#load-gtf-file">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>annotation 파일이 없어서 gtf reference 파일을 사용해서 직접 만들어줫다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>gtf_df = pd.read_csv(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/NC_007605.1.gtf&amp;#34;&lt;/span>, sep=&lt;span style="color:#0ff;font-weight:bold">&amp;#39;&lt;/span>&lt;span style="color:#0ff;font-weight:bold">\t&lt;/span>&lt;span style="color:#0ff;font-weight:bold">&amp;#39;&lt;/span>, header=&lt;span style="color:#fff;font-weight:bold">None&lt;/span>, comment=&lt;span style="color:#0ff;font-weight:bold">&amp;#34;#&amp;#34;&lt;/span>, names=[&lt;span style="color:#0ff;font-weight:bold">&amp;#34;seqname&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;source&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;feature&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;end&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;score&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;strand&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;frame&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;attribute&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtf_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/26526e85-9631-47b0-bcf8-a3e37da66d22" alt="image" />&lt;/p></description></item></channel></rss>