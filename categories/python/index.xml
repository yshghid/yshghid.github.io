<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Lifelog 2025</title><link>https://yshghid.github.io/categories/python/</link><description>Recent content in Python on Lifelog 2025</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 25 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yshghid.github.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>#1 DBSCAN</title><link>https://yshghid.github.io/docs/study/etc/etc1/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/etc/etc1/</guid><description>&lt;h1 id="1-dbscan">
 #1 DBSCAN
 &lt;a class="anchor" href="#1-dbscan">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-25&lt;/p>
&lt;hr>
&lt;h2 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h2>
&lt;p>DBSCAN은 밀도 기반 클러스터링 알고리즘으로&lt;/p>
&lt;ul>
&lt;li>데이터가 밀집된 영역을 클러스터로 인식하고&lt;/li>
&lt;li>밀도가 낮은 영역은 노이즈(이상치)로 간주하는 방법.&lt;/li>
&lt;/ul>
&lt;p>KMeans와 달리, 군집 수를 미리 정하지 않아도 되며,&lt;/p>
&lt;ul>
&lt;li>비선형 구조나 잡음이 있는 데이터에서 잘 작동한다.&lt;/li>
&lt;/ul>
&lt;h2 id="파라미터와-핵심-용어">
 파라미터와 핵심 용어
 &lt;a class="anchor" href="#%ed%8c%8c%eb%9d%bc%eb%af%b8%ed%84%b0%ec%99%80-%ed%95%b5%ec%8b%ac-%ec%9a%a9%ec%96%b4">#&lt;/a>
&lt;/h2>
&lt;p>주요 파라미터는 2개&lt;/p>
&lt;ul>
&lt;li>eps: 반지름 거리. 한 점에서 eps 거리 내에 있는 점들을 &amp;ldquo;이웃&amp;quot;이라고 판단.&lt;/li>
&lt;li>min_samples: core point로 인정되기 위해 필요한 최소 이웃 수&lt;/li>
&lt;/ul>
&lt;p>핵심 용어는 3개&lt;/p></description></item><item><title>#5 결과 검증: 계통 결정 돌연변이와 연관성</title><link>https://yshghid.github.io/docs/study/tech/tech35/</link><pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech35/</guid><description>&lt;h1 id="5-결과-검증-계통-결정-돌연변이와-연관성">
 #5 결과 검증: 계통 결정 돌연변이와 연관성
 &lt;a class="anchor" href="#5-%ea%b2%b0%ea%b3%bc-%ea%b2%80%ec%a6%9d-%ea%b3%84%ed%86%b5-%ea%b2%b0%ec%a0%95-%eb%8f%8c%ec%97%b0%eb%b3%80%ec%9d%b4%ec%99%80-%ec%97%b0%ea%b4%80%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-24&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>lineage_info_dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/home/ysh980101/2411/data/mutation_info&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>covid_annotation &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2404/Data/covid_annotation.tsv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/sig_hotspots.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lineage_info &lt;span style="color:#f92672">=&lt;/span> make_lineage_info(lineage_info_dir)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/458f5aa5-f2b0-4ec4-bad0-560f8b889d48" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hotspot_lineage &lt;span style="color:#f92672">=&lt;/span> make_hotspot_lineage(lineage_info, sig_hotspots_path, covid_annotation)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspot_lineage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/2df486b8-2ccb-4b68-a0dc-de452d3cb8a0" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>plot_hotspot_lineage(hotspot_lineage)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/0ecf300b-e844-42f9-910f-943604e5cddf" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspot_lineage&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">Supplementary_table_1.csv&amp;#34;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>만든건 저장.&lt;/p></description></item><item><title>#6 알고리즘 성능 평가 - k dist plot</title><link>https://yshghid.github.io/docs/study/tech/tech34/</link><pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech34/</guid><description>&lt;h1 id="6-알고리즘-성능-평가---k-dist-plot">
 #6 알고리즘 성능 평가 - k dist plot
 &lt;a class="anchor" href="#6-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%b1%eb%8a%a5-%ed%8f%89%ea%b0%80---k-dist-plot">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-24&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>indir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;result/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;result/GISAID_test1/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">GISAID_total.pickle&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;rb&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>resdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">clusters_test1.txt&amp;#34;&lt;/span>, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">sig_hotspots.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-k-dist-plot">
 3. K-dist plot
 &lt;a class="anchor" href="#3-k-dist-plot">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>kdist_plot(Input_df, hotspots, sig_hotspots, k&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech32/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech32/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-check-data">
 2. Check data
 &lt;a class="anchor" href="#2-check-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;res&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span>[d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir) &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>isdir(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(datadir, d))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(pids)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4589
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4589명 환자의 의료 데이터.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>cur_pid &lt;span style="color:#f92672">=&lt;/span> pids[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sev &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/SeverityScore.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lab &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Laboratory_processed.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>med &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Medication.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cur_pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(med)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>74374
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 [&amp;#39;Date&amp;#39;, &amp;#39;NEWS&amp;#39;, &amp;#39;WHO&amp;#39;, &amp;#39;SOFA&amp;#39;, &amp;#39;PBS&amp;#39;, &amp;#39;qPitt&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23 [&amp;#39;Date&amp;#39;, &amp;#39;ALT (U/L)&amp;#39;, &amp;#39;AST (U/L)&amp;#39;, &amp;#39;BUN (mg/dL)&amp;#39;, &amp;#39;Creatinine (mg/dL)&amp;#39;, &amp;#39;D-Dimer (ug/mL )&amp;#39;, &amp;#39;Ferritin (ng/mL)&amp;#39;, &amp;#39;HCO3 (mmol/L)&amp;#39;, &amp;#39;Hemoglobin (g/dL)&amp;#39;, &amp;#39;LDH (U/L)&amp;#39;, &amp;#39;Lymphocytes (%)&amp;#39;, &amp;#39;MDRD eGFR (mL/min/BSA)&amp;#39;, &amp;#39;Neutrophils (%)&amp;#39;, &amp;#39;O2 saturation (%)&amp;#39;, &amp;#39;PCO2 (mmHg)&amp;#39;, &amp;#39;PO2 (mmHg)&amp;#39;, &amp;#39;Platelet count (10^3/uL)&amp;#39;, &amp;#39;Potassium (mmol/L)&amp;#39;, &amp;#39;Sodium (mmol/L)&amp;#39;, &amp;#39;WBC count (10^3/uL)&amp;#39;, &amp;#39;hs-CRP (mg/dL)&amp;#39;, &amp;#39;pH ()&amp;#39;, &amp;#39;total CO2, calculated (mmol/L)&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date antimicrobials antimicrobials_dose antimicrobials_2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 Trizele 500.0mg/2 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 Trizele 500.0mg/3 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 Pospenem 1.0g/1 Pospenem 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 Pospenem 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> antimicrobials_2_dose antimicrobials_3 antimicrobials_3_dose 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2.0mg/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 1.0g/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 500.0mg/2 Vanco Kit 1.0g/1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>환자 &amp;lsquo;74374&amp;rsquo;를 확인해보면&lt;/p></description></item><item><title>#3 모델 구축</title><link>https://yshghid.github.io/docs/study/tech/tech33/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech33/</guid><description>&lt;h1 id="3-모델-구축">
 #3 모델 구축
 &lt;a class="anchor" href="#3-%eb%aa%a8%eb%8d%b8-%ea%b5%ac%ec%b6%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warnings&lt;span style="color:#f92672">.&lt;/span>filterwarnings(&lt;span style="color:#e6db74">&amp;#34;ignore&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lightning.pytorch &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.callbacks &lt;span style="color:#f92672">import&lt;/span> EarlyStopping, LearningRateMonitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.loggers &lt;span style="color:#f92672">import&lt;/span> TensorBoardLogger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting &lt;span style="color:#f92672">import&lt;/span> Baseline, TemporalFusionTransformer, TimeSeriesDataSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.data &lt;span style="color:#f92672">import&lt;/span> GroupNormalizer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> MAE, SMAPE, PoissonLoss, QuantileLoss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models.temporal_fusion_transformer.tuning &lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optimize_hyperparameters,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_forecasting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_lightning &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Forecasting:&amp;#34;&lt;/span>, pytorch_forecasting&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch:&amp;#34;&lt;/span>, torch&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Lightning:&amp;#34;&lt;/span>, pl&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>PyTorch Forecasting: 0.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch: 1.13.1+cu117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch Lightning: 1.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pytorch 및 관련 패키지 버전.&lt;/p></description></item><item><title>#5 타겟 넘버</title><link>https://yshghid.github.io/docs/study/tech/algo4/</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo4/</guid><description>&lt;h1 id="5-타겟-넘버">
 #5 타겟 넘버
 &lt;a class="anchor" href="#5-%ed%83%80%ea%b2%9f-%eb%84%98%eb%b2%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-22&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.&lt;/p>
&lt;p>-1+1+1+1+1 = 3&lt;/p>
&lt;p>+1-1+1+1+1 = 3&lt;/p>
&lt;p>+1+1-1+1+1 = 3&lt;/p>
&lt;p>+1+1+1-1+1 = 3&lt;/p>
&lt;p>+1+1+1+1-1 = 3&lt;/p>
&lt;p>사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.&lt;/p></description></item><item><title>#2 중요도 지표 계산</title><link>https://yshghid.github.io/docs/study/tech/tech30/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech30/</guid><description>&lt;h1 id="2-중요도-지표-계산">
 #2 중요도 지표 계산
 &lt;a class="anchor" href="#2-%ec%a4%91%ec%9a%94%eb%8f%84-%ec%a7%80%ed%91%9c-%ea%b3%84%ec%82%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-gisaid-data">
 2. Load GISAID data
 &lt;a class="anchor" href="#2-load-gisaid-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>indir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Input/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Refseq &lt;span style="color:#f92672">=&lt;/span> getNucleotideRefSeq()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GISAID_Freq &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">gisaid_freq_all.csv&amp;#39;&lt;/span>, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GISAID_meta &lt;span style="color:#f92672">=&lt;/span> get_GISAID_meta()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(GISAID_Freq)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> A C G T R Y S W K M B D H V N
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 10612 390 415 785 11 1 3 4 24 2 1 2 0 0 219995
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 287 502 218 12942 3 31 14 4 61 0 1 2 1 0 218179
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 166 461 348 18168 1 12 29 10 15 1 0 1 1 0 213032
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 19398 267 502 972 12 5 1 33 37 6 1 1 0 1 211009
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 24962 281 334 699 6 21 6 17 15 10 5 1 1 1 205886
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... .. .. .. .. .. .. .. .. .. .. ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29899 41707 36 38 100 1 0 2 5 0 3 0 0 1 0 190351
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29900 40483 30 25 99 8 1 0 2 1 4 0 1 0 0 191590
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29901 39258 25 19 22 1 0 0 4 1 1 0 0 0 0 192913
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29902 38015 23 22 19 1 0 0 5 0 1 0 0 0 0 194158
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29903 34729 18 32 99 0 3 0 4 0 3 0 0 1 0 197355
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[29903 rows x 15 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-calculate-h-score">
 3. Calculate H-score
 &lt;a class="anchor" href="#3-calculate-h-score">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calculate_hscore&lt;/span>(Refseq, Freq, N):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> Freq[[&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;T&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;G&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;C&amp;#39;&lt;/span>]]&lt;span style="color:#f92672">.&lt;/span>copy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i,row &lt;span style="color:#f92672">in&lt;/span> enumerate(Refseq):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df&lt;span style="color:#f92672">.&lt;/span>iloc[i][row] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">/&lt;/span>row&lt;span style="color:#f92672">.&lt;/span>sum(), axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_df &lt;span style="color:#f92672">=&lt;/span> per_df&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ent_df &lt;span style="color:#f92672">=&lt;/span> per_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: entropy(row, base&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>), axis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ent_df &lt;span style="color:#f92672">=&lt;/span> ent_df&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">.&lt;/span>sum(), axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ratio_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">.&lt;/span>sum()&lt;span style="color:#f92672">/&lt;/span>N, axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hscore_df &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>log2(ratio_df&lt;span style="color:#f92672">*&lt;/span>ent_df&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat([count_df, ratio_df, ent_df, hscore_df], axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, keys&lt;span style="color:#f92672">=&lt;/span>[FREQ, PER, ENT, HSCORE])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> Input_df&lt;span style="color:#f92672">.&lt;/span>reset_index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> Input_df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;index&amp;#39;&lt;/span>: POS}) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Input_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>N &lt;span style="color:#f92672">=&lt;/span> len(GISAID_meta)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input_df &lt;span style="color:#f92672">=&lt;/span> calculate_hscore(Refseq, GISAID_Freq, N)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(Input_df)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> Position Frequency Percentage Entropy H-score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 1 1590 0.007088 1.505823 1.047783
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2 1007 0.004489 1.494709 0.740711
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 3 975 0.004347 1.476319 0.715176
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 4 1741 0.007761 1.401635 1.062019
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 5 1314 0.005858 1.462576 0.892773
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29898 29899 174 0.000776 1.408897 0.149631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29899 29900 154 0.000687 1.295297 0.122905
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29900 29901 66 0.000294 1.575992 0.065393
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29901 29902 64 0.000285 1.580312 0.063624
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29902 29903 149 0.000664 1.236853 0.113909
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[29903 rows x 5 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-save">
 4. Save
 &lt;a class="anchor" href="#4-save">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Input_df&lt;span style="color:#f92672">.&lt;/span>to_pickle(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">GISAID_total.pickle&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#3 밀도 기반 클러스터링</title><link>https://yshghid.github.io/docs/study/tech/tech29/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech29/</guid><description>&lt;h1 id="3-밀도-기반-클러스터링">
 #3 밀도 기반 클러스터링
 &lt;a class="anchor" href="#3-%eb%b0%80%eb%8f%84-%ea%b8%b0%eb%b0%98-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-find-ccms">
 2. Find CCMs
 &lt;a class="anchor" href="#2-find-ccms">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Path(outdir)&lt;span style="color:#f92672">.&lt;/span>mkdir(parents&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, exist_ok&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#f92672">=&lt;/span> set_env(input &lt;span style="color:#f92672">=&lt;/span> input_path, output &lt;span style="color:#f92672">=&lt;/span> outdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input_df &lt;span style="color:#f92672">=&lt;/span> readPickle(input_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>init(Input_df, info)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo, ccms &lt;span style="color:#f92672">=&lt;/span> get_candidate_core_mutations(Input_df, info, tag, i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>--- Configurations ---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input data: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#39; (29903, 5)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Output dir: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_test1/&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parameters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min Eps=5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Max Eps=1000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min per_sum=0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Eps scaling factor=10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expansion diminishing factor=3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min cluster length=10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Searching candidate core mutations...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 CCMs found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>sample_ccm &lt;span style="color:#f92672">=&lt;/span> ccms[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo[sample_ccm]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>{&amp;#39;index&amp;#39;: 11,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Position&amp;#39;: 277,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Frequency&amp;#39;: 86,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Percentage&amp;#39;: 0.00038338430264178534,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Entropy&amp;#39;: 0.6078847228873923,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score&amp;#39;: 0.03323669788067187,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;length&amp;#39;: 12,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;freq_sum&amp;#39;: 1476,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;freq_avr&amp;#39;: 123.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;per_sum&amp;#39;: 0.0065799445430148274,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;per_avr&amp;#39;: 0.0005483287119179023,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;ent_sum&amp;#39;: 6.254087818941727,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;ent_avr&amp;#39;: 0.5211739849118106,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score_sum&amp;#39;: 0.15877807556629392,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score_avr&amp;#39;: 0.01323150629719116,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;eps_scaler&amp;#39;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;left_distance&amp;#39;: 5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;right_distance&amp;#39;: 5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;l_pos&amp;#39;: 272,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;r_pos&amp;#39;: 282,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;mut_n&amp;#39;: 11}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-perform-clustering">
 3. Perform clustering
 &lt;a class="anchor" href="#3-perform-clustering">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> dynaclust(mutInfo, ccms, info, tag, i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>Performing dynamic clustering...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 clusters found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merging clusters...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merged clusters: 477
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(hotspots)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> left_position right_position length \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 272 290 19 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 332 347 16 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 358 392 35 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 433 448 16 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 482 495 14 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.. ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>472 29568 29577 10 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>473 29581 29599 19 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>474 29613 29633 21 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>475 29640 29651 12 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>476 29654 29671 18 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mut_positions 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 272,273,274,275,277,278,279,280,281,282,283,28... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 332,334,335,336,337,338,341,343,344,345,346,347 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 358,360,361,362,363,364,365,366,367,368,369,37... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 433,435,436,437,438,439,440,441,442,443,444,44... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 482,483,485,487,488,489,490,491,493,495 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.. ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>472 29568,29570,29571,29572,29573,29574,29575,29577 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>473 29581,29583,29584,29585,29586,29587,29588,2958... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>474 29613,29615,29616,29617,29618,29619,29620,2962... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>475 29640,29641,29643,29645,29647,29648,29649,2965... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>476 29654,29655,29656,29657,29659,29660,29661,2966... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[477 rows x 4 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#4 결과 검증: 임상 결과와의 연관성</title><link>https://yshghid.github.io/docs/study/tech/tech31/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech31/</guid><description>&lt;h1 id="4-결과-검증-임상-결과와의-연관성">
 #4 결과 검증: 임상 결과와의 연관성
 &lt;a class="anchor" href="#4-%ea%b2%b0%ea%b3%bc-%ea%b2%80%ec%a6%9d-%ec%9e%84%ec%83%81-%ea%b2%b0%ea%b3%bc%ec%99%80%ec%9d%98-%ec%97%b0%ea%b4%80%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-covid19-data">
 2. Load COVID19 data
 &lt;a class="anchor" href="#2-load-covid19-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>covid19_dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data3/projects/2020_MUTCLUST/Data/Projects/COVID19/Sequence/Preprocessed/Nucleotide/Mutationinfo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meta_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/data/meta.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>resdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">clusters_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.txt&amp;#34;&lt;/span>,sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metaData &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(meta_path, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo &lt;span style="color:#f92672">=&lt;/span> make_mutInfo_covid19(covid19_dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutSignature &lt;span style="color:#f92672">=&lt;/span> make_mutSignature(mutInfo, hotspots, metaData)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(mutSignature)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> COV-CCO-001 COV-CCO-002 COV-CCO-003 COV-CCO-004 COV-CCO-006 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c0 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c1 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c2 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c3 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c4 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c472 0 1 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c473 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c474 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c475 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c476 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COV-CCO-008 COV-CCO-009 COV-CCO-010 COV-CCO-011 COV-CCO-013 ... \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c0 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c1 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c2 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c3 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c4 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c472 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c473 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c474 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c475 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c476 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[477 rows x 387 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-select-severity-related-hotspots">
 3. Select severity related hotspots
 &lt;a class="anchor" href="#3-select-severity-related-hotspots">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>sig_hotspots, significance &lt;span style="color:#f92672">=&lt;/span> select_sig_hotspots(mutSignature, metaData, hotspots)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>significance
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> Hotspot p-value FDR Significant
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 c22 1.882327e-07 4.489349e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 c90 1.158366e-03 2.051443e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 c118 9.750940e-15 1.162800e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 c123 8.587634e-14 6.827169e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 c124 1.051981e-03 2.007179e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 c198 2.827480e-10 1.123923e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 c239 5.739929e-16 2.737946e-13 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7 c258 1.489502e-08 4.301825e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8 c292 6.617715e-07 1.372457e-05 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9 c298 1.205966e-04 2.396858e-03 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10 c309 2.746212e-08 7.277461e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11 c315 7.603734e-08 1.908937e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>12 c319 5.323421e-07 1.154215e-05 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>13 c334 4.989612e-10 1.830804e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>14 c337 8.625002e-12 4.114126e-10 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>15 c350 4.178970e-07 9.492232e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>16 c364 9.750940e-15 1.162800e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>17 c385 4.112387e-13 2.802298e-11 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>18 c390 1.161194e-03 2.051443e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>19 c412 5.946573e-12 3.151684e-10 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>20 c429 3.073511e-09 9.773764e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>21 c431 7.755493e-14 6.827169e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>22 c438 1.929048e-09 6.572544e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23 c442 5.644954e-13 3.365804e-11 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>24 c444 1.362927e-15 3.250582e-13 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>25 c455 1.928137e-03 3.171454e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>26 c460 1.723333e-03 2.935821e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>27 c462 1.533145e-08 4.301825e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>28 c468 1.169796e-11 5.072662e-10 True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">sig_hotspots.csv&amp;#34;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>만든건 저장하기.&lt;/p></description></item><item><title>#5 Revision</title><link>https://yshghid.github.io/docs/study/tech/tech28/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech28/</guid><description>&lt;h1 id="5-revision">
 #5 Revision
 &lt;a class="anchor" href="#5-revision">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-19&lt;/p>
&lt;hr>
&lt;h3 id="reviewer-1---comment-1">
 Reviewer 1 - Comment 1
 &lt;a class="anchor" href="#reviewer-1---comment-1">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>&amp;ldquo;In the introduction section, the authors note that most computational methods focus on the frequency of mutation occurrences rather than mutation diversity. This point should be more thoroughly discussed, with a clear explanation of the advantages and potential insights offered by analyzing mutation diversity.&amp;rdquo;&lt;/p>
&lt;p>“서론에서 저자들은 대부분의 계산 방법들이 돌연변이 발생 빈도에 집중하고 있으며, 돌연변이 다양성(mutation diversity)을 간과한다고 언급하였습니다. 돌연변이 다양성을 분석하는 것의 장점과 잠재적인 통찰에 대해 보다 명확하게 논의해 주시기 바랍니다.”&lt;/p></description></item><item><title>#3 Density based clustering 알고리즘 - DBSCAN</title><link>https://yshghid.github.io/docs/study/tech/tech24/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech24/</guid><description>&lt;h1 id="3-density-based-clustering-알고리즘---dbscan">
 #3 Density based clustering 알고리즘 - DBSCAN
 &lt;a class="anchor" href="#3-density-based-clustering-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98---dbscan">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-유전체-돌연변이-연구와-dbscan">
 1. 유전체 돌연변이 연구와 DBSCAN
 &lt;a class="anchor" href="#1-%ec%9c%a0%ec%a0%84%ec%b2%b4-%eb%8f%8c%ec%97%b0%eb%b3%80%ec%9d%b4-%ec%97%b0%ea%b5%ac%ec%99%80-dbscan">#&lt;/a>
&lt;/h3>
&lt;p>유전체 돌연변이 연구에서 DBSCAN 또는 유사한 density-based clustering을 통해 군집을 식별하는 여러 연구가 있다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/110484c0-6644-49f9-bfa3-ee8460958a75" alt="image" />&lt;/p>
&lt;p>DBSCAN이 사용된 유전체 돌연변이 연구들은 서로 다른 바이러스나 유전체 영역을 분석했지만&lt;/p>
&lt;ul>
&lt;li>사용한 데이터에는 공통 특성이 있다.
&lt;ol>
&lt;li>변이의 비정규적 분포 (non-uniform):
&lt;ul>
&lt;li>돌연변이는 일정 위치에 집중되는 hotspot 현상을 보인다.
&lt;ul>
&lt;li>ex) spike 단백질 특정 영역에 몰림.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>클러스터 수 미정:
&lt;ul>
&lt;li>몇 개의 변이 집단(hotspot)이 존재하는지 사전 지식이 없다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>군집의 불규칙한 모양과 크기:
&lt;ul>
&lt;li>hotspot의 길이, 모양(밀도, 거리)이 다양하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>노이즈 존재:
&lt;ul>
&lt;li>무작위적 돌연변이, 측정 오류 등으로 인해 의미 없는 변이들(outlier)가 섞여 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-왜-density-based-clustering이-적절한가">
 2. 왜 density-based clustering이 적절한가?
 &lt;a class="anchor" href="#2-%ec%99%9c-density-based-clustering%ec%9d%b4-%ec%a0%81%ec%a0%88%ed%95%9c%ea%b0%80">#&lt;/a>
&lt;/h3>
&lt;p>DBSCAN의 기본 아이디어는&lt;/p></description></item><item><title>#4 Clustering 알고리즘의 parametric test</title><link>https://yshghid.github.io/docs/study/tech/tech25/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech25/</guid><description>&lt;h1 id="4-clustering-알고리즘의-parametric-test">
 #4 Clustering 알고리즘의 parametric test
 &lt;a class="anchor" href="#4-clustering-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98%ec%9d%98-parametric-test">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;p>정답 label이 없는 unsupervised learning인 clustering은 supervised learning과 달리 정확도, AUC curve 등으로 성능 평가 불가&lt;/p>
&lt;ul>
&lt;li>
&lt;p>정량적 평가 지표로는:&lt;/p>
&lt;ul>
&lt;li>Intra-cluster genetic distance (클러스터 내 유전 거리): 작을수록 내부 군집 응집도가 좋음&lt;/li>
&lt;li>Silhouette score, SSE, BIC 등의 지표 사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>그 외 방법으로는:&lt;/p>
&lt;ul>
&lt;li>방향성이 같은 또는 같지 않아야 하는 비교 feature를 선택하고 비교
&lt;ul>
&lt;li>ex) 계통학적 구조가 지리적 패턴과 일치함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>t‑SNE 시각화 등 시각적 확인
&lt;ul>
&lt;li>t‑SNE로 축소된 2D scatter plot 위에 DBSCAN으로 얻은 cluster를 색상별로 표시해서
&lt;ul>
&lt;li>군집 간의 명확한 경계, 군집 내 응집성이 시각적으로 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>#1 Entropy 기반 mutation 분석</title><link>https://yshghid.github.io/docs/study/tech/tech22/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech22/</guid><description>&lt;h1 id="1-entropy-기반-mutation-분석">
 #1 Entropy 기반 mutation 분석
 &lt;a class="anchor" href="#1-entropy-%ea%b8%b0%eb%b0%98-mutation-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="1-단백질-서열과-샤넌-엔트로피">
 1. 단백질 서열과 샤넌 엔트로피
 &lt;a class="anchor" href="#1-%eb%8b%a8%eb%b0%b1%ec%a7%88-%ec%84%9c%ec%97%b4%ea%b3%bc-%ec%83%a4%eb%84%8c-%ec%97%94%ed%8a%b8%eb%a1%9c%ed%94%bc">#&lt;/a>
&lt;/h3>
&lt;p>샤논 엔트로피는 단백질 서열 상 특정 위치에 다양한 아미노산이 얼마나 골고루 존재하는지를 나타내는 지표이다.&lt;/p>
&lt;ul>
&lt;li>어떤 위치에 여러 아미노산이 비슷한 비율로 존재한다면 엔트로피가 높고, 하나의 아미노산이 압도적으로 우세하다면 엔트로피가 낮다.&lt;/li>
&lt;/ul>
&lt;p>전통적인 샤논 엔트로피에 대한 해석은 논코딩 영역의 식별이다.&lt;/p>
&lt;ul>
&lt;li>염기의 돌연변이에 따른 아미노산의 결실 및 변동은
&lt;ul>
&lt;li>개체에 대부분은 부정적인 영향을 줌으로써 돌연변이를 가진 개체가 태어날 수 없게 할 확률이 높기 때문이다.&lt;/li>
&lt;li>하지만 일부 돌연변이는 개체의 발생에 영향을 주지 않으며,
&lt;ul>
&lt;li>극히 일부는 &amp;lsquo;살아남는 데 그치지 않고&amp;rsquo; 각기 다양한 방식으로 개체의 생존력을 높임으로써 &amp;lsquo;진화&amp;rsquo;의 원인이 되기도 한다. [1]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>이에 샤넌 엔트로피가 높은 위치,&lt;/p></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech20/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech20/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-data">
 Check data
 &lt;a class="anchor" href="#check-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>raw_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/res/sev_dict_filtered.pkl&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(raw_path, &lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> raw_data &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keys &lt;span style="color:#f92672">=&lt;/span> list(raw_data&lt;span style="color:#f92672">.&lt;/span>keys())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(keys))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(keys[&lt;span style="color:#ae81ff">0&lt;/span>], &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, raw_data[keys[&lt;span style="color:#ae81ff">0&lt;/span>]])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4515
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>74374 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date NEWS med_cnt med_list \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 4 2 Trizele;Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 4 2 Trizele;Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 12 2 Pospenem;Pospenem_2 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 9 3 Pospenem;Meropen;Vanco Kit 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 12 2 Vanco Kit;Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 8 2 Vanco Kit;Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 9 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strain 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4515명 환자 데이터이고&lt;/p></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech27/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech27/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-raw-data">
 2. Load raw data
 &lt;a class="anchor" href="#2-load-raw-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;res&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span>[d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir) &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>isdir(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(datadir, d))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(pids)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4589
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>datadir에 4589명 환자의 의료 데이터가 존재한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>cur_pid &lt;span style="color:#f92672">=&lt;/span> pids[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sev &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/SeverityScore.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lab &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Laboratory_processed.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>med &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Medication.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cur_pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(med)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>74374
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6, [&amp;#39;Date&amp;#39;, &amp;#39;NEWS&amp;#39;, &amp;#39;WHO&amp;#39;, &amp;#39;SOFA&amp;#39;, &amp;#39;PBS&amp;#39;, &amp;#39;qPitt&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23, [&amp;#39;Date&amp;#39;, &amp;#39;ALT (U/L)&amp;#39;, &amp;#39;AST (U/L)&amp;#39;, &amp;#39;BUN (mg/dL)&amp;#39;, &amp;#39;Creatinine (mg/dL)&amp;#39;, &amp;#39;D-Dimer (ug/mL )&amp;#39;, &amp;#39;Ferritin (ng/mL)&amp;#39;, &amp;#39;HCO3 (mmol/L)&amp;#39;, &amp;#39;Hemoglobin (g/dL)&amp;#39;, &amp;#39;LDH (U/L)&amp;#39;, &amp;#39;Lymphocytes (%)&amp;#39;, &amp;#39;MDRD eGFR (mL/min/BSA)&amp;#39;, &amp;#39;Neutrophils (%)&amp;#39;, &amp;#39;O2 saturation (%)&amp;#39;, &amp;#39;PCO2 (mmHg)&amp;#39;, &amp;#39;PO2 (mmHg)&amp;#39;, &amp;#39;Platelet count (10^3/uL)&amp;#39;, &amp;#39;Potassium (mmol/L)&amp;#39;, &amp;#39;Sodium (mmol/L)&amp;#39;, &amp;#39;WBC count (10^3/uL)&amp;#39;, &amp;#39;hs-CRP (mg/dL)&amp;#39;, &amp;#39;pH ()&amp;#39;, &amp;#39;total CO2, calculated (mmol/L)&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date antimicrobials antimicrobials_dose antimicrobials_2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 Trizele 500.0mg/2 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 Trizele 500.0mg/3 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 Pospenem 1.0g/1 Pospenem 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 Pospenem 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> antimicrobials_2_dose antimicrobials_3 antimicrobials_3_dose 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2.0mg/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 1.0g/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 500.0mg/2 Vanco Kit 1.0g/1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>환자 &amp;lsquo;74374&amp;rsquo;의 데이터를 예시로 확인해보면&lt;/p></description></item><item><title>#2 Mutation hotspot 발굴 알고리즘</title><link>https://yshghid.github.io/docs/study/tech/tech23/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech23/</guid><description>&lt;h1 id="2-mutation-hotspot-발굴-알고리즘">
 #2 Mutation hotspot 발굴 알고리즘
 &lt;a class="anchor" href="#2-mutation-hotspot-%eb%b0%9c%ea%b5%b4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;p>돌연변이는 무작위로 발생하지만&lt;/p>
&lt;ul>
&lt;li>실제 분포를 확인해보면 그렇지 않다.
&lt;ul>
&lt;li>엄연히 군집을 형성하고 있으며&lt;/li>
&lt;li>이는 해당 돌연변이의 &amp;lsquo;생존&amp;rsquo;에 관여한 외부 요인의 존재를 시사한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>논문 &amp;ldquo;Computational methods for detecting cancer hotspots&amp;quot;는&lt;/p>
&lt;ul>
&lt;li>암에서 반복적으로 관찰되는 돌연변이 즉 핫스팟(hotspot)을 식별하기 위한 계산적 방법 40여개를 리뷰하였는데
&lt;ul>
&lt;li>암에서 Hotspot mutation은 여러 환자에서 동일한 위치에 반복적으로 나타나는 돌연변이로써
&lt;ul>
&lt;li>우연히 발생할 가능성이 낮기 때문에 기능적 역할을 할 가능성이 높다고 간주됨에 따라
&lt;ul>
&lt;li>무의미한 hotspot을 거르고 중요한 hotspot 식별을 위한 여러 알고리즘이 고안되었다. [1]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>우리 데이터는 암 유전체가 아닌 바이러스 유전체이지만
&lt;ul>
&lt;li>돌연변이 빈도가 높은 위치를 hotspot mutation으로 보는 시각이 동일하며
&lt;ul>
&lt;li>우연히 발생할 가능성이 낮기 때문에 기능적 역할을 할 가능성이 높다 &amp;laquo; 라는 가정 또한 일치하므로
&lt;ul>
&lt;li>중요한 hotspot 식별을 위해 고안된 해당 알고리즘들은&lt;/li>
&lt;li>우리 알고리즘과 비교 대상으로 적절하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/2c5349e9-bb2f-482b-8dc0-0feea2918c93" alt="image" />&lt;/p></description></item><item><title>#2 베스트앨범</title><link>https://yshghid.github.io/docs/study/tech/algo2/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo2/</guid><description>&lt;h1 id="2-베스트앨범">
 #2 베스트앨범
 &lt;a class="anchor" href="#2-%eb%b2%a0%ec%8a%a4%ed%8a%b8%ec%95%a8%eb%b2%94">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h2 id="문제">
 문제
 &lt;a class="anchor" href="#%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h2>
&lt;p>#문제 설명&lt;/p>
&lt;p>스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은 다음과 같습니다.&lt;/p>
&lt;ol>
&lt;li>속한 노래가 많이 재생된 장르를 먼저 수록합니다.&lt;/li>
&lt;li>장르 내에서 많이 재생된 노래를 먼저 수록합니다.&lt;/li>
&lt;li>장르 내에서 재생 횟수가 같은 노래 중에서는 고유 번호가 낮은 노래를 먼저 수록합니다.&lt;/li>
&lt;/ol>
&lt;p>노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열 plays가 주어질 때, 베스트 앨범에 들어갈 노래의 고유 번호를 순서대로 return 하도록 solution 함수를 완성하세요.&lt;/p></description></item><item><title>#2 입력 feature 생성</title><link>https://yshghid.github.io/docs/study/tech/tech21/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech21/</guid><description>&lt;h1 id="2-입력-feature-생성">
 #2 입력 feature 생성
 &lt;a class="anchor" href="#2-%ec%9e%85%eb%a0%a5-feature-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> matplotlib.backends.backend_pdf &lt;span style="color:#f92672">import&lt;/span> PdfPages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-previous">
 2. Previous
 &lt;a class="anchor" href="#2-previous">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>seqdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;data/res_dict&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seq_list &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(seqdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(seq_list))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>169
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>항생제 169종에 대해서 size 10 sequence를 생성했었는데&lt;/p>
&lt;ul>
&lt;li>모델 입력 feature로 다음을 제외하는대신
&lt;ol>
&lt;li>antibiotics 리스트&lt;/li>
&lt;li>strain 리스트&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>저 2개 feature를 반영하는 새로운 feature를 2개 생성하려고 한다:
&lt;ol>
&lt;li>현재 antibiotics가 현재 strain 환자의 NEWS를 감소시킨 이력이 있는지? (binary: 0/1)&lt;/li>
&lt;li>현재 antibiotics가 NEWS를 감소시키는데 소요 기간은? (범주형: short/mid/long)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-create-feature1">
 3. Create feature1
 &lt;a class="anchor" href="#3-create-feature1">#&lt;/a>
&lt;/h3>
&lt;p>먼저 feature1을 생성하기 위해&lt;/p></description></item><item><title>#3 네트워크</title><link>https://yshghid.github.io/docs/study/tech/algo7/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo7/</guid><description>&lt;h1 id="3-네트워크">
 #3 네트워크
 &lt;a class="anchor" href="#3-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h2 id="문제">
 문제
 &lt;a class="anchor" href="#%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h2>
&lt;p>#문제 설명&lt;/p>
&lt;p>네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.&lt;/p>
&lt;p>컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.&lt;/p></description></item><item><title>#4 모델 학습</title><link>https://yshghid.github.io/docs/study/tech/tech26/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech26/</guid><description>&lt;h1 id="4-모델-학습">
 #4 모델 학습
 &lt;a class="anchor" href="#4-%eb%aa%a8%eb%8d%b8-%ed%95%99%ec%8a%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warnings&lt;span style="color:#f92672">.&lt;/span>filterwarnings(&lt;span style="color:#e6db74">&amp;#34;ignore&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lightning.pytorch &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.callbacks &lt;span style="color:#f92672">import&lt;/span> EarlyStopping, LearningRateMonitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.loggers &lt;span style="color:#f92672">import&lt;/span> TensorBoardLogger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting &lt;span style="color:#f92672">import&lt;/span> Baseline, TemporalFusionTransformer, TimeSeriesDataSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.data &lt;span style="color:#f92672">import&lt;/span> GroupNormalizer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> MAE, SMAPE, PoissonLoss, QuantileLoss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models.temporal_fusion_transformer.tuning &lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optimize_hyperparameters,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-check-version">
 2. Check version
 &lt;a class="anchor" href="#2-check-version">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_forecasting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_lightning &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Forecasting:&amp;#34;&lt;/span>, pytorch_forecasting&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch:&amp;#34;&lt;/span>, torch&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Lightning:&amp;#34;&lt;/span>, pl&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>PyTorch Forecasting: 0.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch: 1.13.1+cu117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch Lightning: 1.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-load-data">
 3. Load data
 &lt;a class="anchor" href="#3-load-data">#&lt;/a>
&lt;/h3></description></item><item><title>#4 완전범죄</title><link>https://yshghid.github.io/docs/study/tech/algo3/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo3/</guid><description>&lt;h1 id="4-완전범죄">
 #4 완전범죄
 &lt;a class="anchor" href="#4-%ec%99%84%ec%a0%84%eb%b2%94%ec%a3%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-19&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>A도둑과 B도둑이 팀을 이루어 모든 물건을 훔치려고 합니다. 단, 각 도둑이 물건을 훔칠 때 남기는 흔적이 누적되면 경찰에 붙잡히기 때문에, 두 도둑 중 누구도 경찰에 붙잡히지 않도록 흔적을 최소화해야 합니다.&lt;/p>
&lt;p>물건을 훔칠 때 조건은 아래와 같습니다.&lt;/p>
&lt;ul>
&lt;li>물건 i를 훔칠 때,
&lt;ul>
&lt;li>A도둑이 훔치면 &lt;code>info[i][0]&lt;/code>개의 A에 대한 흔적을 남깁니다.&lt;/li>
&lt;li>B도둑이 훔치면 &lt;code>info[i][1]&lt;/code>개의 B에 대한 흔적을 남깁니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>각 물건에 대해 A도둑과 B도둑이 남기는 흔적의 개수는 1 이상 3 이하입니다.&lt;/li>
&lt;/ul>
&lt;p>경찰에 붙잡히는 조건은 아래와 같습니다.&lt;/p></description></item><item><title>#1 완주하지 못한 선수</title><link>https://yshghid.github.io/docs/study/tech/algo1/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo1/</guid><description>&lt;h1 id="1-완주하지-못한-선수">
 #1 완주하지 못한 선수
 &lt;a class="anchor" href="#1-%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-16&lt;/p>
&lt;hr>
&lt;p>#문제 설명&lt;/p>
&lt;p>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.&lt;/p>
&lt;p>마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.&lt;/p>
&lt;p>#제한사항&lt;/p>
&lt;ul>
&lt;li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.&lt;/li>
&lt;li>completion의 길이는 participant의 길이보다 1 작습니다.&lt;/li>
&lt;li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.&lt;/li>
&lt;li>참가자 중에는 동명이인이 있을 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>#입출력 예&lt;/p></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 스택/큐</title><link>https://yshghid.github.io/docs/study/tech/tech8/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech8/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---스택큐">
 프로그래머스 알고리즘 고득점 kit - 스택/큐
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ec%8a%a4%ed%83%9d%ed%81%90">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">[스택/큐] 기능개발&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%98%ac%eb%b0%94%eb%a5%b8-%ea%b4%84%ed%98%b8">[스택/큐] 올바른 괄호&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4">[스택/큐] 프로세스&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%8b%a4%eb%a6%ac%eb%a5%bc-%ec%a7%80%eb%82%98%eb%8a%94-%ed%8a%b8%eb%9f%ad">[스택/큐] 다리를 지나는 트럭&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="기능개발">
 기능개발
 &lt;a class="anchor" href="#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">93&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">55&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">97&lt;/span>] speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>]이면
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">98&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>, answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> 종료
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(progresses, speeds):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(progresses)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses[i] &lt;span style="color:#f92672">+=&lt;/span> speeds[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses &lt;span style="color:#f92672">and&lt;/span> progresses[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speeds&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> cnt&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer&lt;span style="color:#f92672">.&lt;/span>append(cnt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42586">https://school.programmers.co.kr/learn/courses/30/lessons/42586&lt;/a>&lt;/p></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 해시, 정렬</title><link>https://yshghid.github.io/docs/study/tech/study2/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/study2/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---해시-정렬">
 프로그래머스 알고리즘 고득점 kit - 해시, 정렬
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ed%95%b4%ec%8b%9c-%ec%a0%95%eb%a0%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[해시] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%a0%84%ed%99%94%eb%b2%88%ed%98%b8-%eb%aa%a9%eb%a1%9d">[해시] 전화번호 목록&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%9d%98%ec%83%81">[해시] 의상&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[정렬] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#h-index">[정렬] H-Index&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%b2%a0%ec%8a%a4%ed%8a%b8%ec%95%a8%eb%b2%94">[해시] 베스트앨범&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="완주하지-못한-선수">
 완주하지 못한 선수
 &lt;a class="anchor" href="#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>participant &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completion &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kiki&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eden&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&lt;/span> Counter([&lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>} (key별로 value를 빼서 &lt;span style="color:#ae81ff">0&lt;/span>이나 음수되면 제거)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> Counter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> Counter(participant) &lt;span style="color:#f92672">-&lt;/span> Counter(completion)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list(answer&lt;span style="color:#f92672">.&lt;/span>keys())[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드2">
 코드2
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> participant&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> completion&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> p,c &lt;span style="color:#f92672">in&lt;/span> zip(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> p &lt;span style="color:#f92672">!=&lt;/span> c:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> participant[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42576">https://school.programmers.co.kr/learn/courses/30/lessons/42576&lt;/a>&lt;/p></description></item><item><title>딥러닝을 이용한 자연어 처리 입문 | BERT</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs14/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs14/</guid><description>&lt;h1 id="딥러닝-딥러닝을-이용한-자연어-처리-입문--bert">
 [딥러닝] 딥러닝을 이용한 자연어 처리 입문 | BERT
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%eb%94%a5%eb%9f%ac%eb%8b%9d%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9e%90%ec%97%b0%ec%96%b4-%ec%b2%98%eb%a6%ac-%ec%9e%85%eb%ac%b8--bert">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-03-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-03 구글 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-04-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-04 한국어 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-05-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-05 구글 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-06-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-06 한국어 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-02-버트bidirectional-encoder-representations-from-transformers-bert">
 17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)
 &lt;a class="anchor" href="#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>BERT?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>BERT는 문맥 정보를 반영한 임베딩(Contextual Embedding)을 사용함. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 모델이 학습하도록 설계된 방식.&lt;/li>
&lt;li>입/출력 구조
&lt;ul>
&lt;li>입력은 각 단어를 768차원의 임베딩 벡터로 변환한 것. ex) [CLS], I, love, you → 각각 768차원의 벡터로 변환.&lt;/li>
&lt;li>출력은 BERT의 내부 연산을 거쳐, 문맥을 반영한 768차원의 벡터로 변환된 것.&lt;/li>
&lt;li>문맥 반영? 입력된 단어의 벡터에 대한 출력 임베딩은 입력 문장의 모든 단어 정보를 반영한 벡터. [CLS] 벡터는 문장의 전체 정보를 요약한 벡터로 활용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>구조와 연산
&lt;ul>
&lt;li>BERT는 트랜스포머 인코더를 12층 쌓아 올린 구조.&lt;/li>
&lt;li>각 층에서 멀티헤드 셀프 어텐션(Multi-Head Self-Attention)**과 포지션 와이즈 피드포워드 네트워크(Position-wise Feed Forward Network) 연산을 수행해서 입력 단어가 다른 모든 단어와 상호작용하여 문맥 정보를 반영하도록 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>BERT의 서브워드 토크나이저: WordPiece&lt;/strong>&lt;/p></description></item><item><title>혼자 공부하는 딥러닝 | ANN</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs12/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs12/</guid><description>&lt;h1 id="딥러닝-혼자-공부하는-딥러닝--ann">
 [딥러닝] 혼자 공부하는 딥러닝 | ANN
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ed%98%bc%ec%9e%90-%ea%b3%b5%eb%b6%80%ed%95%98%eb%8a%94-%eb%94%a5%eb%9f%ac%eb%8b%9d--ann">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">17. 간단한 인공 신경망 모델 만들기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#18-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d%ec%97%90-%ec%b8%b5%ec%9d%84-%ec%b6%94%ea%b0%80%ed%95%98%ec%97%ac-%ec%8b%ac%ec%b8%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%a7%8c%eb%93%a4%ea%b8%b0">18. 인공 신경망에 층을 추가하여 심층 신경망 만들어 보기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#19-%ec%9d%b8%ea%b2%bd-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%ed%9b%88%eb%a0%a8%ec%9d%98-%eb%aa%a8%eb%b2%94-%ec%82%ac%eb%a1%80-%ed%95%99%ec%8a%b5%ed%95%98%ea%b8%b0">19. 인경 신경망 모델 훈련의 모범 사례 학습하기&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-간단한-인공-신경망-모델-만들기">
 17. 간단한 인공 신경망 모델 만들기
 &lt;a class="anchor" href="#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>데이터 준비&lt;/li>
&lt;/ol>
&lt;p>fashion_mnist 데이터셋에서 학습과 테스트용 이미지 데이터를 가져온다. 학습 데이터는 60,000개의 28x28 픽셀 이미지, 테스트 데이터는 10,000개의 28x28 픽셀 이미지. train_target과 test_target은 각 이미지에 해당하는 레이블(0~9)을 갖고있다.&lt;/p></description></item></channel></rss>