<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Lifelog 2025</title><link>https://yshghid.github.io/categories/python/</link><description>Recent content in Python on Lifelog 2025</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 17 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yshghid.github.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>#7 네트워크</title><link>https://yshghid.github.io/docs/study/tech/algo2/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo2/</guid><description>&lt;h1 id="7-네트워크">
 #7 네트워크
 &lt;a class="anchor" href="#7-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h2 id="문제">
 문제
 &lt;a class="anchor" href="#%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h2>
&lt;p>#문제 설명&lt;/p>
&lt;p>네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.&lt;/p>
&lt;p>컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.&lt;/p></description></item><item><title>#1 완주하지 못한 선수</title><link>https://yshghid.github.io/docs/study/tech/algo1/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo1/</guid><description>&lt;h1 id="1-완주하지-못한-선수">
 #1 완주하지 못한 선수
 &lt;a class="anchor" href="#1-%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-16&lt;/p>
&lt;hr>
&lt;p>#문제 설명&lt;/p>
&lt;p>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.&lt;/p>
&lt;p>마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.&lt;/p>
&lt;p>#제한사항&lt;/p>
&lt;ul>
&lt;li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.&lt;/li>
&lt;li>completion의 길이는 participant의 길이보다 1 작습니다.&lt;/li>
&lt;li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.&lt;/li>
&lt;li>참가자 중에는 동명이인이 있을 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>#입출력 예&lt;/p></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 스택/큐</title><link>https://yshghid.github.io/docs/study/tech/tech8/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech8/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---스택큐">
 프로그래머스 알고리즘 고득점 kit - 스택/큐
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ec%8a%a4%ed%83%9d%ed%81%90">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">[스택/큐] 기능개발&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%98%ac%eb%b0%94%eb%a5%b8-%ea%b4%84%ed%98%b8">[스택/큐] 올바른 괄호&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4">[스택/큐] 프로세스&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%8b%a4%eb%a6%ac%eb%a5%bc-%ec%a7%80%eb%82%98%eb%8a%94-%ed%8a%b8%eb%9f%ad">[스택/큐] 다리를 지나는 트럭&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="기능개발">
 기능개발
 &lt;a class="anchor" href="#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">93&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">55&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">97&lt;/span>] speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>]이면
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">98&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>, answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> 종료
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(progresses, speeds):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(progresses)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses[i] &lt;span style="color:#f92672">+=&lt;/span> speeds[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses &lt;span style="color:#f92672">and&lt;/span> progresses[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speeds&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> cnt&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer&lt;span style="color:#f92672">.&lt;/span>append(cnt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42586">https://school.programmers.co.kr/learn/courses/30/lessons/42586&lt;/a>&lt;/p></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 해시, 정렬</title><link>https://yshghid.github.io/docs/study/tech/study2/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/study2/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---해시-정렬">
 프로그래머스 알고리즘 고득점 kit - 해시, 정렬
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ed%95%b4%ec%8b%9c-%ec%a0%95%eb%a0%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[해시] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%a0%84%ed%99%94%eb%b2%88%ed%98%b8-%eb%aa%a9%eb%a1%9d">[해시] 전화번호 목록&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%9d%98%ec%83%81">[해시] 의상&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[정렬] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#h-index">[정렬] H-Index&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%b2%a0%ec%8a%a4%ed%8a%b8%ec%95%a8%eb%b2%94">[해시] 베스트앨범&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="완주하지-못한-선수">
 완주하지 못한 선수
 &lt;a class="anchor" href="#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>participant &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completion &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kiki&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eden&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&lt;/span> Counter([&lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>} (key별로 value를 빼서 &lt;span style="color:#ae81ff">0&lt;/span>이나 음수되면 제거)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> Counter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> Counter(participant) &lt;span style="color:#f92672">-&lt;/span> Counter(completion)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list(answer&lt;span style="color:#f92672">.&lt;/span>keys())[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드2">
 코드2
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> participant&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> completion&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> p,c &lt;span style="color:#f92672">in&lt;/span> zip(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> p &lt;span style="color:#f92672">!=&lt;/span> c:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> participant[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42576">https://school.programmers.co.kr/learn/courses/30/lessons/42576&lt;/a>&lt;/p></description></item><item><title>딥러닝을 이용한 자연어 처리 입문 | BERT</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs14/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs14/</guid><description>&lt;h1 id="딥러닝-딥러닝을-이용한-자연어-처리-입문--bert">
 [딥러닝] 딥러닝을 이용한 자연어 처리 입문 | BERT
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%eb%94%a5%eb%9f%ac%eb%8b%9d%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9e%90%ec%97%b0%ec%96%b4-%ec%b2%98%eb%a6%ac-%ec%9e%85%eb%ac%b8--bert">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-03-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-03 구글 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-04-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-04 한국어 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-05-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-05 구글 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-06-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-06 한국어 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-02-버트bidirectional-encoder-representations-from-transformers-bert">
 17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)
 &lt;a class="anchor" href="#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>BERT?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>BERT는 문맥 정보를 반영한 임베딩(Contextual Embedding)을 사용함. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 모델이 학습하도록 설계된 방식.&lt;/li>
&lt;li>입/출력 구조
&lt;ul>
&lt;li>입력은 각 단어를 768차원의 임베딩 벡터로 변환한 것. ex) [CLS], I, love, you → 각각 768차원의 벡터로 변환.&lt;/li>
&lt;li>출력은 BERT의 내부 연산을 거쳐, 문맥을 반영한 768차원의 벡터로 변환된 것.&lt;/li>
&lt;li>문맥 반영? 입력된 단어의 벡터에 대한 출력 임베딩은 입력 문장의 모든 단어 정보를 반영한 벡터. [CLS] 벡터는 문장의 전체 정보를 요약한 벡터로 활용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>구조와 연산
&lt;ul>
&lt;li>BERT는 트랜스포머 인코더를 12층 쌓아 올린 구조.&lt;/li>
&lt;li>각 층에서 멀티헤드 셀프 어텐션(Multi-Head Self-Attention)**과 포지션 와이즈 피드포워드 네트워크(Position-wise Feed Forward Network) 연산을 수행해서 입력 단어가 다른 모든 단어와 상호작용하여 문맥 정보를 반영하도록 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>BERT의 서브워드 토크나이저: WordPiece&lt;/strong>&lt;/p></description></item><item><title>혼자 공부하는 딥러닝 | ANN</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs12/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs12/</guid><description>&lt;h1 id="딥러닝-혼자-공부하는-딥러닝--ann">
 [딥러닝] 혼자 공부하는 딥러닝 | ANN
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ed%98%bc%ec%9e%90-%ea%b3%b5%eb%b6%80%ed%95%98%eb%8a%94-%eb%94%a5%eb%9f%ac%eb%8b%9d--ann">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">17. 간단한 인공 신경망 모델 만들기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#18-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d%ec%97%90-%ec%b8%b5%ec%9d%84-%ec%b6%94%ea%b0%80%ed%95%98%ec%97%ac-%ec%8b%ac%ec%b8%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%a7%8c%eb%93%a4%ea%b8%b0">18. 인공 신경망에 층을 추가하여 심층 신경망 만들어 보기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#19-%ec%9d%b8%ea%b2%bd-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%ed%9b%88%eb%a0%a8%ec%9d%98-%eb%aa%a8%eb%b2%94-%ec%82%ac%eb%a1%80-%ed%95%99%ec%8a%b5%ed%95%98%ea%b8%b0">19. 인경 신경망 모델 훈련의 모범 사례 학습하기&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-간단한-인공-신경망-모델-만들기">
 17. 간단한 인공 신경망 모델 만들기
 &lt;a class="anchor" href="#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>데이터 준비&lt;/li>
&lt;/ol>
&lt;p>fashion_mnist 데이터셋에서 학습과 테스트용 이미지 데이터를 가져온다. 학습 데이터는 60,000개의 28x28 픽셀 이미지, 테스트 데이터는 10,000개의 28x28 픽셀 이미지. train_target과 test_target은 각 이미지에 해당하는 레이블(0~9)을 갖고있다.&lt;/p></description></item></channel></rss>