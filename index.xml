<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>윤소의 블로그 (๑˘ ᵕ˘๑) on</title><link>https://yshghid.github.io/</link><description>Recent content in 윤소의 블로그 (๑˘ ᵕ˘๑) on</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 13 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yshghid.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>글</title><link>https://yshghid.github.io/docs/hobby/book/_index_prev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/_index_prev/</guid><description>&lt;h1 id="글">
 글
 &lt;a class="anchor" href="#%ea%b8%80">#&lt;/a>
&lt;/h1>
&lt;p>읽었던 재밌는글 모음.&lt;/p>
&lt;h2 id="2025">
 2025
 &lt;a class="anchor" href="#2025">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>06-02&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book39/">해소되지 않은 기분은 성격이 된다.&lt;/a>&lt;/p>
&lt;p>&lt;em>04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book15/">사건의 복리효과&lt;/a>&lt;/p>
&lt;h2 id="2024">
 2024
 &lt;a class="anchor" href="#2024">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book38/">자전거&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book37/">summer&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book36/">필승법&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book35/">생존법&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book34/">아이러니서클&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book33/">어른들의지휘&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book32/">새롭게얻은 부와 충동&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book31/">인간의 사교적인 행동을 배우려는 다른 행성의 관찰자&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book30/">위기모드&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book3/">결혼과 행복&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book29/">좋은 것들이 기다리고 있다는 약속&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book28/">그릿을 획득하기 vs 진실로의 창을 열어놓기.&lt;/a>&lt;/p>
&lt;p>&lt;em>12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book27/">자연은 인간의 사정을 봐주지 않는다 vs 운명의 형태를 만드는 것은 사람의 의지다.&lt;/a>&lt;/p></description></item><item><title>너무많은일</title><link>https://yshghid.github.io/docs/hobby/daily/daily2/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily2/</guid><description>&lt;h1 id="너무많은일">
 너무많은일
 &lt;a class="anchor" href="#%eb%84%88%eb%ac%b4%eb%a7%8e%ec%9d%80%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-10&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/33006e9f-3bf1-471b-ac08-7d6bd6245084" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/46f36942-1c3a-4c16-b5d3-fd0c989a30c0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/069d2dc3-7687-4275-a89e-4fb86c0fb961" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/86e4c698-6a59-45dd-bb8c-9603415577c8" alt="image" />&lt;/p>
&lt;p>사람때문에 힘들어진일을 사람한테 치유받고 정신차려서 일상에다시 올라탄 다음에 책을 읽어서 완전한 치유를 받고 +1 성장하고 다음 사이클로 들어가기&lt;/p>
&lt;p>를 마냥 반복중인데 .. 매번 조금씩 베리에이션이 있기때문에 기록은 항상 하는게 좋은거같음&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8a83fd74-23b4-431c-a5d7-6843b5ff9dbe" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/ed355b2d-14b1-42ef-ad28-6b424328b6b0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/0103c8c1-525e-4c5a-82fe-400932d743e1" alt="image" />&lt;/p></description></item><item><title>블로그 시작 (부제: 제발열심히살자..)</title><link>https://yshghid.github.io/docs/hobby/daily/daily1/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily1/</guid><description>&lt;h1 id="블로그-시작-부제-제발열심히살자">
 블로그 시작 (부제: 제발열심히살자..)
 &lt;a class="anchor" href="#%eb%b8%94%eb%a1%9c%ea%b7%b8-%ec%8b%9c%ec%9e%91-%eb%b6%80%ec%a0%9c-%ec%a0%9c%eb%b0%9c%ec%97%b4%ec%8b%ac%ed%9e%88%ec%82%b4%ec%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/a762c717-bdaa-49f8-b571-2cc865399440" alt="image" />&lt;/p>
&lt;p>최근에 무기력한 기분이 너무 오래가서&amp;hellip; 느슨해지다못해 일시정지해버린 일상에 긴장감을 주기 위해 블로그를 시작한다. 공부도 하기싫고 취준도 하기싫고 구냥 아무것도 하고싶지않다 ㅠㅠ&lt;/p>
&lt;p>오늘도 사실 랩미팅 피피티만들어야되는데 하기싫어서, 전에 오류나서 엎었던 블로그 다시 만들었다. 정말이지 일하는것빼고 다 재밌는듯.&lt;/p>
&lt;p>그리고 독감걸린동안 아무것도 안했는데 내일이면 휴가 끝나니까 그것도 너무 두렵다. 이제 몸은 안아픈데 정신이 아픈거같음.. ㅋㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/def9d163-fbf7-4f21-8fc0-0b58e8433195" alt="image" />&lt;/p>
&lt;p>일단 지금 해야되는일은&lt;/p>
&lt;ol>
&lt;li>SQL 공부 (시험일: 3.8)&lt;/li>
&lt;li>빅분기 필기 공부 (시험일: 4.5)&lt;/li>
&lt;li>ODE 모델 논문 찾아놓은거 읽고 피피티 만들기 (제일 급함)&lt;/li>
&lt;li>TCR-bert 모델 논문 보내주신거 읽기 (제일 많음)&lt;/li>
&lt;li>면접대비캠프 신청해놓음 (1.7-1.11)&lt;/li>
&lt;/ol>
&lt;p>이정도이고&lt;/p></description></item><item><title>경주🍀</title><link>https://yshghid.github.io/docs/hobby/daily/blog34/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog34/</guid><description>&lt;h1 id="경주">
 경주🍀
 &lt;a class="anchor" href="#%ea%b2%bd%ec%a3%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2024-11-03&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/133ede3d-789f-4dd7-8d3b-4dc70628c19b" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b182be15-8395-426d-aa05-4e0139c3744f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8778aeec-d809-4b5a-9838-f1be82da8ed2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/0fea6b2b-2b3b-4c78-a975-8affd178f322" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e6da014d-bd84-4f86-9539-5d2d86047ccb" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/20a38217-f949-4809-b9e6-22f92ec258f6" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/73a5c339-1d5a-4589-a17a-eec34ca763fb" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/81c8ef6e-7161-4b8b-a012-4a4ead1500b4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/66f202c8-cb72-4d20-91b1-c7249b9f5701" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f4b4e040-4cc2-4d44-8321-dc90db46b021" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e9e20684-277a-46f7-b259-e2b17fe4ddf9" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/398a8c46-a7a0-4707-8a3e-40aa84084658" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/70631848-c1bc-4a97-941e-c26bed2df086" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/96640dbd-a33e-4185-89e2-69a4157473d2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f8f92d3b-7b18-4041-84b9-29402a2c06e0" alt="image" />&lt;/p></description></item><item><title>진도🌾</title><link>https://yshghid.github.io/docs/hobby/daily/blog33/</link><pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog33/</guid><description>&lt;h1 id="진도">
 진도🌾
 &lt;a class="anchor" href="#%ec%a7%84%eb%8f%84">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-26&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/cdc02e3b-3a04-4dee-8b81-00b67461cecf" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b7a52c65-269a-401b-a2a5-38fc45536940" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b2ee0e9d-60d5-4bde-8e05-b1795c26892c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e63bb53d-13ed-4087-9a2a-d1777a7b8608" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/adc5fba7-d471-492a-a0ee-0f2a1462c2a9" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5677b39a-fe4d-4f6d-adef-31c8a49cbc3a" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4c412957-4989-4438-ba94-d5aedc490b0f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d29105e6-13d3-4d5a-801b-55bf56c19411" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/de7ab8c2-3c9a-4484-ac88-206fede69f33" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/76959fc2-7bcb-49d1-bf85-55092c19bb4c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/cd707dcd-1fb6-480d-9fc9-96ed8a9d0af7" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/2b4ba78e-e5ba-4608-87f6-4a1b95489b5a" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/686d617a-bc02-4aef-b19c-fa28cfd7a4d4" alt="image" />&lt;/p></description></item><item><title>수원/여주🦜🧡</title><link>https://yshghid.github.io/docs/hobby/daily/blog32/</link><pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog32/</guid><description>&lt;h1 id="수원여주">
 수원/여주🦜🧡
 &lt;a class="anchor" href="#%ec%88%98%ec%9b%90%ec%97%ac%ec%a3%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2024-06-21&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/b45f939a-1d8a-41a1-81ef-f4278d24f744" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8c529019-59c3-4746-b5a3-f2eee4379bce" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/48d673bc-d1aa-4dde-98c0-ef631cc985a0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/63a98eaf-789e-4d9e-afcd-ee8b156a26fb" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4c2c655b-e7aa-42df-9fc1-5ed6be553392" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/43885bb9-f014-4f43-924f-ef4f2f8c3924" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/2f81e59e-2226-4d18-ad9e-a3f86dd95f70" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/97169313-6c4a-4aef-a9cd-d5801278c252" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/df0cceb5-1729-4603-9808-c8b82f1d8337" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e9822c9c-4b40-413e-ab36-448e7e5f6a83" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e788f11e-e01d-40e7-b599-5a05f4b0628f" alt="image" />&lt;/p></description></item><item><title>제주🏝️</title><link>https://yshghid.github.io/docs/hobby/daily/blog31/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog31/</guid><description>&lt;h1 id="제주">
 제주🏝️
 &lt;a class="anchor" href="#%ec%a0%9c%ec%a3%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2024-05-01&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/571952df-5721-412b-bb08-dacfa3297d39" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4ac9b924-cc3f-4abe-bb04-3e073840c92a" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/60d24d34-eff3-4a79-a4df-b8a2ac6ae3b0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/254b2fce-14d3-43f7-95bd-32c917d311d6" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3660bce1-4ee9-4dde-b5bd-86f62f089e57" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/c275ea69-23c4-4ddf-8f3c-403ff84ea7e5" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/70024edc-4c8f-42f4-8e6b-6943cdfe30ae" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b66b7624-2221-4ffd-aa65-e78a0b00d546" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/26b8a92d-b120-450b-81bc-e7d7852782a0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5fbb1e8e-2668-4833-b167-480e1141e96c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e147c5aa-916c-476b-9591-5311f253b4a4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/fdf5c2f0-6eea-4e0c-9e40-1a57a6f793e2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a63e2534-f5a4-4d11-a15d-55470776a748" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/ba4e2a6b-3a2d-46ca-89f7-823acb0ed854" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8375de14-9c7a-40af-abab-894480eb5e82" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/6481cf19-196f-40d3-a5b2-56a110017116" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/11c69ac0-f1d9-425d-b965-86aeca4cf28e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/253ea6cb-fe8a-41b5-91f2-7b7ca7132070" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/dec72e56-79ba-4b51-a94c-3f2f6ebe704e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/6cce44d7-6051-4daf-b76c-8e8f9f4916c4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/68c69d96-e9db-439d-a7f0-20cd3833799f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/33c54a1d-cf58-4f1b-b239-6f73e56cc700" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/715beae2-8b01-4ba5-a803-9d423b69b1c8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f813940b-5ba6-40f9-8956-50ec211a6a29" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/574a929a-5fad-41d4-bdff-9e1afdd57239" alt="image" />&lt;/p></description></item><item><title>엄마랑 갑자기 서울!!</title><link>https://yshghid.github.io/docs/hobby/daily/blog35/</link><pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog35/</guid><description>&lt;h1 id="엄마랑-갑자기-서울">
 엄마랑 갑자기 서울!!
 &lt;a class="anchor" href="#%ec%97%84%eb%a7%88%eb%9e%91-%ea%b0%91%ec%9e%90%ea%b8%b0-%ec%84%9c%ec%9a%b8">#&lt;/a>
&lt;/h1>
&lt;p>#2024-03-09&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/edc1c3b5-afa5-4767-a1dd-7680d8213a22" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b1661ec7-1a14-4527-80e0-5967a1f2d381" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e0b4fbc5-f9f3-4508-a30b-2a5f1b11ca0c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/41b32403-03ff-48d0-a41f-2325fe30208d" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5f7cc2de-a192-4c72-a15c-81128759bfe2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1ba2450e-09c4-4107-bb27-2eeeeb1d75b3" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8bac073d-a726-41bf-8e84-89d32fa4b7c1" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1fa04112-df83-4397-b762-69cf667613d2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d3f60bf9-28e8-4c0c-8ce2-de2ceba83bd8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4d7a43b2-3d4f-4ebf-bdfe-c221279b7558" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/9a6727e4-5fcf-4683-a8e8-123ab32aac73" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/2d3374d4-3eb3-48f7-a65d-47c65e0586ca" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/fa062139-8540-4f2e-9ded-46ab74f78339" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/cc5bf3c7-ca34-4bcd-86c6-44e649b76967" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/62e5b4af-89f1-4a66-8d40-34378190668e" alt="image" />&lt;/p></description></item><item><title>졸업식</title><link>https://yshghid.github.io/docs/hobby/daily/blog36/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog36/</guid><description>&lt;h1 id="졸업식">
 졸업식
 &lt;a class="anchor" href="#%ec%a1%b8%ec%97%85%ec%8b%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2023-08-18&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ce061b1f-f430-43ea-b2ec-a39e517939f4" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/2aaf5a48-8519-48c4-9b73-7eb906043f18" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/fb27031c-95a7-4c81-b1d3-cdbbed5037a5" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/015c0ca0-f844-4cca-bbc8-9b5cfc8c5b24" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/875e50dc-242d-4d6d-8e75-740e6489a016" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e01952ab-43c8-4d16-af9c-0a293986bd32" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/bb7f1b99-e930-4eb1-94da-2cefbbd713f6" alt="image" />&lt;/p></description></item><item><title>python #2 객체지향 프로그래밍, 병렬처리</title><link>https://yshghid.github.io/docs/study/sw/sw21/</link><pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw21/</guid><description>&lt;h1 id="python-2-객체지향-프로그래밍-병렬처리">
 python #2 객체지향 프로그래밍, 병렬처리
 &lt;a class="anchor" href="#python-2-%ea%b0%9d%ec%b2%b4%ec%a7%80%ed%96%a5-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%b3%91%eb%a0%ac%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-13&lt;/p>
&lt;hr>
&lt;h3 id="1-객체지향-프로그래밍-병렬처리">
 1. 객체지향 프로그래밍, 병렬처리
 &lt;a class="anchor" href="#1-%ea%b0%9d%ec%b2%b4%ec%a7%80%ed%96%a5-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-%eb%b3%91%eb%a0%ac%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#1 property &amp;amp; dataclass&lt;/mark> (p.139-140)&lt;/p>
 &lt;img width="490" height="311.5" alt="image" src="https://github.com/user-attachments/assets/0cd4a773-af47-4e60-9a70-4cad3db0adec" />
 &lt;img width="488" height="340" alt="image" src="https://github.com/user-attachments/assets/c478b989-8c01-476e-96e4-59ba42d657cc" />
&lt;p>@property&lt;/p>
&lt;ul>
&lt;li>diameter 메서드는 사실 _radius * 2라는 계산을 수행하지만 외부에선 c.diameter라고 쓰면 바로 10이라는 결과를 얻을 수 있다.&lt;/li>
&lt;li>@diameter.setter를 사용하면 c.diameter = 20 형태로 diameter을 수정할수있고
&lt;ul>
&lt;li>내부에서는 diameter을 받아 _radius=10으로 변환 저장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>fastapi에서 젤많이쓰는 기능이 속성화이다.&lt;/li>
&lt;/ul>
&lt;p>@dataclass&lt;/p>
&lt;ul>
&lt;li>보통 클래스를 만들면 __init__으로 생성자, __repr__으로 객체 출력 형식, __eq__로 동등성 비교 등을 직접 정의해야 하는데 @dataclass를 붙이면 이런 메서드들이 자동 생성된다.&lt;/li>
&lt;li>Point 클래스는 x, y 좌표만 Point(1,2)로 정의했는데 이 상태로 객체 p1, p2를 생성하고 출력하면 Point(x=1, y=2)처럼 형식맞춰 나온다.
&lt;ul>
&lt;li>그리고 == 비교 시 자동으로 True도 나온다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#2 @property&lt;/mark>&lt;/p></description></item><item><title>python #1 기본문법, 가상환경, 로깅</title><link>https://yshghid.github.io/docs/study/sw/sw19/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw19/</guid><description>&lt;h1 id="python-1-기본문법-가상환경-로깅">
 python #1 기본문법, 가상환경, 로깅
 &lt;a class="anchor" href="#python-1-%ea%b8%b0%eb%b3%b8%eb%ac%b8%eb%b2%95-%ea%b0%80%ec%83%81%ed%99%98%ea%b2%bd-%eb%a1%9c%ea%b9%85">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-12&lt;/p>
&lt;hr>
&lt;h3 id="1-기본문법">
 1. 기본문법
 &lt;a class="anchor" href="#1-%ea%b8%b0%eb%b3%b8%eb%ac%b8%eb%b2%95">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#1 break와 continue의 차이&lt;/mark> (p.29)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">10&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">5&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>break
&lt;ul>
&lt;li>0부터 9까지 세는 반복문에서 i가 5가 되는 순간 break를 만나면 그 뒤의 숫자는 전혀 세지 않고 반복이 끝난다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>continue
&lt;ul>
&lt;li>0부터 4까지 세는 반복문에서 i가 2인 경우 continue를 만나면 2를 출력하지 않고 바로 다음 숫자인 3으로 넘어가고 반복문 자체는 끝나지 않는다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#2 가변 인자&lt;/mark> (p.78)&lt;/p></description></item><item><title>python #2 리스트 vs 제너레이터 비교 실습</title><link>https://yshghid.github.io/docs/study/sw/sw20/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw20/</guid><description>&lt;h1 id="python-2-리스트-vs-제너레이터-비교-실습">
 python #2 리스트 vs 제너레이터 비교 실습
 &lt;a class="anchor" href="#python-2-%eb%a6%ac%ec%8a%a4%ed%8a%b8-vs-%ec%a0%9c%eb%84%88%eb%a0%88%ec%9d%b4%ed%84%b0-%eb%b9%84%ea%b5%90-%ec%8b%a4%ec%8a%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-12&lt;/p>
&lt;hr>
&lt;h3 id="1-100만-개의-숫자-합-구하기">
 1. 100만 개의 숫자 합 구하기
 &lt;a class="anchor" href="#1-100%eb%a7%8c-%ea%b0%9c%ec%9d%98-%ec%88%ab%ec%9e%90-%ed%95%a9-%ea%b5%ac%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>1) 리스트 방식&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1) 리스트 방식&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>numbers &lt;span style="color:#f92672">=&lt;/span> list(range(&lt;span style="color:#ae81ff">1000000&lt;/span>)) &lt;span style="color:#75715e"># 0부터 999,999 리스트 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>list_sum &lt;span style="color:#f92672">=&lt;/span> sum(numbers) &lt;span style="color:#75715e"># 합계 구하기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>list_mem &lt;span style="color:#f92672">=&lt;/span> sys&lt;span style="color:#f92672">.&lt;/span>getsizeof(numbers) &lt;span style="color:#75715e"># 메모리 사용량 확인 (리스트 객체 크기)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;리스트 합: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>list_sum&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">,&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;리스트 메모리 사용량: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>list_mem&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> bytes&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>리스트 합: 499,999,500,000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>리스트 메모리 사용량: 8000056 bytes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>numbers=list(range(1000000)) -&amp;gt; sum(numbers)
&lt;ul>
&lt;li>0~999,999를 리스트(numbers)로 만들어 합계를 구함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>sys.getsizeof(numbers)
&lt;ul>
&lt;li>리스트 객체의 크기를 바이트 단위로 반환&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>2) 제너레이터 방식&lt;/mark>&lt;/p></description></item><item><title>학위논문작업 #5 코드 리펙토링 계획</title><link>https://yshghid.github.io/docs/study/algorithm/algo17/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo17/</guid><description>&lt;h1 id="학위논문작업-5-코드-리펙토링-계획">
 학위논문작업 #5 코드 리펙토링 계획
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-5-%ec%bd%94%eb%93%9c-%eb%a6%ac%ed%8e%99%ed%86%a0%eb%a7%81-%ea%b3%84%ed%9a%8d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-12&lt;/p>
&lt;hr>
&lt;h3 id="1-objective">
 1. Objective
 &lt;a class="anchor" href="#1-objective">#&lt;/a>
&lt;/h3>
&lt;p>로그 뽑기 작업하면서&lt;/p>
&lt;ul>
&lt;li>변수이름이 너무 직관적이지않은거같기도 하고&lt;/li>
&lt;li>주석도 깔끔하게 달면 좋을것같아서&lt;/li>
&lt;li>클러스터링 관련 함수만이라도 리펙토링 작업을 해볼려고한다.&lt;/li>
&lt;li>그리고 어제 수업시간에 로그를 print로 뽑는게 비효율적이라고하셔서 log 적용도 해볼려고한다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-pipeline">
 2. Pipeline
 &lt;a class="anchor" href="#2-pipeline">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#1 Load package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#2 Set params&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Path(outdir)&lt;span style="color:#f92672">.&lt;/span>mkdir(parents&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, exist_ok&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#f92672">=&lt;/span> set_env(input &lt;span style="color:#f92672">=&lt;/span> input_path, output &lt;span style="color:#f92672">=&lt;/span> outdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input_df &lt;span style="color:#f92672">=&lt;/span> readPickle(input_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>init(Input_df, info)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#3 Find CCM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo, ccms &lt;span style="color:#f92672">=&lt;/span> get_candidate_core_mutations(Input_df, info, tag, i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#4 Perform clustering&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> dynaclust(mutInfo, ccms, info, tag, i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>--- Configurations ---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input data: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#39; (29903, 5)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Output dir: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_test1/&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parameters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min Eps=5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Max Eps=1000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min per_sum=0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Eps scaling factor=10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expansion diminishing factor=3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min cluster length=10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Searching candidate core mutations...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 CCMs found.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Performing dynamic clustering...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 clusters found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merging clusters...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merged clusters: 477
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>전체 파이프라인은 이렇고 이중에 dynaclust 관련 함수를 수정볼 예정이고&lt;/p></description></item><item><title>학위논문작업 #5 코드 리펙토링 계획</title><link>https://yshghid.github.io/docs/study/algorithm/algo18/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo18/</guid><description>&lt;h1 id="학위논문작업-5-코드-리펙토링-계획">
 학위논문작업 #5 코드 리펙토링 계획
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-5-%ec%bd%94%eb%93%9c-%eb%a6%ac%ed%8e%99%ed%86%a0%eb%a7%81-%ea%b3%84%ed%9a%8d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-12&lt;/p>
&lt;hr></description></item><item><title>MLOps #1</title><link>https://yshghid.github.io/docs/study/ai/ai20/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai20/</guid><description>&lt;h1 id="mlops-1">
 MLOps #1
 &lt;a class="anchor" href="#mlops-1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-11&lt;/p>
&lt;hr>
&lt;h3 id="실습">
 실습
 &lt;a class="anchor" href="#%ec%8b%a4%ec%8a%b5">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>메이크파일, 린팅, 테스트와 같이 파이썬 프로젝트 스캐폴딩에 필수적인 요소가 포함된 깃허브 저장소를 생성해보자. 그리고 간단하게 코드 포매팅을 수행하도록 메이크파일 스크립트를 작성해보자.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>깃허브 액션을 사용하여 두개 이상의 파이썬 버전에 대해 깃허브 프로젝트 테스트를 수행해보자.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>클라우드 네이티브 빌드 서버(AWS 코드빌드, GCP 클라우드 빌드, 애저 DevOps 파이프라인)를 사용하여 지속적 통합을 수행해보자.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>깃허브 프로젝트를 도커 파일로 컨테이너화하고, 자동으로 컨테이너 레지스트리에 새로운 컨테이너가 등록되도록 만들어보자.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>locust 또는 loader io와 같은 부하 테스트 프레임워크를 사용하여 애플리케이션에 대한 간단한 부하 테스트 코드를 작성한다. 그리고 스테이징 브랜치에 변경 사항을 푸시할 때 이 테스트가 자동으로 수행되도록 만들어보자.&lt;/p></description></item><item><title>학위논문작업 #3 클러스터링 로그 뽑기 (2)</title><link>https://yshghid.github.io/docs/study/algorithm/algo16/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo16/</guid><description>&lt;h1 id="학위논문작업-3-클러스터링-로그-뽑기-2">
 학위논문작업 #3 클러스터링 로그 뽑기 (2)
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-3-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81-%eb%a1%9c%ea%b7%b8-%eb%bd%91%ea%b8%b0-2">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-11&lt;/p>
&lt;hr>
&lt;h3 id="1-init">
 1. Init
 &lt;a class="anchor" href="#1-init">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Start expand_cluster: left_cur_dist=0, right_cur_dist=0, es_l=1, left_max_dist=5, right_max_dist=5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;mark>es_l=1&lt;/mark>, &lt;mark>left_max_dist=5&lt;/mark>, es_r=1, right_max_dist=5&lt;/li>
&lt;li>초기 반경 mut_deps: 5*1 = 5 bp&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-left-expansion">
 2. Left expansion
 &lt;a class="anchor" href="#2-left-expansion">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28623, ld=1, updated es_l=1.0, mut_deps=5.0, left_max_dist=5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ld = 1
&lt;ul>
&lt;li>
&lt;p>확장 가능?&lt;/p>
&lt;ul>
&lt;li>ld = POS(center) - POS(28623) = 1&lt;/li>
&lt;li>현재 한도 left_max_dist(0)=5 이므로 ld(=1) ≤ 5 여서 확장 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>scaler update?&lt;/p></description></item><item><title>학위논문작업 #4 클러스터링 로그 뽑기 (3)</title><link>https://yshghid.github.io/docs/study/algorithm/algo15/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo15/</guid><description>&lt;h1 id="학위논문작업-4-클러스터링-로그-뽑기-3">
 학위논문작업 #4 클러스터링 로그 뽑기 (3)
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-4-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81-%eb%a1%9c%ea%b7%b8-%eb%bd%91%ea%b8%b0-3">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-11&lt;/p>
&lt;hr>
&lt;h3 id="1-previous">
 1. Previous
 &lt;a class="anchor" href="#1-previous">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Start expand_cluster: left_cur_dist=0, right_cur_dist=0, es_l=1, left_max_dist=5, right_max_dist=5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28623, ld=1, updated es_l=1.0, mut_deps=5.0, left_max_dist=5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28622, ld=2, updated es_l=1.0, mut_deps=5.0, left_max_dist=5.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28621, ld=3, updated es_l=1.6666666666666665, mut_deps=8.333333333333332, left_max_dist=5.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28620, ld=4, updated es_l=1.4444444444444444, mut_deps=7.222222222222222, left_max_dist=8.333333333333332
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28619, ld=5, updated es_l=1.2962962962962963, mut_deps=6.481481481481481, left_max_dist=7.222222222222222
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ccm_idx 28624] Left expansion: left_index=28618, ld=6, updated es_l=3.197530864197531, mut_deps=15.987654320987655, left_max_dist=6.481481481481481
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Init&lt;/mark>&lt;/p></description></item><item><title>학위논문작업 #2 클러스터링 로그 뽑기</title><link>https://yshghid.github.io/docs/study/algorithm/algo14/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo14/</guid><description>&lt;h1 id="학위논문작업-2-클러스터링-로그-뽑기">
 학위논문작업 #2 클러스터링 로그 뽑기
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-2-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81-%eb%a1%9c%ea%b7%b8-%eb%bd%91%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-10&lt;/p>
&lt;hr>
&lt;h3 id="objective">
 Objective
 &lt;a class="anchor" href="#objective">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>MutClust의 기존 코드에서는 클러스터링 수행후 클러스터 정보만 출력할뿐 neighbor eps scaler에 따른 ccm eps scaler의 업데이트와 그에 따른 eps 업데이트 내역을 따로 빼진 않았었다.&lt;/li>
&lt;li>근데 클러스터링 과정을 설명하기에 좋은 예시를 만들기가 어려워서 (기존 예시는 맘에 안들고..) 그냥 로그를 다 뽑고 괜찮아 보이는걸 건져보기로 했다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="1-로깅-코드-추가하기">
 1. 로깅 코드 추가하기
 &lt;a class="anchor" href="#1-%eb%a1%9c%ea%b9%85-%ec%bd%94%eb%93%9c-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;p>일단 로그는 총 4번뽑을건데&lt;/p>
&lt;ol>
&lt;li>시작 (left_cur_dist &amp;amp; right_cur_dist=0일때)&lt;/li>
&lt;li>Left expansion 과정&lt;/li>
&lt;li>Right expansion 과정&lt;/li>
&lt;li>최종 결과&lt;/li>
&lt;/ol>
&lt;p>이렇게뽑을려고한다.&lt;/p></description></item><item><title>생성형 AI #1 생성형 AI 기초 및 Prompt Engineering</title><link>https://yshghid.github.io/docs/study/ai/ai18/</link><pubDate>Sat, 09 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai18/</guid><description>&lt;h1 id="생성형-ai-1-생성형-ai-기초-및-prompt-engineering">
 생성형 AI #1 생성형 AI 기초 및 Prompt Engineering
 &lt;a class="anchor" href="#%ec%83%9d%ec%84%b1%ed%98%95-ai-1-%ec%83%9d%ec%84%b1%ed%98%95-ai-%ea%b8%b0%ec%b4%88-%eb%b0%8f-prompt-engineering">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-09&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#1 RAG&lt;/mark> (p.27)&lt;/p>
&lt;p>RAG의 역할?&lt;/p>
&lt;ul>
&lt;li>질문을 LLM에 던지기 전에 knowledge corpus에 질문을 미리 검색한다(회사 데이터에 대한 지식 벡터 db).
&lt;ul>
&lt;li>질문과 연관된 문서를 찾고 적절하게 만들어서 retrieval 던지면 의도대로 답변이 잘 나온다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#2 LLM 출력 구성&lt;/mark> (p.42-45)&lt;/p>
&lt;p>Output Length (Max Tockens)&lt;/p>
&lt;ul>
&lt;li>500자로 제한을 걸면 500자로 맞춰주는게 아니라 500자 넘으면 출력을 멈춘다.&lt;/li>
&lt;/ul>
&lt;p>Sampling Controls&lt;/p>
&lt;ul>
&lt;li>
&lt;p>LLM은 다음에 올 단어를 고를 때 미리 계산된 사전 확률분포를 가지고 거기서 하나를 뽑는다&lt;/p></description></item><item><title>생성형 AI #2 Prompt Engineering 실습 미리돌려보기</title><link>https://yshghid.github.io/docs/study/ai/ai19/</link><pubDate>Sat, 09 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai19/</guid><description>&lt;h1 id="생성형-ai-2-prompt-engineering-실습-미리돌려보기">
 생성형 AI #2 Prompt Engineering 실습 미리돌려보기
 &lt;a class="anchor" href="#%ec%83%9d%ec%84%b1%ed%98%95-ai-2-prompt-engineering-%ec%8b%a4%ec%8a%b5-%eb%af%b8%eb%a6%ac%eb%8f%8c%eb%a0%a4%eb%b3%b4%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-09&lt;/p>
&lt;hr>
&lt;h3 id="1-voc-분석">
 1. VOC 분석
 &lt;a class="anchor" href="#1-voc-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>setting&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://openrouter.ai/">https://openrouter.ai/&lt;/a>&lt;/li>
&lt;li>Model: GPT-5&lt;/li>
&lt;li>Temperature: 0.2 (낮게: 일관성 있는 분류 결과)&lt;/li>
&lt;li>Top-k / Top-p: default&lt;/li>
&lt;li>Max tokens: 1024&lt;/li>
&lt;/ul>
&lt;p>&lt;mark>system prompt&lt;/mark>&lt;/p>
&lt;pre tabindex="0">&lt;code>너는 IT 시스템의 평가전문가야. 
이번에 개발한 AI를 적용한 회계세무 시스템을 테스트한 고객의 평가내용인 VOC를 분석하는 것이 너의 역할이야. 
판단근거를 2가지로 함께 제시해줘.
&lt;/code>&lt;/pre>&lt;p>&lt;mark>user prompt&lt;/mark>&lt;/p>
&lt;pre tabindex="0">&lt;code>아래에 제공하는 모든 VOC 문장을 긍정, 중립, 부정 중 하나로 분류하고, 
특히 부정일 경우 그렇게 판단한 이유를 2가지로 요약해줘. 
결과는 표 형태로 [번호 | VOC 내용 | 분류 | 판단 근거] 형식으로 출력해.

VOC 데이터:
1. 복잡한 엑셀 정리에서 해방됐어요. 기존 수작업으로 처리하던 매출/비용 분석을 자동화해 시간 절약 효과를 체감했습니다.
2. 회계 비전문가인 마케팅 담당자도 재무 지표의 의미를 쉽게 파악할 수 있었습니다.
3. AI 추천 덕분에 세무 위험을 미리 인지했어요. 실제로 부가세 누락 가능성을 사전에 알림 받아, 실제 신고 전에 정정할 수 있었던 점이 유용했습니다.
4. 실시간으로 현금흐름을 추적할 수 있어 좋았습니다. 회계팀 없이도 매주 자금 흐름을 파악하고 의사결정에 반영할 수 있었습니다.
5. 처음에만 가이드를 받고 나니 반복 작업이 놀랍도록 간단해졌습니다. 설정만 끝나면 이후 반복 업무에서 자동화된 결과물이 기대 이상으로 좋네요.
6. 기능은 흥미롭지만, 실제 업무에 어떻게 녹여야 할지 고민이 됩니다. 시스템이 낯설고 기존 워크플로우와 맞물리는 데 시간이 필요해 보입니다.
7. 예쁜 그래프가 많긴 하지만 실무상 의미가 뚜렷하게 와 닿지는 않았습니다.
8. AI가 추천해주는 분석은 흥미로웠지만, 최종 결정은 여전히 사람이 해야겠더라고요. 완전한 자동화보다는 보조 도구로 보는 것이 현실적이라 느꼈습니다.
9. 피벗 기능이나 드릴다운 기능이 있었으면 더 좋을 것 같긴 해요. 보고서 결과는 직관적이지만, 좀 더 상세 데이터를 보고 싶을 때 아쉬움이 있습니다.
10. 회계 전문가 입장에서는 보안이 필요해 보이지만, 일반 사용자에겐 적합할 수도 있겠네요. 어떤 고객을 주 대상으로 할지 더 명확하면 좋겠습니다.
11. 일부 기능은 대기업 회계 기준에 맞춰져 있어 간편한 사용을 기대한 소규모 기업에는 과도했습니다.
12. AI 설명이 부족해 불안했어요. AI가 어떤 기준으로 판단했는지, 근거가 불투명해 검토에 시간이 걸렸습니다.
13. 엑셀 연동 시 포맷 오류가 잦았습니다. 업로드한 자료가 표준 포맷이 아닐 경우 오류가 자주 발생했습니다.
14. 초기 세팅에 시간이 좀 걸렸습니다. 계정과목 연결, 은행 계좌 연동 등 초기 설정을 마치기까지 다소 복잡하게 느껴졌습니다.
15. 사용자별 접근 권한 설정이 더 세분화되었으면 합니다. 팀 내 다양한 역할별로 보기 권한을 구분하고 싶었는데 현재는 제한적이었습니다.
&lt;/code>&lt;/pre>&lt;p>&lt;mark>result&lt;/mark>&lt;/p></description></item><item><title>데이터 분석 #3 회귀분석</title><link>https://yshghid.github.io/docs/study/ai/ai17/</link><pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai17/</guid><description>&lt;h1 id="데이터-분석-3-회귀분석">
 데이터 분석 #3 회귀분석
 &lt;a class="anchor" href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%b6%84%ec%84%9d-3-%ed%9a%8c%ea%b7%80%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-07&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#1 Oversampling Techinique&lt;/mark> (p.69-71)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>SMOTE&lt;/p>
&lt;img width="376" height="136" alt="image" src="https://github.com/user-attachments/assets/8fc7ce10-eef3-486a-9432-b6cdb032085b" />
&lt;ul>
&lt;li>소수 클래스 포인트 중 하나를 랜덤하게 고르고&lt;/li>
&lt;li>이웃 포인트 k개를 찾고&lt;/li>
&lt;li>이 이웃들과의 연결선을 따라 중간 어딘가에 새로운 샘플을 만든다.
&lt;ul>
&lt;li>즉 원본과 이웃 사이에 위치한 점들을 생성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>소수 클래스 포인트들 사이의 직선 위에서만 새로운 데이터를 만들기 때문에 실제로는 decision boundary 근처에서 중요한 데이터를 놓칠 수 있다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Borderline-SMOTE&lt;/p>
&lt;img width="365" height="134" alt="image" src="https://github.com/user-attachments/assets/97c5ac14-d0f2-493b-9181-b5dc534b412b" />
&lt;ul>
&lt;li>소수 클래스의 포인트에 대해 kNN을 수행해서 이웃들을 찾는데
&lt;ul>
&lt;li>이때 이웃 중에서 과반수 이상이 다수 클래스인 경우 위험한 샘플(danger set)으로 간주된다 즉 이 샘플은 결정 경계에 가깝기 때문에 모델 입장에서 헷갈릴 가능성이 높다.&lt;/li>
&lt;li>그런 danger set에 대해서만 SMOTE를 수행하여 새로운 데이터를 생성해서 decision boundary 근처의 소수 클래스 밀도를 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>이렇게 하면 모델이 중요한 경계 영역에서의 소수 클래스를 더 잘 인식하도록 도와줄 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ADASYN&lt;/p></description></item><item><title>데이터 분석 #2 Preprocessing</title><link>https://yshghid.github.io/docs/study/ai/ai16/</link><pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai16/</guid><description>&lt;h1 id="데이터-분석-2-preprocessing">
 데이터 분석 #2 Preprocessing
 &lt;a class="anchor" href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%b6%84%ec%84%9d-2-preprocessing">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-06&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#1 머신러닝 프로세스&lt;/mark> (p.25)&lt;/p>
 &lt;img width="499" height="260" alt="image" src="https://github.com/user-attachments/assets/80033421-9fe4-4651-8318-7b6151aa0533" />
&lt;ul>
&lt;li>test data가 필요한 이유?
&lt;ul>
&lt;li>hyperparameter tuning을 하면서 validation data는 모델이 이미 참고했다 즉 간접적으로 학습에 영향을 줬기 때문에 모델 학습 과정에서 한번도 보지않은 데이터가 필요함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#2 Box plot&lt;/mark> (p.38)&lt;/p>
&lt;img width="575" height="331" alt="image" src="https://github.com/user-attachments/assets/ffc57e8d-53a9-4623-a501-1180efdf0a32" />
&lt;p>그림이 7개 차종에서 연비 플롯이라고 가정&lt;/p>
&lt;ol>
&lt;li>
&lt;p>투입됏을때 예측에 긍정적영향을 줄수잇는건?&lt;/p>
&lt;ul>
&lt;li>납작한애들. 두꺼우면 대표성이 떨어진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2번에서 이상치들이 많으니까 잘 처리해야하겠다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>만약 그림같지 않고 y축 높이가 다 비슷비슷했다면?&lt;/p></description></item><item><title>Python #1 가상환경 구성 및 패키지 관리</title><link>https://yshghid.github.io/docs/study/algorithm/algo11/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo11/</guid><description>&lt;h1 id="python-1-가상환경-구성-및-패키지-관리">
 Python #1 가상환경 구성 및 패키지 관리
 &lt;a class="anchor" href="#python-1-%ea%b0%80%ec%83%81%ed%99%98%ea%b2%bd-%ea%b5%ac%ec%84%b1-%eb%b0%8f-%ed%8c%a8%ed%82%a4%ec%a7%80-%ea%b4%80%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-05&lt;/p>
&lt;hr>
&lt;h3 id="1-개념">
 1. 개념
 &lt;a class="anchor" href="#1-%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;p>#1 가상환경의 필요성?&lt;/p>
&lt;p>우리가 파이썬을 사용할 때, 가장 먼저 겪게 되는 문제 중 하나는 바로 패키지 버전 충돌이다. 예를 들어 어떤 프로젝트에서는 numpy==1.18.5 버전을 사용하고 있고, 또 다른 프로젝트에서는 numpy==1.24.0 버전을 사용하고 있다고 하면 이 둘을 동시에 하나의 환경에 설치하게 되면 충돌이 일어나거나 예상치 못한 에러가 발생할 가능성이 커진다. 특히 머신러닝, 데이터분석, 웹개발 프로젝트를 하다 보면 프로젝트마다 사용하는 패키지와 버전이 다르기 때문에 이러한 문제는 일상적으로 발생하며 따라서 각 프로젝트가 독립적으로 실행될 수 있는 ‘가상환경(Virtual Environment)’을 만들어서 관리해야 한다.&lt;/p></description></item><item><title>Python #2 logging 활용한 로깅 구조 설계 관리</title><link>https://yshghid.github.io/docs/study/algorithm/algo12/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo12/</guid><description>&lt;h1 id="python-2-logging-활용한-로깅-구조-설계">
 Python #2 logging 활용한 로깅 구조 설계
 &lt;a class="anchor" href="#python-2-logging-%ed%99%9c%ec%9a%a9%ed%95%9c-%eb%a1%9c%ea%b9%85-%ea%b5%ac%ec%a1%b0-%ec%84%a4%ea%b3%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-05&lt;/p>
&lt;hr>
&lt;h3 id="1-개념">
 1. 개념
 &lt;a class="anchor" href="#1-%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;p>logging은 실행 중 일어나는 다양한 이벤트, 경고, 에러, 정보 등을 기록해두고, 나중에 문제가 생겼을 때 정확히 어떤 일이 있었는지 기록을 통해 재구성할 수 있도록 도와준다.&lt;/p>
&lt;h3 id="2-실습">
 2. 실습
 &lt;a class="anchor" href="#2-%ec%8b%a4%ec%8a%b5">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>데이터 분석 #1 기초통계</title><link>https://yshghid.github.io/docs/study/ai/ai14/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai14/</guid><description>&lt;h1 id="데이터-분석-1-기초통계">
 데이터 분석 #1 기초통계
 &lt;a class="anchor" href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%b6%84%ec%84%9d-1-%ea%b8%b0%ec%b4%88%ed%86%b5%ea%b3%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-05&lt;/p>
&lt;hr>
&lt;h3 id="1-기술-통계">
 1. 기술 통계
 &lt;a class="anchor" href="#1-%ea%b8%b0%ec%88%a0-%ed%86%b5%ea%b3%84">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#1 IQR&lt;/mark> (p.34)&lt;/p>
&lt;ul>
&lt;li>
&lt;p>IQR은? 가운데 50%의 거리.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>그림 설명&lt;/p>
&lt;img width="265" height="219" alt="image" src="https://github.com/user-attachments/assets/0f803bf5-51b7-4a32-9a75-95672ecfe8be" />
&lt;ul>
&lt;li>그림의 2,3: 각각 IQR의 1.5배 선, median 값 선.&lt;/li>
&lt;li>그림의 B: ⚬ 가 많으면 특이값이 많은 것.&lt;/li>
&lt;li>그림의 1,2,3: 1,2는 각각 IQR의 1.5배 선이라고 했는데 3과의 거리가 서로 다른 이유는? 1.5배 안쪽에 데이터들이 다 분포해서. 즉max가 1.5배보다 작아서.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#2 변이 계수(Coefficient of Variables)&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>평균치가 다른 집단 비교.&lt;/li>
&lt;li>변이 계수 = 표준편차 / 평균.&lt;/li>
&lt;li>값이 작을수록? 평균 가까이에 분포한다.&lt;/li>
&lt;li>평균 관점에서 퍼짐의 해석 -&amp;gt; 이상치에 민감하다.
&lt;ul>
&lt;li>IQR은? 중앙값 관점에서 퍼짐의 해석 -&amp;gt; 이상치에 강건하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-추론-통계">
 2. 추론 통계
 &lt;a class="anchor" href="#2-%ec%b6%94%eb%a1%a0-%ed%86%b5%ea%b3%84">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#1 모집단과 표본집단&lt;/mark>&lt;/p></description></item><item><title>학위논문작업 #1 핵심함수 로직 정리</title><link>https://yshghid.github.io/docs/study/algorithm/algo13/</link><pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo13/</guid><description>&lt;h1 id="학위논문작업-1-핵심함수-로직-정리">
 학위논문작업 #1 핵심함수 로직 정리
 &lt;a class="anchor" href="#%ed%95%99%ec%9c%84%eb%85%bc%eb%ac%b8%ec%9e%91%ec%97%85-1-%ed%95%b5%ec%8b%ac%ed%95%a8%ec%88%98-%eb%a1%9c%ec%a7%81-%ec%a0%95%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-05&lt;/p>
&lt;hr>
&lt;h3 id="1-input">
 1. input
 &lt;a class="anchor" href="#1-input">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">expand_cluster&lt;/span>(ccmIdx, mutData, info):
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>ccm의 인덱스 ccmIdx&lt;/li>
&lt;li>돌연변이 중요도 정보 mutData&lt;/li>
&lt;li>info: 기본 세팅 파라미터&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>scaler_l &lt;span style="color:#f92672">=&lt;/span> mutData[ccmIdx][&lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>idx_l &lt;span style="color:#f92672">=&lt;/span> ccmIdx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eps_l &lt;span style="color:#f92672">=&lt;/span> mutData[ccmIdx][&lt;span style="color:#e6db74">&amp;#39;left_distance&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pos_l &lt;span style="color:#f92672">=&lt;/span> mutData[ccmIdx][POS]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>scaler_l: ccm의 eps scaler&lt;/li>
&lt;li>idx_l: 최초 이웃의 인덱스&lt;/li>
&lt;li>eps_l: ccm의 최초 eps&lt;/li>
&lt;li>pos_l: ccm의 postion&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3">
 3
 &lt;a class="anchor" href="#3">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> idx_l &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> (pos_l &lt;span style="color:#f92672">-&lt;/span> mutData[idx_l][POS]) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> eps_l:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delta &lt;span style="color:#f92672">=&lt;/span> scaler_l &lt;span style="color:#f92672">-&lt;/span> mutData[idx_l][&lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scaler_l &lt;span style="color:#f92672">-=&lt;/span> delta &lt;span style="color:#f92672">/&lt;/span> info&lt;span style="color:#f92672">.&lt;/span>es_control_const
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eps_l &lt;span style="color:#f92672">=&lt;/span> max(info&lt;span style="color:#f92672">.&lt;/span>eps &lt;span style="color:#f92672">*&lt;/span> scaler_l, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx_l &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#logic&lt;/mark>&lt;/p></description></item><item><title>Docker #3</title><link>https://yshghid.github.io/docs/study/sw/sw16/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw16/</guid><description>&lt;h1 id="docker-3">
 Docker #3
 &lt;a class="anchor" href="#docker-3">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;h3 id="1-레지스트리에-접속하고-이미지를-pullpush하기">
 1. 레지스트리에 접속하고 이미지를 pull/push하기
 &lt;a class="anchor" href="#1-%eb%a0%88%ec%a7%80%ec%8a%a4%ed%8a%b8%eb%a6%ac%ec%97%90-%ec%a0%91%ec%86%8d%ed%95%98%ea%b3%a0-%ec%9d%b4%eb%af%b8%ec%a7%80%eb%a5%bc-pullpush%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Docker 로그인&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker login https://&lt;span style="color:#f92672">{&lt;/span>실습링크&lt;span style="color:#f92672">}&lt;/span>.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ID: *&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Password: *&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ Login Succeeded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 이미지 Pull (이미지 내려받기): 예를 들어 container-linux:1.1 이미지를 다운로드&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker pull &lt;span style="color:#f92672">{&lt;/span>실습링크&lt;span style="color:#f92672">}&lt;/span>.com/&lt;span style="color:#f92672">{&lt;/span>실습id&lt;span style="color:#f92672">}&lt;/span>/container-linux:1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 이미지 Push (Image Push 정보 사용): Push 권한은 일반 계정이 아니라 로봇 계정(CI/CD 용)을 사용합니다.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 로봇 계정 로그인&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker login https://&lt;span style="color:#f92672">{&lt;/span>실습링크&lt;span style="color:#f92672">}&lt;/span>.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ID: robot$skala25a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Password: 1qB9cyusbNComZPHAdjNIFWinf52xaBJ&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 태깅 (Tag local image)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker tag container-linux:1.1 &lt;span style="color:#f92672">{&lt;/span>실습링크&lt;span style="color:#f92672">}&lt;/span>.com/&lt;span style="color:#f92672">{&lt;/span>실습id&lt;span style="color:#f92672">}&lt;/span>/container-linux:1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Push&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker push &lt;span style="color:#f92672">{&lt;/span>실습링크&lt;span style="color:#f92672">}&lt;/span>.com/&lt;span style="color:#f92672">{&lt;/span>실습id&lt;span style="color:#f92672">}&lt;/span>/container-linux:1.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-docker-hub에서-우분투-이미지-받아보기">
 2. Docker Hub에서 우분투 이미지 받아보기
 &lt;a class="anchor" href="#2-docker-hub%ec%97%90%ec%84%9c-%ec%9a%b0%eb%b6%84%ed%88%ac-%ec%9d%b4%eb%af%b8%ec%a7%80-%eb%b0%9b%ec%95%84%eb%b3%b4%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sudo docker pull ubuntu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using default tag: latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2025/08/04 11:36:28 must use ASL logging &lt;span style="color:#f92672">(&lt;/span>which requires CGO&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> running as root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>latest: Pulling from library/ubuntu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e3bd89a9dac5: Already exists 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Digest: sha256:a08e551cb33850e4740772b38217fc1796a66da2506d312abe51acda354ff061
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Status: Downloaded newer image &lt;span style="color:#66d9ef">for&lt;/span> ubuntu:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker.io/library/ubuntu:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo docker run -it --name hello ubuntu /bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@b42933e7fe33:/# ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin boot dev etc home lib media mnt opt proc root run sbin srv sys tmp usr var
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cd, ls 명령으로 컨테이너 내부를 둘러본 뒤 exit를 입력하여 Bash 셸에서 빠져 나오기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@b42933e7fe33:/# exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo docker ps -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b42933e7fe33 ubuntu &lt;span style="color:#e6db74">&amp;#34;/bin/bash&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> minutes ago Exited &lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> seconds ago hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>60fb3d8fbf89 amdp-registry.&lt;span style="color:#f92672">{&lt;/span>실습링크2&lt;span style="color:#f92672">}&lt;/span>.arm64 &lt;span style="color:#e6db74">&amp;#34;/bin/bash -c &amp;#39;ls -l…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> hours ago Up &lt;span style="color:#ae81ff">2&lt;/span> hours 0.0.0.0:2222-&amp;gt;2222/tcp, 0.0.0.0:5173-&amp;gt;5173/tcp, 0.0.0.0:5500-&amp;gt;5500/tcp, 0.0.0.0:8080-8081-&amp;gt;8080-8081/tcp, 0.0.0.0:8443-&amp;gt;8443/tcp, 0.0.0.0:9931-&amp;gt;9931/tcp local-rde
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>de61e13a85e8 container-linux:1.1 &lt;span style="color:#e6db74">&amp;#34;python /mycode/webs…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> days ago Exited &lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#ae81ff">41&lt;/span> hours ago 0.0.0.0:8888-&amp;gt;8080/tcp my-first-container
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>883d6de5ea2c mariadb:latest &lt;span style="color:#e6db74">&amp;#34;docker-entrypoint.s…&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> days ago Exited &lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> days ago 0.0.0.0:3306-&amp;gt;3306/tcp 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;gt;&amp;gt; Exited (0) 44 seconds ago인상태.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 정지한 컨테이너 다시 시작하기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo docker start hello
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3-dockerfile--명령어-cmd-실습">
 3. Dockerfile : 명령어 CMD 실습
 &lt;a class="anchor" href="#3-dockerfile--%eb%aa%85%eb%a0%b9%ec%96%b4-cmd-%ec%8b%a4%ec%8a%b5">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># docker file 빌드&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker build -t my-image .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 출력 This is the default command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker run my-image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 출력 Override CMD&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker run my-image &lt;span style="color:#e6db74">&amp;#34;Override CMD&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&amp;gt;&amp;gt; Error&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker run my-image sh -c &lt;span style="color:#e6db74">&amp;#34;echo Override CMD&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="4-의문점-정리">
 4. 의문점 정리
 &lt;a class="anchor" href="#4-%ec%9d%98%eb%ac%b8%ec%a0%90-%ec%a0%95%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;p>#1 CMD?&lt;/p></description></item><item><title>Docker #4 자신의 Frontend (HTML, JS, CSS) 개발 코드를 컨테이너로 만들고 이것을 실행시켜 보자</title><link>https://yshghid.github.io/docs/study/sw/sw17/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw17/</guid><description>&lt;h1 id="docker-4-자신의-frontend-html-js-css-개발-코드를-컨테이너로-만들고-이것을-실행시켜-보자">
 Docker #4 자신의 Frontend (HTML, JS, CSS) 개발 코드를 컨테이너로 만들고 이것을 실행시켜 보자
 &lt;a class="anchor" href="#docker-4-%ec%9e%90%ec%8b%a0%ec%9d%98-frontend-html-js-css-%ea%b0%9c%eb%b0%9c-%ec%bd%94%eb%93%9c%eb%a5%bc-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88%eb%a1%9c-%eb%a7%8c%eb%93%a4%ea%b3%a0-%ec%9d%b4%ea%b2%83%ec%9d%84-%ec%8b%a4%ed%96%89%ec%8b%9c%ec%bc%9c-%eb%b3%b4%ec%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#조건&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>nginx:alpine 이미지를 사용&lt;/li>
&lt;li>노출 Port는80&lt;/li>
&lt;li>nginx를실행하는방식은 -nginx -g daemon off;&lt;/li>
&lt;li>nginx의 routing 설정은 default.conf에설정한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;mark>#path&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/yshmbid/rde/config/workspace/exec-template
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dockerfile default.conf deploy deploy.yaml docker-build.sh docker-push.sh service.yaml src
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="1-docker-buildsh와-docker-pushsh-복사">
 1. docker-build.sh와 docker-push.sh 복사
 &lt;a class="anchor" href="#1-docker-buildsh%ec%99%80-docker-pushsh-%eb%b3%b5%ec%82%ac">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/yshmbid/rde/config/workspace/container/05.webserver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dockerfile default.conf deploy docker-build.sh docker-push.sh src
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># docker-build.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME&lt;span style="color:#f92672">=&lt;/span>sk019
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IMAGE_NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;healthcheck-server&amp;#34;&lt;/span> &lt;span style="color:#75715e">#IMAGE_NAME=&amp;#34;webserver&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VERSION&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CPU_PLATFORM&lt;span style="color:#f92672">=&lt;/span>arm64 &lt;span style="color:#75715e">#amd64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Docker 이미지 빌드&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker build &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --tag &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>-&lt;span style="color:#e6db74">${&lt;/span>IMAGE_NAME&lt;span style="color:#e6db74">}&lt;/span>:&lt;span style="color:#e6db74">${&lt;/span>VERSION&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --file Dockerfile &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --platform linux/&lt;span style="color:#e6db74">${&lt;/span>CPU_PLATFORM&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>IS_CACHE&lt;span style="color:#e6db74">}&lt;/span> .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>docker-build.sh에서 amd였던걸 arm으로 바꿔줫고&lt;/p></description></item><item><title>Docker #5 kubernetes 환경에 나의 앱을 배포해보자</title><link>https://yshghid.github.io/docs/study/sw/sw18/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw18/</guid><description>&lt;h1 id="docker-5-kubernetes-환경에-나의-앱을-배포해보자">
 Docker #5 kubernetes 환경에 나의 앱을 배포해보자
 &lt;a class="anchor" href="#docker-5-kubernetes-%ed%99%98%ea%b2%bd%ec%97%90-%eb%82%98%ec%9d%98-%ec%95%b1%ec%9d%84-%eb%b0%b0%ed%8f%ac%ed%95%b4%eb%b3%b4%ec%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#path&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/yshmbid/rde/config/workspace/exec-template
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#파일 구조&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── exec-template
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── Dockerfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── default.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── docker-build.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── docker-push.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── cicd.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── deploy/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── deploy.t 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── deploy.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── service.t
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── service.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── env.properties
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── src/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── index.html 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── media/ 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#이전 실습과의 차이?&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>cicd.sh를 쓴다.&lt;/li>
&lt;li>deploy 디렉토리를 쓴다.&lt;/li>
&lt;li>docker-build.sh와 docker-push.sh에서 amd였던걸 arm으로 바꿔줬는데 이걸다시 amd로 바꿔준다.&lt;/li>
&lt;/ol>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="1-cicdsh-작성">
 &lt;del>1. cicd.sh 작성 &lt;strong>(불필요)&lt;/strong>&lt;/del>
 &lt;a class="anchor" href="#1-cicdsh-%ec%9e%91%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 기본값 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENV_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;env.properties&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># usage 출력 함수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>usage&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage: &lt;/span>$0&lt;span style="color:#e6db74"> [-b|--build] [-p|--push] [-y|--yaml] [-d|--deploy] [-r|--remove] [-a|--all] [-f|--file &amp;lt;env file&amp;gt;]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># env.properties 로드 함수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>load_env&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ENV_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ENV_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;환경 파일 &amp;#39;&lt;/span>$ENV_FILE&lt;span style="color:#e6db74">&amp;#39;을 찾을 수 없습니다.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Maven Build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>build&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;🔨 Maven 빌드 시작...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mvn clean package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Docker 이미지 build &amp;amp; push&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>push_image&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;🐳 Docker 이미지 생성 및 push 시작...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker build -t $DOCKER_IMAGE_NAME .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker push $DOCKER_IMAGE_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># YAML 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>generate_yaml&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;📄 YAML 파일 생성 중...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file in *.t; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cp &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file%.t&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># K8s에 배포&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deploy_k8s&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;🚀 Kubernetes에 배포 시작...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl apply -f ./*.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># K8s 리소스 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>remove_k8s&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;🗑️ Kubernetes 리소스 제거...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl delete -f ./*.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 전체 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>run_all&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> push_image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> generate_yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deploy_k8s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 인자 파싱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$#&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -gt &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -b|--build&lt;span style="color:#f92672">)&lt;/span> ACTION_BUILD&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p|--push&lt;span style="color:#f92672">)&lt;/span> ACTION_PUSH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -y|--yaml&lt;span style="color:#f92672">)&lt;/span> ACTION_YAML&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d|--deploy&lt;span style="color:#f92672">)&lt;/span> ACTION_DEPLOY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -r|--remove&lt;span style="color:#f92672">)&lt;/span> ACTION_REMOVE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -a|--all&lt;span style="color:#f92672">)&lt;/span> ACTION_ALL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f|--file&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ENV_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h|--help&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;❌ 알 수 없는 옵션: &lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 실행 조건&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_ALL &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run_all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_BUILD &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_PUSH &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> push_image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_YAML &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> generate_yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_DEPLOY &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> deploy_k8s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[[&lt;/span> $ACTION_REMOVE &lt;span style="color:#f92672">]]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> remove_k8s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>cicd.sh 사용하는 부분이 나오는데 ppt랑 workspace 디렉토리 안에 아무리찾아봐도 없어서&amp;hellip; 일단 챗지피티에넣고 만들었는데&lt;/p></description></item><item><title>MutClust 연구: method contribution</title><link>https://yshghid.github.io/docs/study/algorithm/algo10/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo10/</guid><description>&lt;h1 id="mutclust-연구-method-contribution">
 MutClust 연구: method contribution
 &lt;a class="anchor" href="#mutclust-%ec%97%b0%ea%b5%ac-method-contribution">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;p>#Paper&lt;/p>
&lt;p>Identification of Severity Related Mutation Hotspots in SARS-CoV-2 Using a Density-Based Clustering Approach&lt;/p>
&lt;h3 id="0-참여-파트">
 0. 참여 파트
 &lt;a class="anchor" href="#0-%ec%b0%b8%ec%97%ac-%ed%8c%8c%ed%8a%b8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>#Algorithm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Computing the H-score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Density-based mutation hotspot clustering
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#Omics-analysis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Selection of severity related hotspots
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Differentially expressed gene analysis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Evaluation of HLA-peptide affinity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#Validation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Validation on Influenza genome
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── K-dist plot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>RF-SHAP 연구 #1 모델 학습</title><link>https://yshghid.github.io/docs/study/ai/ai12/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai12/</guid><description>&lt;h1 id="rf-shap-연구-1-모델-학습">
 RF-SHAP 연구 #1 모델 학습
 &lt;a class="anchor" href="#rf-shap-%ec%97%b0%ea%b5%ac-1-%eb%aa%a8%eb%8d%b8-%ed%95%99%ec%8a%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;h3 id="1-load-data">
 1. Load data
 &lt;a class="anchor" href="#1-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.ensemble &lt;span style="color:#f92672">import&lt;/span> RandomForestClassifier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.model_selection &lt;span style="color:#f92672">import&lt;/span> train_test_split, cross_val_score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.metrics &lt;span style="color:#f92672">import&lt;/span> accuracy_score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;/preprocessing/processed_data.pickle&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> preproc_data &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cytokine_df &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;cytokine_data&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patient_meta &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;metadata&amp;#39;&lt;/span>] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patient_info &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;clinical&amp;#39;&lt;/span>] 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-train-data-split">
 2. Train data split
 &lt;a class="anchor" href="#2-train-data-split">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>normal_df &lt;span style="color:#f92672">=&lt;/span> cytokine_df[cytokine_df&lt;span style="color:#f92672">.&lt;/span>index&lt;span style="color:#f92672">.&lt;/span>str&lt;span style="color:#f92672">.&lt;/span>contains(&lt;span style="color:#e6db74">&amp;#39;Healthy&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>severe_samples &lt;span style="color:#f92672">=&lt;/span> patient_meta[patient_meta&lt;span style="color:#f92672">.&lt;/span>Severity &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>severe_df &lt;span style="color:#f92672">=&lt;/span> cytokine_df[cytokine_df&lt;span style="color:#f92672">.&lt;/span>index&lt;span style="color:#f92672">.&lt;/span>isin(severe_samples&lt;span style="color:#f92672">.&lt;/span>Sample)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>normal_df[&lt;span style="color:#e6db74">&amp;#39;source&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>severe_df[&lt;span style="color:#e6db74">&amp;#39;source&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>normal_df,severe_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>( CXCL9 LIF CXCL11 IL25 IL12B IL10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy1 6.560136 4.251866 4.151513 7.586942 5.541050 1.843384 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy2 5.277100 4.089332 3.650800 7.886990 6.377469 2.113211 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IL13 IL11 IL15 PTX3 ... FSTL3 FLT3LG \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy1 6.470743 6.949630 3.716450 5.163174 ... 9.613881 4.906822 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy2 6.450212 7.541794 4.181554 6.741940 ... 9.458981 4.658021 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FAP FABP4 F3 ESM1 ERBB3 ENPP2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy1 10.903602 7.923477 3.383774 6.034197 9.096096 10.839433 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy2 11.238270 8.730215 3.317157 5.497652 8.543655 10.454511 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WFDC2 source 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy1 8.383246 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Healthy2 8.260845 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [2 rows x 167 columns],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CXCL9 LIF CXCL11 IL25 IL12B IL10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_1 7.426598 4.211594 4.429560 7.799068 6.318247 1.769972 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_2 7.541794 4.355353 4.514350 7.886990 6.741940 1.769972 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_3 7.541794 4.151513 3.933607 7.799068 6.159825 1.916796 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_4 7.130935 4.429560 3.585707 7.886990 5.612199 1.916796 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IL13 IL11 IL15 PTX3 ... FSTL3 FLT3LG \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_1 5.725485 6.782954 3.716450 8.190382 ... 8.802718 3.042321 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_2 5.843465 6.646599 3.716450 7.496809 ... 9.008530 3.317157 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_3 5.984188 6.701283 3.880626 7.210939 ... 9.214496 3.448254 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_4 6.214099 6.883351 3.933607 7.496809 ... 9.008530 3.448254 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FAP FABP4 F3 ESM1 ERBB3 ENPP2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_1 7.886990 9.296877 2.952843 5.214755 8.543655 9.096096 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_2 8.110591 9.168168 2.820616 5.497652 8.683792 9.296877 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_3 8.190382 9.296877 3.232241 5.306376 8.862940 9.535287 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_4 8.383246 9.296877 3.127159 5.306376 9.096096 9.613881 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WFDC2 source 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_1 8.909767 1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_2 8.862940 1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_3 8.909767 1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Patient2_4 8.683792 1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [4 rows x 167 columns])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-model-training">
 3. Model training
 &lt;a class="anchor" href="#3-model-training">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat([normal_df,severe_df],axis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>drop(columns&lt;span style="color:#f92672">=&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;source&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &lt;span style="color:#f92672">=&lt;/span> df[&lt;span style="color:#e6db74">&amp;#39;source&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Assume X_train as X, y as well&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X_train &lt;span style="color:#f92672">=&lt;/span> X
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y_train &lt;span style="color:#f92672">=&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rf_model &lt;span style="color:#f92672">=&lt;/span> RandomForestClassifier()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rf_model&lt;span style="color:#f92672">.&lt;/span>fit(X_train, y_train)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X_train
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>	CXCL9	LIF	CXCL11	IL25	IL12B	IL10	IL13	IL11	IL15	PTX3	...	FURIN	FSTL3	FLT3LG	FAP	FABP4	F3	ESM1	ERBB3	ENPP2	WFDC2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Healthy1	6.560136	4.251866	4.151513	7.586942	5.541050	1.843384	6.470743	6.949630	3.716450	5.163174	...	6.883351	9.613881	4.906822	10.903602	7.923477	3.383774	6.034197	9.096096	10.839433	8.383246
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Healthy2	5.277100	4.089332	3.650800	7.886990	6.377469	2.113211	6.450212	7.541794	4.181554	6.741940	...	7.002611	9.458981	4.658021	11.238270	8.730215	3.317157	5.497652	8.543655	10.454511	8.260845
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_1	7.426598	4.211594	4.429560	7.799068	6.318247	1.769972	5.725485	6.782954	3.716450	8.190382	...	7.660761	8.802718	3.042321	7.886990	9.296877	2.952843	5.214755	8.543655	9.096096	8.909767
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_2	7.541794	4.355353	4.514350	7.886990	6.741940	1.769972	5.843465	6.646599	3.716450	7.496809	...	7.210939	9.008530	3.317157	8.110591	9.168168	2.820616	5.497652	8.683792	9.296877	8.862940
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_3	7.541794	4.151513	3.933607	7.799068	6.159825	1.916796	5.984188	6.701283	3.880626	7.210939	...	6.646599	9.214496	3.448254	8.190382	9.296877	3.232241	5.306376	8.862940	9.535287	8.909767
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_4	7.130935	4.429560	3.585707	7.886990	5.612199	1.916796	6.214099	6.883351	3.933607	7.496809	...	6.532043	9.008530	3.448254	8.383246	9.296877	3.127159	5.306376	9.096096	9.613881	8.683792
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 rows × 166 columns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Let&amp;#39;s assume test set as well&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y_test &lt;span style="color:#f92672">=&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X_test &lt;span style="color:#f92672">=&lt;/span> X
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y_pred &lt;span style="color:#f92672">=&lt;/span> rf_model&lt;span style="color:#f92672">.&lt;/span>predict(X_test)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>accuracy &lt;span style="color:#f92672">=&lt;/span> accuracy_score(y_test, y_pred)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(accuracy)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>1.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-confusion-matrix">
 4. Confusion matrix
 &lt;a class="anchor" href="#4-confusion-matrix">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.metrics &lt;span style="color:#f92672">import&lt;/span> confusion_matrix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> seaborn &lt;span style="color:#66d9ef">as&lt;/span> sns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>conf_matrix &lt;span style="color:#f92672">=&lt;/span> confusion_matrix(y_test, y_pred)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>figure(figsize&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sns&lt;span style="color:#f92672">.&lt;/span>heatmap(conf_matrix, annot&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>, fmt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>, cmap&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Blues&amp;#34;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xticklabels&lt;span style="color:#f92672">=&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;Healthy&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;Severe&amp;#39;&lt;/span>], yticklabels&lt;span style="color:#f92672">=&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;Healthy&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;Severe&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ,annot_kws&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;fontsize&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">14&lt;/span>},)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>xlabel(&lt;span style="color:#e6db74">&amp;#39;Predicted&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>ylabel(&lt;span style="color:#e6db74">&amp;#39;Actual&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>title(&lt;span style="color:#e6db74">&amp;#39;Confusion Matrix&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>tick_params(axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;both&amp;#39;&lt;/span>, which&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;major&amp;#39;&lt;/span>, labelsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>) &lt;span style="color:#75715e"># Adjust tick label size&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(rf_model&lt;span style="color:#f92672">.&lt;/span>classes_)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(len(rf_model&lt;span style="color:#f92672">.&lt;/span>classes_)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">==&lt;/span> j: &lt;span style="color:#75715e"># Condition to check diagonal cells (true positives)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>text(j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>, i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>, conf_matrix[i, j],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ha&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, va&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, color&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;white&amp;#39;&lt;/span>, fontsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>text(j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>, i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>, conf_matrix[i, j],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ha&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, va&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, color&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;black&amp;#39;&lt;/span>, fontsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1816" height="808" alt="image" src="https://github.com/user-attachments/assets/6a1206bc-14d4-4917-b63a-af3db972f7f6" />
&lt;h3 id="5-save-model">
 5. Save model
 &lt;a class="anchor" href="#5-save-model">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> joblib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>joblib&lt;span style="color:#f92672">.&lt;/span>dump(rf_model, &lt;span style="color:#e6db74">&amp;#39;/model/rf_model.pkl&amp;#39;&lt;/span>) 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>RF-SHAP 연구 #2 SHAP 분석</title><link>https://yshghid.github.io/docs/study/ai/ai13/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai13/</guid><description>&lt;h1 id="rf-shap-연구-2-shap-분석">
 RF-SHAP 연구 #2 SHAP 분석
 &lt;a class="anchor" href="#rf-shap-%ec%97%b0%ea%b5%ac-2-shap-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;h3 id="1-load-data">
 1. Load data
 &lt;a class="anchor" href="#1-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> joblib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> shap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> seaborn &lt;span style="color:#66d9ef">as&lt;/span> sns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Load rf model&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;/model/rf_model.pkl&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rf_model &lt;span style="color:#f92672">=&lt;/span> joblib&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Load dataset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;/preprocessing/processed_data.pickle&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> preproc_data &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cytokine_df &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;cytokine_data&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patient_meta &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;metadata&amp;#39;&lt;/span>] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patient_info &lt;span style="color:#f92672">=&lt;/span> preproc_data[&lt;span style="color:#e6db74">&amp;#39;clinical&amp;#39;&lt;/span>] 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-model-evaluation---feature-importance">
 2. Model evaluation - feature importance
 &lt;a class="anchor" href="#2-model-evaluation---feature-importance">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Get feature importances&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>importances &lt;span style="color:#f92672">=&lt;/span> rf_model&lt;span style="color:#f92672">.&lt;/span>feature_importances_
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>feature_names &lt;span style="color:#f92672">=&lt;/span> cytokine_df&lt;span style="color:#f92672">.&lt;/span>columns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>feature_importances &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>DataFrame({&lt;span style="color:#e6db74">&amp;#39;feature&amp;#39;&lt;/span>: feature_names, &lt;span style="color:#e6db74">&amp;#39;importance&amp;#39;&lt;/span>: importances})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Sort the feature importances in descending order and select the top 20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top_20_features &lt;span style="color:#f92672">=&lt;/span> feature_importances&lt;span style="color:#f92672">.&lt;/span>sort_values(by&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;importance&amp;#39;&lt;/span>, ascending&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>head(&lt;span style="color:#ae81ff">20&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Plot the top 20 feature importances&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>figure(figsize&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sns&lt;span style="color:#f92672">.&lt;/span>barplot(x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;importance&amp;#39;&lt;/span>, y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;feature&amp;#39;&lt;/span>, data&lt;span style="color:#f92672">=&lt;/span>top_20_features)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1802" height="1198" alt="image" src="https://github.com/user-attachments/assets/f8c04c4d-eaf1-4dad-9b6f-783ddf073f1b" />
&lt;h3 id="3-model-evaluation---shap">
 3. Model evaluation - SHAP
 &lt;a class="anchor" href="#3-model-evaluation---shap">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>tree_explainer &lt;span style="color:#f92672">=&lt;/span> shap&lt;span style="color:#f92672">.&lt;/span>TreeExplainer(rf_model) &lt;span style="color:#75715e">## TreeExplainer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shap_values &lt;span style="color:#f92672">=&lt;/span> tree_explainer&lt;span style="color:#f92672">.&lt;/span>shap_values(cytokine_df) &lt;span style="color:#75715e">## SHAP Value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig &lt;span style="color:#f92672">=&lt;/span> plt&lt;span style="color:#f92672">.&lt;/span>figure(figsize&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">8&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fig&lt;span style="color:#f92672">.&lt;/span>set_facecolor(&lt;span style="color:#e6db74">&amp;#39;white&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax &lt;span style="color:#f92672">=&lt;/span> fig&lt;span style="color:#f92672">.&lt;/span>add_subplot()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Plot SHAP as sever probability&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shap&lt;span style="color:#f92672">.&lt;/span>summary_plot(shap_values[&lt;span style="color:#ae81ff">1&lt;/span>], cytokine_df, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmap&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;bwr&amp;#39;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> show&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plot_type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;dot&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax&lt;span style="color:#f92672">.&lt;/span>set_xlabel(&lt;span style="color:#e6db74">&amp;#39;SHAP Value&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ax&lt;span style="color:#f92672">.&lt;/span>set_title(&lt;span style="color:#e6db74">&amp;#39;SHAP Dot Plot&amp;#39;&lt;/span>, fontsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1808" height="1388" alt="image" src="https://github.com/user-attachments/assets/bf1fcf5f-3469-429b-bb7b-cc7491d64682" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>shap_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>DataFrame(shap_values[&lt;span style="color:#ae81ff">1&lt;/span>],columns &lt;span style="color:#f92672">=&lt;/span> cytokine_df&lt;span style="color:#f92672">.&lt;/span>columns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shap_df&lt;span style="color:#f92672">.&lt;/span>index &lt;span style="color:#f92672">=&lt;/span> cytokine_df&lt;span style="color:#f92672">.&lt;/span>index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shap_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>	CXCL9	LIF	CXCL11	IL25	IL12B	IL10	IL13	IL11	IL15	PTX3	...	FURIN	FSTL3	FLT3LG	FAP	FABP4	F3	ESM1	ERBB3	ENPP2	WFDC2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Healthy1	0.0	0.001667	0.0	0.0	-0.008333	0.0	0.0	-0.003333	0.0	0.0	...	0.0	-0.011667	-0.005	-0.013333	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Healthy2	0.0	-0.008333	0.0	0.0	0.001667	0.0	0.0	-0.013333	0.0	0.0	...	0.0	-0.011667	-0.005	-0.013333	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient1_1	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	-0.013333	0.0	0.0	...	0.0	-0.011667	-0.005	-0.013333	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient1_2	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	-0.013333	0.0	0.0	...	0.0	-0.011667	0.005	-0.013333	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient1_5	0.0	-0.008333	0.0	0.0	0.001667	0.0	0.0	-0.003333	0.0	0.0	...	0.0	-0.011667	-0.005	-0.013333	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient1_6	0.0	-0.008333	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	-0.011667	-0.005	0.006667	0.0	0.003333	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_1	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	0.008333	0.005	0.006667	0.0	0.003333	0.0	0.0	0.0	0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_2	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	0.008333	0.005	0.006667	0.0	0.003333	0.0	0.0	0.0	0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_3	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	0.008333	0.005	0.006667	0.0	-0.006667	0.0	0.0	0.0	0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_4	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	0.008333	0.005	0.006667	0.0	0.003333	0.0	0.0	0.0	0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Patient2_5	0.0	0.001667	0.0	0.0	0.001667	0.0	0.0	0.006667	0.0	0.0	...	0.0	0.008333	-0.005	0.006667	0.0	-0.006667	0.0	0.0	0.0	-0.005
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11 rows × 166 columns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-umap">
 4. UMAP
 &lt;a class="anchor" href="#4-umap">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> umap.umap_ &lt;span style="color:#66d9ef">as&lt;/span> umap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> seaborn &lt;span style="color:#66d9ef">as&lt;/span> sns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reducer &lt;span style="color:#f92672">=&lt;/span> umap&lt;span style="color:#f92672">.&lt;/span>UMAP()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>embedding &lt;span style="color:#f92672">=&lt;/span> reducer&lt;span style="color:#f92672">.&lt;/span>fit_transform(shap_df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Extract UMAP coordinates and labels&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>umap_x &lt;span style="color:#f92672">=&lt;/span> embedding[:, &lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>umap_y &lt;span style="color:#f92672">=&lt;/span> embedding[:, &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="5-dbscan">
 5. DBSCAN
 &lt;a class="anchor" href="#5-dbscan">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.cluster &lt;span style="color:#f92672">import&lt;/span> DBSCAN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Initialize DBSCAN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dbscan &lt;span style="color:#f92672">=&lt;/span> DBSCAN(eps&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.8&lt;/span>, min_samples&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#75715e"># partial data is too small to set min_sample=20.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Fit to UMAP data and get cluster labels&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clusters &lt;span style="color:#f92672">=&lt;/span> dbscan&lt;span style="color:#f92672">.&lt;/span>fit_predict(embedding)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>embedding, clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>(array([[16.714314 , -2.0475426],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [17.279623 , -2.4140635],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [16.705837 , -3.002305 ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [17.19955 , -1.342096 ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [17.838465 , -2.021136 ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [18.537838 , -1.5079662],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [21.44188 , -2.1259143],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [21.123413 , -3.075382 ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [20.373632 , -3.0233152],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [21.83852 , -2.899527 ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [20.435349 , -2.2629123]], dtype=float32),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> array([ 0, 0, -1, -1, 0, -1, -1, 1, 1, 1, 1]))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-save-result">
 6. Save result
 &lt;a class="anchor" href="#6-save-result">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>analyzed_data &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>analyzed_data[&lt;span style="color:#e6db74">&amp;#39;shap_value&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> shap_df
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>analyzed_data[&lt;span style="color:#e6db74">&amp;#39;umap&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> embedding
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>analyzed_data[&lt;span style="color:#e6db74">&amp;#39;cluster&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;/analysis/analyzed_data.pickle&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pickle&lt;span style="color:#f92672">.&lt;/span>dump(analyzed_data,f)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="7-hierarchical-dendrogram">
 7. Hierarchical dendrogram
 &lt;a class="anchor" href="#7-hierarchical-dendrogram">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> matplotlib.patches &lt;span style="color:#f92672">import&lt;/span> Patch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patient_meta&lt;span style="color:#f92672">.&lt;/span>index &lt;span style="color:#f92672">=&lt;/span> patient_meta&lt;span style="color:#f92672">.&lt;/span>Sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>label_colors_1 &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;sDP&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;red&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;mDP&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;orange&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;sRP&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;purple&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;mRP&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;green&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>label_colors_2 &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4.0&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;orange&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">5.0&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;orange&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">7.0&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;red&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">8.0&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;red&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>label_colors_3 &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;DP&amp;#39;&lt;/span> :&lt;span style="color:#e6db74">&amp;#39;red&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;RP&amp;#39;&lt;/span> : &lt;span style="color:#e6db74">&amp;#39;blue&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>col_colors_1 &lt;span style="color:#f92672">=&lt;/span> patient_meta&lt;span style="color:#f92672">.&lt;/span>Detailed_PPG&lt;span style="color:#f92672">.&lt;/span>map(label_colors_1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>col_colors_2 &lt;span style="color:#f92672">=&lt;/span> patient_meta&lt;span style="color:#f92672">.&lt;/span>Severity&lt;span style="color:#f92672">.&lt;/span>map(label_colors_2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>col_colors_3 &lt;span style="color:#f92672">=&lt;/span> patient_meta&lt;span style="color:#f92672">.&lt;/span>PPG&lt;span style="color:#f92672">.&lt;/span>map(label_colors_3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>col_colors &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>DataFrame({&lt;span style="color:#e6db74">&amp;#39;PPGs&amp;#39;&lt;/span>: col_colors_1,&lt;span style="color:#e6db74">&amp;#39;severity&amp;#39;&lt;/span>:col_colors_2,})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_elements_1 &lt;span style="color:#f92672">=&lt;/span> [Patch(facecolor&lt;span style="color:#f92672">=&lt;/span>color, label&lt;span style="color:#f92672">=&lt;/span>label) &lt;span style="color:#66d9ef">for&lt;/span> label, color &lt;span style="color:#f92672">in&lt;/span> label_colors_1&lt;span style="color:#f92672">.&lt;/span>items()]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_elements_2 &lt;span style="color:#f92672">=&lt;/span> [Patch(facecolor&lt;span style="color:#f92672">=&lt;/span>color, label&lt;span style="color:#f92672">=&lt;/span>label) &lt;span style="color:#66d9ef">for&lt;/span> label, color &lt;span style="color:#f92672">in&lt;/span> label_colors_2&lt;span style="color:#f92672">.&lt;/span>items()]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sklearn.preprocessing &lt;span style="color:#f92672">import&lt;/span> StandardScaler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df &lt;span style="color:#f92672">=&lt;/span> shap_df[&lt;span style="color:#f92672">~&lt;/span>shap_df&lt;span style="color:#f92672">.&lt;/span>index&lt;span style="color:#f92672">.&lt;/span>str&lt;span style="color:#f92672">.&lt;/span>contains(&lt;span style="color:#e6db74">&amp;#39;Healthy&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_filtered &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[:, (df &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>any(axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scaler &lt;span style="color:#f92672">=&lt;/span> StandardScaler()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df_scaled &lt;span style="color:#f92672">=&lt;/span> scaler&lt;span style="color:#f92672">.&lt;/span>fit_transform(df_filtered)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df_scaled &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>DataFrame(df_scaled, index&lt;span style="color:#f92672">=&lt;/span>df_filtered&lt;span style="color:#f92672">.&lt;/span>index, columns&lt;span style="color:#f92672">=&lt;/span>df_filtered&lt;span style="color:#f92672">.&lt;/span>columns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">FloatingPointError&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Error during scaling: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>e&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>g&lt;span style="color:#f92672">=&lt;/span> sns&lt;span style="color:#f92672">.&lt;/span>clustermap(df_scaled&lt;span style="color:#f92672">.&lt;/span>T, cmap&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;coolwarm&amp;#39;&lt;/span>, figsize&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">27&lt;/span>), col_colors&lt;span style="color:#f92672">=&lt;/span>col_colors)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_1 &lt;span style="color:#f92672">=&lt;/span> g&lt;span style="color:#f92672">.&lt;/span>fig&lt;span style="color:#f92672">.&lt;/span>add_axes([&lt;span style="color:#ae81ff">1.05&lt;/span>, &lt;span style="color:#ae81ff">0.60&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>, &lt;span style="color:#ae81ff">0.2&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_2 &lt;span style="color:#f92672">=&lt;/span> g&lt;span style="color:#f92672">.&lt;/span>fig&lt;span style="color:#f92672">.&lt;/span>add_axes([&lt;span style="color:#ae81ff">1.05&lt;/span>, &lt;span style="color:#ae81ff">0.48&lt;/span>, &lt;span style="color:#ae81ff">0.3&lt;/span>, &lt;span style="color:#ae81ff">0.2&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_1&lt;span style="color:#f92672">.&lt;/span>legend(handles&lt;span style="color:#f92672">=&lt;/span>legend_elements_1, title&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PPGs&amp;#34;&lt;/span>, loc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, fontsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_1&lt;span style="color:#f92672">.&lt;/span>axis(&lt;span style="color:#e6db74">&amp;#39;off&amp;#39;&lt;/span>) &lt;span style="color:#75715e"># Turn off the axis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_2&lt;span style="color:#f92672">.&lt;/span>legend(handles&lt;span style="color:#f92672">=&lt;/span>legend_elements_2, title&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Sample Severity&amp;#34;&lt;/span>, loc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;center&amp;#34;&lt;/span>, fontsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>legend_ax_2&lt;span style="color:#f92672">.&lt;/span>axis(&lt;span style="color:#e6db74">&amp;#39;off&amp;#39;&lt;/span>) &lt;span style="color:#75715e"># Turn off the axis&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>show()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="2292" height="1466" alt="image" src="https://github.com/user-attachments/assets/865246b0-f54b-4195-9b2d-ae6fe0231203" />
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>결단</title><link>https://yshghid.github.io/docs/hobby/book/book52/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book52/</guid><description>&lt;h1 id="결단">
 결단
 &lt;a class="anchor" href="#%ea%b2%b0%eb%8b%a8">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-04&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>머스크는 로켓이 산소가 희박한 높이로 충분히 솟아올라 불꽃이 꺼지길 바랐다. 그러나 로켓은 추락하기 시작했다. 비디오 피드에서 오멜렉이 가까이 다가오더니 더 이상 화면에 아무것도 비치지 않았다. 그리고 불타는 파편들이 바다로 떨어졌다. “위장이 뒤틀렸지요.” 머스크의 말이다. 1시간 후, 머스크는 뮬러, 쾨니스만, 부자, 톰슨 등 수석 팀원들과 함께 잔해를 둘러보기 위해 육군 헬리콥터에 올랐다.&lt;/p>
&lt;p>그날 밤 모두가 콰즈의 야외 바에 모여 조용히 맥주를 마셨다. 몇몇 엔지니어는 눈물을 흘렸다. 머스크는 돌처럼 굳은 얼굴과 먼 곳을 응시하는 눈빛으로 조용히 생각에 잠겼다. 그러고는 아주 부드럽게 입을 열었다. “처음 시작할 때 우리 모두는 첫 번째 임무에서 실패할 수 있다는 것을 알고 있었습니다. 우리는 다른 로켓을 만들어 다시 시도할 것입니다.&lt;/p></description></item><item><title>논문 contribution 정리: EBV DHT 연구</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi32/</link><pubDate>Sun, 03 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi32/</guid><description>&lt;h1 id="논문-contribution-정리-ebv-dht-연구">
 논문 contribution 정리: EBV DHT 연구
 &lt;a class="anchor" href="#%eb%85%bc%eb%ac%b8-contribution-%ec%a0%95%eb%a6%ac-ebv-dht-%ec%97%b0%ea%b5%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-03&lt;/p>
&lt;hr>
&lt;h3 id="1-link">
 1. Link
 &lt;a class="anchor" href="#1-link">#&lt;/a>
&lt;/h3>
&lt;p>Paper1 - &lt;a href="https://www.mdpi.com/2072-6694/16/18/3219">Dihydrotestosterone Enhances MICA-Mediated Immune Responses to Epstein–Barr Virus-Associated Gastric Carcinoma&lt;/a>&lt;/p>
&lt;p>Paper2 - &lt;a href="https://link.springer.com/article/10.1007/s10120-025-01626-6">Dihydrotestosterone-androgen receptor signaling suppresses EBV-positive gastric cancer through DNA demethylation-mediated viral reactivation&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>#Paper1
 └── 3. ChIP-Seq Assay

#Paper2
 └── 2. RNA-seq analysis
 └── 14. Bioinformatics analysis of methylome
&lt;/code>&lt;/pre>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-contributions">
 2. Contributions
 &lt;a class="anchor" href="#2-contributions">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>1. ChIP-Seq Assay&lt;/mark>&lt;/p>
&lt;p>Among the above p65 ChIP samples, the sample treated with 100 nM DHT for 30 min showed the strong p65 enrichment on the SNU719 genome. Therefore, this 30 min-treated p65 ChIP sample was analyzed by a next-generation sequencing (NGS) assay to identify the genome-wide locus where the p65 protein is enriched. As a control, IgG ChIP samples were also analyzed by NGS assay to identify non-selective enrichment. The validated ChIP samples were further isolated by agarose gel purification, ligated to primers, and subjected to Illumina-based sequencing using the manufacturer’s protocol (Illumina, San Diego, CA, USA) for ChIP-seq analysis. ChIP-seq reads were mapped to the EBV wild-type reference genome (NC 007605) using Bowtie software (version 2.3.4.1). The MAC2 tool was used for peak calling [12].&lt;/p></description></item><item><title>Docker #1 Python 실행 컨테이너 만들기</title><link>https://yshghid.github.io/docs/study/sw/sw14/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw14/</guid><description>&lt;h1 id="docker-1-python-실행-컨테이너-만들기">
 Docker #1 Python 실행 컨테이너 만들기
 &lt;a class="anchor" href="#docker-1-python-%ec%8b%a4%ed%96%89-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-01&lt;/p>
&lt;hr>
&lt;h3 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://yshghid.github.io/docs/study/sw/sw3/">RDE #1 Local PC에서 RDE 환경 구성&lt;/a>에서 Harbor registry로부터 RdE Container download를 수행했음&lt;/li>
&lt;li>아이콘을 클릭해서 RDE 런처를 실행한다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="1-웹-서비스-실행-컨테이너-만들기">
 1. 웹 서비스 실행 컨테이너 만들기
 &lt;a class="anchor" href="#1-%ec%9b%b9-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%8b%a4%ed%96%89-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>/config/workspace/cloud/container/00.container-linux 경로로 이동&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cd /config/workspace/cloud/container/00.container-linux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>디렉토리 구조는?&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>00.container-linux/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Dockerfile // 컨테이너 환경 설정
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Dockerfile.pytho-slim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Dockerfile.ubuntu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── docker-build.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── docker-push.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── mycode.py 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── fastserver.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── webserver.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── mydata/ 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Dockerfile 내용 확인하기&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>FROM python:3.11-alpine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RUN apk add --no-cache bash curl gcc musl-dev linux-headers jq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># FastAPI 및 기타 라이브러리 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RUN pip install fastapi uvicorn psutil python-multipart VOLUME &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/mycode&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#COPY mycode.py /mycode/mycode.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COPY webserver.py /mycode/webserver.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CMD &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sh&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;-c&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;echo &amp;#39;start server&amp;#39; &amp;amp;&amp;amp; sleep infinity&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>내용은?&lt;/p></description></item><item><title>Docker #2 작년 작업 복기: netmhcpan image 불러와서 패키지 돌리기</title><link>https://yshghid.github.io/docs/study/sw/sw15/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw15/</guid><description>&lt;h1 id="docker-2-작년-작업-복기-netmhcpan-image-불러와서-패키지-돌리기">
 Docker #2 작년 작업 복기: netmhcpan image 불러와서 패키지 돌리기
 &lt;a class="anchor" href="#docker-2-%ec%9e%91%eb%85%84-%ec%9e%91%ec%97%85-%eb%b3%b5%ea%b8%b0-netmhcpan-image-%eb%b6%88%eb%9f%ac%ec%99%80%ec%84%9c-%ed%8c%a8%ed%82%a4%ec%a7%80-%eb%8f%8c%eb%a6%ac%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-01&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;img width="2448" height="1814" alt="image" src="https://github.com/user-attachments/assets/35f962af-822b-4693-8ac2-e320cd263314" />
&lt;p>2024.11.24 MutClust 작업중에 netmhcpan을 돌려야되는 상황이 왓었는데&lt;/p>
&lt;p>netmhcpan이 유료였나 그래서 패키지 다운은 안되고 담당 박사님은 그만두셧고.. 서버 뒤지다가 위 README 파일 발견해서 결과물 저장까진 했던 기억이있다.&lt;/p>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>이때먼가 의문이 들었던게 새로운 conda 환경에 접속한거같은 느낌이 아니라 완전 다른 제2의서버에 접속한 느낌이었는데 이상하게 연구실 디렉토리들은 그대로 접근이 가능해서 혼란스럽지만 그냥 절대경로 다 박고 수행했는데 결과들이 문제없이 저장됐었다.&lt;/p></description></item><item><title>MutClust 코드 리펙토링 #2 arg_parser</title><link>https://yshghid.github.io/docs/study/algorithm/algo2/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo2/</guid><description>&lt;h1 id="mutclust-코드-리펙토링-2-arg_parser">
 MutClust 코드 리펙토링 #2 arg_parser
 &lt;a class="anchor" href="#mutclust-%ec%bd%94%eb%93%9c-%eb%a6%ac%ed%8e%99%ed%86%a0%eb%a7%81-2-arg_parser">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-01&lt;/p>
&lt;hr>
&lt;p>MutClust 알고리즘의 코드 구성은 아래와 같은데&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>MutClust
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── sc/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── lib.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arg_parser.py // 실행 설정
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── utils.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>arg_parser.py는 실험 환경 파라미터 세팅 및 CLI 인자 파싱을 포함한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === arg_parser.py ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> argparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> os.path &lt;span style="color:#f92672">import&lt;/span> exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> src.mlib &lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DIMINISHING_FACTOR, EPSILON, EPSILON_SCALING_FACTOR,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MAX_EPS, MIN_CLUSTER_LENGTH, CCM_MIN_PERCENTAGE_SUM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ArgsInfo&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">__init__&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>args &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>fin &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>ref &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>eps &lt;span style="color:#f92672">=&lt;/span> EPSILON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>maxeps &lt;span style="color:#f92672">=&lt;/span> MAX_EPS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>min_persum &lt;span style="color:#f92672">=&lt;/span> CCM_MIN_PERCENTAGE_SUM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>eps_scaler_const &lt;span style="color:#f92672">=&lt;/span> EPSILON_SCALING_FACTOR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>es_control_const &lt;span style="color:#f92672">=&lt;/span> DIMINISHING_FACTOR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>min_cluster_length &lt;span style="color:#f92672">=&lt;/span> MIN_CLUSTER_LENGTH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">set_env&lt;/span>(input_path&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>, reference&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>, output_path&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info &lt;span style="color:#f92672">=&lt;/span> ArgsInfo()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> argparse&lt;span style="color:#f92672">.&lt;/span>ArgumentParser(prog&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cluster.py&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;-f&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--input_file&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2020_MUTCLUST/Data/Rawdata/COVID19/nucleotide_data/mutclust_input_data.txt&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;mutation frequency data file&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;-r&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--ref&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2020_MUTCLUST/Data/Rawdata/COVID19/nucleotide_data/new_reference.fasta&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;the reference genome&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;-e&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--eps&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, default&lt;span style="color:#f92672">=&lt;/span>EPSILON, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;width of window (epsilon)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--maxeps&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, default&lt;span style="color:#f92672">=&lt;/span>MAX_EPS, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;maximum eps&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--minps&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>float, default&lt;span style="color:#f92672">=&lt;/span>CCM_MIN_PERCENTAGE_SUM, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;minimum per_sum&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--es&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>float, default&lt;span style="color:#f92672">=&lt;/span>EPSILON_SCALING_FACTOR, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;eps scaling factor&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--exd&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>float, default&lt;span style="color:#f92672">=&lt;/span>DIMINISHING_FACTOR, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cluster expansion es diminishing factor&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#39;--minl&amp;#39;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, default&lt;span style="color:#f92672">=&lt;/span>MIN_CLUSTER_LENGTH, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;minimum cluster length&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>fin &lt;span style="color:#f92672">=&lt;/span> input_path &lt;span style="color:#66d9ef">if&lt;/span> input_path &lt;span style="color:#66d9ef">else&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>input_file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>ref &lt;span style="color:#f92672">=&lt;/span> reference &lt;span style="color:#66d9ef">if&lt;/span> reference &lt;span style="color:#66d9ef">else&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>ref
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>outdir &lt;span style="color:#f92672">=&lt;/span> output_path &lt;span style="color:#66d9ef">if&lt;/span> output_path &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./output&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> exists(info&lt;span style="color:#f92672">.&lt;/span>fin):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Input file does not exist: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>fin&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>eps &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>eps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>maxeps &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>maxeps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>min_persum &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>minps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>eps_scaler_const &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>es
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>es_control_const &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>exd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info&lt;span style="color:#f92672">.&lt;/span>min_cluster_length &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">.&lt;/span>minl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>#code availability&lt;/p></description></item><item><title>MutClust 코드 리펙토링 #3 utils</title><link>https://yshghid.github.io/docs/study/algorithm/algo9/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo9/</guid><description>&lt;h1 id="mutclust-코드-리펙토링-3-utils">
 MutClust 코드 리펙토링 #3 utils
 &lt;a class="anchor" href="#mutclust-%ec%bd%94%eb%93%9c-%eb%a6%ac%ed%8e%99%ed%86%a0%eb%a7%81-3-utils">#&lt;/a>
&lt;/h1>
&lt;p>#2025-08-01&lt;/p>
&lt;hr>
&lt;p>MutClust 알고리즘의 코드 구성은 아래와 같은데&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>MutClust
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── sc/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── lib.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arg_parser.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── utils.py // 전처리 및 분석
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>utils.py는 데이터 전처리 및 분석 함수를 포함한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === Fasta 전처리 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">fasta2csv&lt;/span>(home_dir, nation_dir, filechunk, ref, outdir):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file &lt;span style="color:#f92672">in&lt;/span> filechunk:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(home_dir, nation_dir, file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filename &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>splitext(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>basename(file))[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outpath &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(outdir, &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>filename&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>exists(outpath):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> DataFrame({&lt;span style="color:#e6db74">&amp;#39;ref&amp;#39;&lt;/span>: ref&lt;span style="color:#f92672">.&lt;/span>values, &lt;span style="color:#e6db74">&amp;#39;pos&amp;#39;&lt;/span>: ref&lt;span style="color:#f92672">.&lt;/span>index})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seq &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(open(path)&lt;span style="color:#f92672">.&lt;/span>readlines()[&lt;span style="color:#ae81ff">1&lt;/span>:])&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df[&lt;span style="color:#e6db74">&amp;#39;mut&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> [a &lt;span style="color:#66d9ef">if&lt;/span> a &lt;span style="color:#f92672">!=&lt;/span> ref[i] &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i, a &lt;span style="color:#f92672">in&lt;/span> enumerate(seq)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>to_csv(outpath, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">gisaid_fasta2csv&lt;/span>(homedir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>GISAID_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Sequence/Preprocessed/&amp;#34;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inputdir &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(homedir, &lt;span style="color:#e6db74">&amp;#39;MSA_fasta&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outdir &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(homedir, &lt;span style="color:#e6db74">&amp;#39;MSA_mutationinfo&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path(outdir)&lt;span style="color:#f92672">.&lt;/span>mkdir(exist_ok&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, parents&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> core_n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> nation_dir &lt;span style="color:#f92672">in&lt;/span> get_dirnames_list(inputdir):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filelist &lt;span style="color:#f92672">=&lt;/span> get_filenames_list(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(inputdir, nation_dir))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> chunk &lt;span style="color:#f92672">in&lt;/span> array_split(filelist, core_n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args_list&lt;span style="color:#f92672">.&lt;/span>append((inputdir, nation_dir, chunk, ref_seq, outdir))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> Pool(core_n) &lt;span style="color:#66d9ef">as&lt;/span> pool:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>map(fasta2csv, args_list)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === Nucleotide 전처리 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_nucleotide_sequence_dict&lt;/span>(seq_dir):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seq_dict &lt;span style="color:#f92672">=&lt;/span> dict()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seq_list &lt;span style="color:#f92672">=&lt;/span> get_filenames_list(seq_dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file &lt;span style="color:#f92672">in&lt;/span> seq_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filepath &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(seq_dir, file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> read_csv(filepath, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>name &lt;span style="color:#f92672">=&lt;/span> file&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>reset_index(drop&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> seq_dict[df&lt;span style="color:#f92672">.&lt;/span>name] &lt;span style="color:#f92672">=&lt;/span> df
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> seq_dict
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">getNucleotideRefSeqbyGene&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> read_csv(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2020_MUTCLUST/Data/Annotation/Nucleotide/covid_annotation.tsv&amp;#39;&lt;/span>, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">make_nucleotide_mutclust_input&lt;/span>(outdir, name, seq_dict&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>exists(outdir):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(outdir &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39; is not exist&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output_path &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(outdir, name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;_mutclust_input.tsv&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df_ATGC_path &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(outdir, name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;_freq_ATGC.csv&amp;#39;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_list, freq_list, per_list, entropy_list &lt;span style="color:#f92672">=&lt;/span> [], [], [], []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>exists(freq_df_ATGC_path):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> seq_dict &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;load seq_dict&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> DataFrame&lt;span style="color:#f92672">.&lt;/span>from_dict(seq_dict)&lt;span style="color:#f92672">.&lt;/span>transpose()&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>astype(int)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>sort_index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> freq_df[list(IUPAC_CODES&lt;span style="color:#f92672">.&lt;/span>keys())][[&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;T&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;G&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;C&amp;#39;&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df&lt;span style="color:#f92672">.&lt;/span>to_csv(freq_df_ATGC_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> read_csv(freq_df_ATGC_path, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pos &lt;span style="color:#f92672">in&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>index:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>loc[pos]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt_n &lt;span style="color:#f92672">=&lt;/span> freq&lt;span style="color:#f92672">.&lt;/span>sum()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> percentage &lt;span style="color:#f92672">=&lt;/span> freq &lt;span style="color:#f92672">/&lt;/span> cnt_n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> entrpy &lt;span style="color:#f92672">=&lt;/span> entropy(percentage, base&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> percentage&lt;span style="color:#f92672">.&lt;/span>drop(ref_seq[pos], inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq&lt;span style="color:#f92672">.&lt;/span>drop(ref_seq[pos], inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos_list&lt;span style="color:#f92672">.&lt;/span>append(int(pos))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_list&lt;span style="color:#f92672">.&lt;/span>append(freq&lt;span style="color:#f92672">.&lt;/span>sum())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_list&lt;span style="color:#f92672">.&lt;/span>append(percentage&lt;span style="color:#f92672">.&lt;/span>sum())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> entropy_list&lt;span style="color:#f92672">.&lt;/span>append(entrpy)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mutclust_input_df &lt;span style="color:#f92672">=&lt;/span> DataFrame({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Position&amp;#39;&lt;/span>: pos_list,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Frequency&amp;#39;&lt;/span>: freq_list,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Percentages&amp;#39;&lt;/span>: per_list,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Entropy&amp;#39;&lt;/span>: entropy_list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mutclust_input_df&lt;span style="color:#f92672">.&lt;/span>to_csv(output_path, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> mutclust_input_df
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === Mutation 데이터 병렬 처리 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">read_thead&lt;/span>(filepathlist, return_list, i):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ref_seq_sr &lt;span style="color:#f92672">=&lt;/span> getNucleotideRefSeq()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_dict &lt;span style="color:#f92672">=&lt;/span> {pos: Counter({k: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> k &lt;span style="color:#f92672">in&lt;/span> IUPAC_CODES&lt;span style="color:#f92672">.&lt;/span>keys()}) &lt;span style="color:#66d9ef">for&lt;/span> pos &lt;span style="color:#f92672">in&lt;/span> ref_seq_sr&lt;span style="color:#f92672">.&lt;/span>index}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> filepath &lt;span style="color:#f92672">in&lt;/span> filepathlist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> read_csv(filepath, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>reset_index(drop&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> index, mut &lt;span style="color:#f92672">in&lt;/span> enumerate(df[&lt;span style="color:#e6db74">&amp;#39;mut&amp;#39;&lt;/span>]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> symbol &lt;span style="color:#f92672">=&lt;/span> mut &lt;span style="color:#66d9ef">if&lt;/span> mut &lt;span style="color:#66d9ef">else&lt;/span> ref_seq_sr[index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> symbol &lt;span style="color:#f92672">in&lt;/span> sub_dict[index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_dict[index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>][symbol] &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_dict[index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>][symbol] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return_list&lt;span style="color:#f92672">.&lt;/span>append(sub_dict)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">th process complete!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">merge_thread&lt;/span>(poslist, sub_dict_list, return_dict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pos &lt;span style="color:#f92672">in&lt;/span> poslist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count_dict &lt;span style="color:#f92672">=&lt;/span> sum([d[pos] &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> sub_dict_list], Counter())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged_dict &lt;span style="color:#f92672">=&lt;/span> {k: count_dict&lt;span style="color:#f92672">.&lt;/span>get(k, &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> k &lt;span style="color:#f92672">in&lt;/span> IUPAC_CODES&lt;span style="color:#f92672">.&lt;/span>keys()}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return_dict[pos] &lt;span style="color:#f92672">=&lt;/span> merged_dict
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">load_mutationinfo&lt;/span>(input_dir&lt;span style="color:#f92672">=&lt;/span>COVID19_MUTATIONINFO_DIR, sample_list&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> core_n, split_n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>, &lt;span style="color:#ae81ff">1000&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_dict_list &lt;span style="color:#f92672">=&lt;/span> Manager()&lt;span style="color:#f92672">.&lt;/span>list()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filelist &lt;span style="color:#f92672">=&lt;/span> get_file_paths_recursive(input_dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> sample_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filelist &lt;span style="color:#f92672">=&lt;/span> [f &lt;span style="color:#66d9ef">for&lt;/span> f &lt;span style="color:#f92672">in&lt;/span> filelist &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>basename(f)&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">in&lt;/span> sample_list]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;sample_n: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>len(sample_list)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> splited_filepaths &lt;span style="color:#f92672">=&lt;/span> array_split(filelist, split_n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parameter_list &lt;span style="color:#f92672">=&lt;/span> [(chunk, sub_dict_list, i) &lt;span style="color:#66d9ef">for&lt;/span> i, chunk &lt;span style="color:#f92672">in&lt;/span> enumerate(splited_filepaths)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;read thread start!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> multi_processing(read_thead, parameter_list, core_n&lt;span style="color:#f92672">=&lt;/span>core_n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;read thread end!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged_dict &lt;span style="color:#f92672">=&lt;/span> Manager()&lt;span style="color:#f92672">.&lt;/span>dict()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> poslist &lt;span style="color:#f92672">=&lt;/span> ref_seq&lt;span style="color:#f92672">.&lt;/span>index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> splited_poslist &lt;span style="color:#f92672">=&lt;/span> array_split(poslist, split_n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_dict_list &lt;span style="color:#f92672">=&lt;/span> list(sub_dict_list)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parameter_list &lt;span style="color:#f92672">=&lt;/span> [(pos_chunk, sub_dict_list, merged_dict) &lt;span style="color:#66d9ef">for&lt;/span> pos_chunk &lt;span style="color:#f92672">in&lt;/span> splited_poslist]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;merge thread start!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> multi_processing(merge_thread, parameter_list, core_n&lt;span style="color:#f92672">=&lt;/span>core_n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;merge thread end!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> dict(merged_dict)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === Matrix 생성 병렬 처리 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">make_matrix_thread&lt;/span>(file_list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(GISAID_MUTCLUST_OUTPUT_DIR, &lt;span style="color:#e6db74">&amp;#39;clusters_hscore.txt&amp;#39;&lt;/span>), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column_list &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;c&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">(&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>row[&lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">,&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>row[&lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> i, row &lt;span style="color:#f92672">in&lt;/span> clusters_df&lt;span style="color:#f92672">.&lt;/span>iterrows()]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>DataFrame(columns&lt;span style="color:#f92672">=&lt;/span>column_list)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> path &lt;span style="color:#f92672">in&lt;/span> file_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> patient_name &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>splitext(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>basename(path))[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster_df&lt;span style="color:#f92672">.&lt;/span>loc[patient_name] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pos &lt;span style="color:#f92672">in&lt;/span> df[df[&lt;span style="color:#e6db74">&amp;#39;mut&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>notnull()][&lt;span style="color:#e6db74">&amp;#39;pos&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster_idx &lt;span style="color:#f92672">=&lt;/span> clusters_df[(clusters_df[&lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>] &lt;span style="color:#f92672">&amp;lt;=&lt;/span> pos) &lt;span style="color:#f92672">&amp;amp;&lt;/span> (pos &lt;span style="color:#f92672">&amp;lt;=&lt;/span> clusters_df[&lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>])]&lt;span style="color:#f92672">.&lt;/span>index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster_df&lt;span style="color:#f92672">.&lt;/span>loc[patient_name][cluster_idx] &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> cluster_df
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">make_matrix&lt;/span>(mutationinfo_dir, out_dir, tag, cpu_n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">60&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;starting make matrix!&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="color:#f92672">=&lt;/span> Pool(processes&lt;span style="color:#f92672">=&lt;/span>cpu_n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_list &lt;span style="color:#f92672">=&lt;/span> get_file_paths_recursive(mutationinfo_dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> results &lt;span style="color:#f92672">=&lt;/span> pool&lt;span style="color:#f92672">.&lt;/span>map(make_matrix_thread, array_split(file_list, cpu_n))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pd&lt;span style="color:#f92672">.&lt;/span>concat(results)&lt;span style="color:#f92672">.&lt;/span>to_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(out_dir, &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cluster_matrix_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.csv&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === H-score 계산 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add_HSCORE&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(MUTCLUST_INPUT_DIR, &lt;span style="color:#e6db74">&amp;#39;gisaid_mutclust_input.tsv&amp;#39;&lt;/span>), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df[HSCORE] &lt;span style="color:#f92672">=&lt;/span> df[PER] &lt;span style="color:#f92672">*&lt;/span> df[ENT]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>to_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(MUTCLUST_INPUT_DIR, &lt;span style="color:#e6db74">&amp;#39;gisaid_mutclust_input_with_score.tsv&amp;#39;&lt;/span>), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === 주석(Annotation) ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">annotation&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapping_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(GISAID_METADATA_DIR, &lt;span style="color:#e6db74">&amp;#39;merged_info.tsv&amp;#39;&lt;/span>), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i, row &lt;span style="color:#f92672">in&lt;/span> mapping_df&lt;span style="color:#f92672">.&lt;/span>iterrows():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapping_df&lt;span style="color:#f92672">.&lt;/span>loc[i] &lt;span style="color:#f92672">=&lt;/span> [ast&lt;span style="color:#f92672">.&lt;/span>literal_eval(val) &lt;span style="color:#66d9ef">for&lt;/span> val &lt;span style="color:#f92672">in&lt;/span> row]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(mapping_df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">make_clade_divide_mutation&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clade_dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./clade_divide_mutation&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start_dict &lt;span style="color:#f92672">=&lt;/span> getStartDict()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file &lt;span style="color:#f92672">in&lt;/span> get_filenames_list(clade_dir):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> read_csv(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(clade_dir, file), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === 병렬 처리 유틸리티 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">multi_processing&lt;/span>(func, parameter_list, core_n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proc, proc_excution, proc_end &lt;span style="color:#f92672">=&lt;/span> [], [], []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> param &lt;span style="color:#f92672">in&lt;/span> parameter_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proc&lt;span style="color:#f92672">.&lt;/span>append(Process(target&lt;span style="color:#f92672">=&lt;/span>func, args&lt;span style="color:#f92672">=&lt;/span>param))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> proc &lt;span style="color:#f92672">or&lt;/span> proc_excution:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(len(proc)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(proc_excution) &lt;span style="color:#f92672">&amp;lt;&lt;/span> core_n:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p &lt;span style="color:#f92672">=&lt;/span> proc&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proc_excution&lt;span style="color:#f92672">.&lt;/span>append(p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> p &lt;span style="color:#f92672">in&lt;/span> proc_excution[:]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> p&lt;span style="color:#f92672">.&lt;/span>is_alive():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proc_excution&lt;span style="color:#f92672">.&lt;/span>remove(p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proc_end&lt;span style="color:#f92672">.&lt;/span>append(p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === 메인 실행 ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotation()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>#code information&lt;/p></description></item><item><title>HTML #2 SKCT 공부용 메모장+계산기 만들기</title><link>https://yshghid.github.io/docs/study/sw/sw12/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw12/</guid><description>&lt;h1 id="html-2-skct-공부용-메모장계산기-만들기">
 HTML #2 SKCT 공부용 메모장+계산기 만들기
 &lt;a class="anchor" href="#html-2-skct-%ea%b3%b5%eb%b6%80%ec%9a%a9-%eb%a9%94%eb%aa%a8%ec%9e%a5%ea%b3%84%ec%82%b0%ea%b8%b0-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-31&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>SKCT는 응시화면이 아래와같이 돼잇는데&lt;/p>
&lt;p>&lt;a href="https://community.linkareer.com/written_test/2629945">&lt;img width="3030" height="1302" alt="image" src="https://github.com/user-attachments/assets/a8f6e4d3-39f1-4c6c-8462-bfd8a4288602" />&lt;/a>&lt;/p>
&lt;p>연습하기 불편한거같애서 html로 만들어봣다&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-skct-공부용-메모장계산기">
 2. SKCT 공부용 메모장+계산기
 &lt;a class="anchor" href="#2-skct-%ea%b3%b5%eb%b6%80%ec%9a%a9-%eb%a9%94%eb%aa%a8%ec%9e%a5%ea%b3%84%ec%82%b0%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#구조&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/skct
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── script.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#링크&lt;mark>&lt;/p>
&lt;p>&lt;a href="https://github.com/yshghid/skct-tools/tree/main">https://github.com/yshghid/skct-tools/tree/main&lt;/a>&lt;/p>
&lt;p>&lt;mark>#활용&lt;mark>&lt;/p>
&lt;img width="3360" height="2100" alt="image" src="https://github.com/user-attachments/assets/c85159d5-85e8-4a7a-a24d-002ab50984e4" />
&lt;p>요렇게 문제옆에 띄워놓고 쓰면됨 ㅎㅎㅎ&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-수정사항">
 3. 수정사항
 &lt;a class="anchor" href="#3-%ec%88%98%ec%a0%95%ec%82%ac%ed%95%ad">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#메모장&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>메모장 ↔ 그림판 전환 버튼&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>메모장일때는 &amp;lsquo;🎨 그림판&amp;rsquo;, 그림판일때는 &amp;lsquo;📝 메모장&amp;rsquo;이 뜨게 수정&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#그림판&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>선 굵기 조절하는 슬라이더 넣기&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>html: 슬라이더 UI 추가&lt;/li>
&lt;li>javascript: 초기 선 굵기 1로 설정 / 그림판 상태일때만 보기로 설정&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 선 굵기 조절 슬라이더 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;padding: 10px 20px; background: #f0f0f0; display: none;&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeControls&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">label&lt;/span> &lt;span style="color:#a6e22e">for&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeWidth&amp;#34;&lt;/span>&amp;gt;선 굵기:&amp;lt;/&lt;span style="color:#f92672">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;range&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeWidth&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeValue&amp;#34;&lt;/span>&amp;gt;1&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;px
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 선 굵기 조절 슬라이더 요소
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">strokeControls&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;strokeControls&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">strokeWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;strokeWidth&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">strokeValue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;strokeValue&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 초기 선 굵기 설정
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parseFloat(&lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineCap&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;round&amp;#39;&lt;/span>; &lt;span style="color:#75715e">// 더 부드럽게
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 슬라이더 변경 시 선 굵기 업데이트
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;input&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parseFloat(&lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeValue&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 그림판 상태일때만 보기
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">toggleMode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">isTextVisible&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">textArea&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;none&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">isTextVisible&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">textArea&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;none&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;block&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeControls&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;block&amp;#39;&lt;/span>; &lt;span style="color:#75715e">// 슬라이더 표시
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">resizeCanvas&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">modeToggleBtn&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;📝 메모장&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;none&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeControls&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;none&amp;#39;&lt;/span>; &lt;span style="color:#75715e">// 슬라이더 숨김
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">textArea&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">display&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;block&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">modeToggleBtn&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;🎨 그림판&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>선 픽셀이 뭔가 깨져보임&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>디바이스 해상도(DPR: devicePixelRatio) 반영하여 캔버스 확장
&lt;ul>
&lt;li>원래 코드: 디스플레이 해상도를 고려하지 않고 canvas.width / canvas.height 를 설정&lt;/li>
&lt;li>수정된 코드: dpr을 고려해서 width, height를 수정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 원래 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">resizeCanvas&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientWidth&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">height&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientHeight&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 수정된 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">resizeCanvas&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">dpr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">devicePixelRatio&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientWidth&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">dpr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">height&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientHeight&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">dpr&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientWidth&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;px&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">style&lt;/span>.&lt;span style="color:#a6e22e">height&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">canvas&lt;/span>.&lt;span style="color:#a6e22e">clientHeight&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;px&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">setTransform&lt;/span>(&lt;span style="color:#a6e22e">dpr&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">dpr&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>); &lt;span style="color:#75715e">// scale canvas context
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>선색상, 지우개, 실행취소 기능 넣기&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&amp;ldquo;🧽 지우개&amp;rdquo; &amp;ldquo;✏️ 펜&amp;rdquo; 이렇게 2개 버튼 넣지말고 버튼 하나만 남겨서 펜 상태이면 &amp;ldquo;🧽 지우개&amp;rdquo;, 지우개 상태면 &amp;ldquo;✏️ 펜&amp;quot;으로 변경&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 도구 패널 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 원래코드 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeControls&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">label&lt;/span>&amp;gt;선 굵기:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;range&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeWidth&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeValue&amp;#34;&lt;/span>&amp;gt;1&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;px
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">label&lt;/span>&amp;gt;선 색상:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;color&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeColor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;setEraser(true)&amp;#34;&lt;/span>&amp;gt;🧽 지우개&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;setEraser(false)&amp;#34;&lt;/span>&amp;gt;✏️ 펜&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;undo()&amp;#34;&lt;/span>&amp;gt;↩️ 실행취소&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 수정된 코드 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeControls&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">label&lt;/span>&amp;gt;선 굵기:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;range&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeWidth&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeValue&amp;#34;&lt;/span>&amp;gt;1&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;px
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">label&lt;/span>&amp;gt;선 색상:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;color&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeColor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#000000&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;toggleToolBtn&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;toggleTool()&amp;#34;&lt;/span>&amp;gt;🧽 지우개&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;undo()&amp;#34;&lt;/span>&amp;gt;↩️ 실행취소&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 버튼 1개만 남김
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">toggleTool&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">erasing&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">erasing&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">strokeStyle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">erasing&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#39;#ffffff&amp;#39;&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">strokeColor&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">toggleToolBtn&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">erasing&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#39;✏️ 펜&amp;#39;&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;🧽 지우개&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 색상 선택 변경 시 현재 상태 반영
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">strokeColor&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;input&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">erasing&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">strokeStyle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strokeColor&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>지우개/펜 기본 두께 설정 / 지우개 색깔 수정&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>지우개 상태일때는 기본값이 9.5 / 펜 상태일때는 기본값이 3.0으로&lt;/li>
&lt;li>지우개랑 배경색 통일시키기&lt;/li>
&lt;li>&amp;lsquo;🧽 지우개&amp;rsquo; 버튼을 클릭했을때 선 굵기가 9.5로 바뀌고나서 다시 &amp;ldquo;✏️ 펜&amp;rdquo; 버튼을 누르면 슬라이더가 원래 두께인 3.0로 돌아오지않고 9.5로 남는데 3.0로 따라오게.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">previousPenWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>; &lt;span style="color:#75715e">// 기본 펜 굵기
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">toggleTool&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">erasing&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">erasing&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">erasing&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">previousPenWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parseFloat(&lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>); &lt;span style="color:#75715e">// 현재 펜 굵기 저장
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">strokeStyle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;#f9f9f9&amp;#39;&lt;/span>; &lt;span style="color:#75715e">// 배경색과 일치
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9.5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9.5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeValue&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;9.5&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">toggleToolBtn&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;✏️ 펜&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">strokeStyle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strokeColor&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ctx&lt;/span>.&lt;span style="color:#a6e22e">lineWidth&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">previousPenWidth&lt;/span>; &lt;span style="color:#75715e">// 복원
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">strokeWidth&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">previousPenWidth&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strokeValue&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">previousPenWidth&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">toggleToolBtn&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;🧽 지우개&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;range&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeWidth&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">min&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;strokeValue&amp;#34;&lt;/span>&amp;gt;3&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;px
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#계산기&lt;/mark>&lt;/p></description></item><item><title>MutClust 코드 리펙토링 #1 lib.py</title><link>https://yshghid.github.io/docs/study/algorithm/algo1/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo1/</guid><description>&lt;h1 id="mutclust-코드-리펙토링-1-libpy">
 MutClust 코드 리펙토링 #1 lib.py
 &lt;a class="anchor" href="#mutclust-%ec%bd%94%eb%93%9c-%eb%a6%ac%ed%8e%99%ed%86%a0%eb%a7%81-1-libpy">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-31&lt;/p>
&lt;hr>
&lt;p>MutClust 알고리즘의 코드 구성은 아래와 같은데&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>MutClust
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── sc/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── lib.py // 핵심 알고리즘 로직
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arg_parser.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── utils.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>lib.py는 후보 Core 선택 로직과 클러스터 탐지 알고리즘을 포함한다.&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="1-config--constant-선언">
 1. Config &amp;amp; Constant 선언
 &lt;a class="anchor" href="#1-config--constant-%ec%84%a0%ec%96%b8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># === mlib.py ===&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> math &lt;span style="color:#f92672">import&lt;/span> ceil
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> src.utils &lt;span style="color:#f92672">import&lt;/span> mutation_filtering
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- Constants ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>POS &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Position&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FREQ &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Frequency&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PER &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Percentage&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENT &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Entropy&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HSCORE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H-score&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HSCORE_SUM &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H-score_sum&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HSCORE_AVR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H-score_avr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PER_SUM &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;per_sum&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENT_SUM &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;ent_sum&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PER_AVR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;per_avr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENT_AVR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;ent_avr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EPSILON &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EPSILON_SCALING_FACTOR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DIMINISHING_FACTOR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MIN_CLUSTER_LENGTH &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCM_MIN_HSCORE_SUM &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCM_MIN_HSCORE_AVR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.01&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CCM_MIN_HSCORE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.03&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MIN_MUTATIONS &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- Config Init ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>(d, info):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">--- Configurations ---&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Input data: &amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>fin&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39; &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>d&lt;span style="color:#f92672">.&lt;/span>shape&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Output dir: &amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;Parameters:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Min Eps=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>eps&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Max Eps=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>maxeps&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Min per_sum=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>min_persum&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">.1f&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Eps scaling factor=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>eps_scaler_const&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">.1f&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Expansion diminishing factor=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>es_control_const&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34; Min cluster length=&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>min_cluster_length&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;----------------------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-eps-내-중요도-계산">
 2. Eps 내 중요도 계산
 &lt;a class="anchor" href="#2-eps-%eb%82%b4-%ec%a4%91%ec%9a%94%eb%8f%84-%ea%b3%84%ec%82%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- EPS Stats ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">get_eps_stats&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">__init__&lt;/span>(self, idx, pos, df, lr_index, lr_distance, es):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>idx &lt;span style="color:#f92672">=&lt;/span> idx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>i &lt;span style="color:#f92672">=&lt;/span> pos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>i_per &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, PER]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>i_freq &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, FREQ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>i_ent &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, ENT]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>i_hscore &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, HSCORE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>l_dist, self&lt;span style="color:#f92672">.&lt;/span>r_dist &lt;span style="color:#f92672">=&lt;/span> lr_distance
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ccm_df &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[lr_index[&lt;span style="color:#ae81ff">0&lt;/span>]:lr_index[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>length &lt;span style="color:#f92672">=&lt;/span> len(ccm_df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>l_pos &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[lr_index[&lt;span style="color:#ae81ff">0&lt;/span>], POS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>r_pos &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[lr_index[&lt;span style="color:#ae81ff">1&lt;/span>], POS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>mut_n &lt;span style="color:#f92672">=&lt;/span> len(ccm_df[ccm_df[HSCORE] &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>eps_scaler &lt;span style="color:#f92672">=&lt;/span> es
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>freq_sum &lt;span style="color:#f92672">=&lt;/span> ccm_df[FREQ]&lt;span style="color:#f92672">.&lt;/span>sum()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>freq_avr &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>freq_sum &lt;span style="color:#f92672">/&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>per_sum &lt;span style="color:#f92672">=&lt;/span> ccm_df[PER]&lt;span style="color:#f92672">.&lt;/span>sum()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>per_avr &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>per_sum &lt;span style="color:#f92672">/&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>ent_sum &lt;span style="color:#f92672">=&lt;/span> ccm_df[ENT]&lt;span style="color:#f92672">.&lt;/span>sum()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>ent_avr &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>ent_sum &lt;span style="color:#f92672">/&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>hscore_sum &lt;span style="color:#f92672">=&lt;/span> ccm_df[HSCORE]&lt;span style="color:#f92672">.&lt;/span>sum()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>hscore_avr &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>hscore_sum &lt;span style="color:#f92672">/&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">to_dict&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;index&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>idx, POS: self&lt;span style="color:#f92672">.&lt;/span>i, FREQ: self&lt;span style="color:#f92672">.&lt;/span>i_freq, PER: self&lt;span style="color:#f92672">.&lt;/span>i_per,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ENT: self&lt;span style="color:#f92672">.&lt;/span>i_ent, HSCORE: self&lt;span style="color:#f92672">.&lt;/span>i_hscore, &lt;span style="color:#e6db74">&amp;#39;length&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>length,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;freq_sum&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>freq_sum, &lt;span style="color:#e6db74">&amp;#39;freq_avr&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>freq_avr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PER_SUM: self&lt;span style="color:#f92672">.&lt;/span>per_sum, PER_AVR: self&lt;span style="color:#f92672">.&lt;/span>per_avr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ENT_SUM: self&lt;span style="color:#f92672">.&lt;/span>ent_sum, ENT_AVR: self&lt;span style="color:#f92672">.&lt;/span>ent_avr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HSCORE_SUM: self&lt;span style="color:#f92672">.&lt;/span>hscore_sum, HSCORE_AVR: self&lt;span style="color:#f92672">.&lt;/span>hscore_avr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>eps_scaler, &lt;span style="color:#e6db74">&amp;#39;left_distance&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>l_dist,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;right_distance&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>r_dist, &lt;span style="color:#e6db74">&amp;#39;l_pos&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>l_pos,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;r_pos&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>r_pos, &lt;span style="color:#e6db74">&amp;#39;mut_n&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>mut_n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-local-eps-계산">
 3. Local Eps 계산
 &lt;a class="anchor" href="#3-local-eps-%ea%b3%84%ec%82%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- EPS Region ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_eps_region&lt;/span>(df, idx, info):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pos &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, POS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur_hscore &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[idx, HSCORE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eps_scaler &lt;span style="color:#f92672">=&lt;/span> ceil(EPSILON_SCALING_FACTOR &lt;span style="color:#f92672">*&lt;/span> cur_hscore)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ldeps &lt;span style="color:#f92672">=&lt;/span> rdeps &lt;span style="color:#f92672">=&lt;/span> eps_scaler &lt;span style="color:#f92672">*&lt;/span> EPSILON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ldeps &lt;span style="color:#f92672">=&lt;/span> min(ldeps, info&lt;span style="color:#f92672">.&lt;/span>maxeps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rdeps &lt;span style="color:#f92672">=&lt;/span> min(rdeps, info&lt;span style="color:#f92672">.&lt;/span>maxeps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_idx, r_idx &lt;span style="color:#f92672">=&lt;/span> idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> l_idx &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> (pos &lt;span style="color:#f92672">-&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>loc[l_idx, POS]) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> ldeps:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_idx &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> r_idx &lt;span style="color:#f92672">&amp;lt;&lt;/span> len(df) &lt;span style="color:#f92672">and&lt;/span> (df&lt;span style="color:#f92672">.&lt;/span>loc[r_idx, POS] &lt;span style="color:#f92672">-&lt;/span> pos) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> rdeps:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r_idx &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [l_idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, r_idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>], [idx &lt;span style="color:#f92672">-&lt;/span> (l_idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>), (r_idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> idx], eps_scaler
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-후보-core-돌연변이-선택">
 4. 후보 Core 돌연변이 선택
 &lt;a class="anchor" href="#4-%ed%9b%84%eb%b3%b4-core-%eb%8f%8c%ec%97%b0%eb%b3%80%ec%9d%b4-%ec%84%a0%ed%83%9d">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- Core Mutation Detection ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_candidate_core_mutations&lt;/span>(df, info, tag):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mut_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ccm_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> mutation_filtering(df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> idx, pos &lt;span style="color:#f92672">in&lt;/span> enumerate(df[POS]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lr_idx, lr_dist, es &lt;span style="color:#f92672">=&lt;/span> get_eps_region(df, idx, info)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stat &lt;span style="color:#f92672">=&lt;/span> get_eps_stats(idx, pos, df, lr_idx, lr_dist, es)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> d &lt;span style="color:#f92672">=&lt;/span> stat&lt;span style="color:#f92672">.&lt;/span>to_dict()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mut_list&lt;span style="color:#f92672">.&lt;/span>append(d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> d[&lt;span style="color:#e6db74">&amp;#39;mut_n&amp;#39;&lt;/span>] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> MIN_MUTATIONS &lt;span style="color:#f92672">and&lt;/span> d[HSCORE_SUM] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> CCM_MIN_HSCORE_SUM &lt;span style="color:#f92672">and&lt;/span> d[HSCORE_AVR] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> CCM_MIN_HSCORE_AVR &lt;span style="color:#f92672">and&lt;/span> d[HSCORE] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> CCM_MIN_HSCORE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ccm_list&lt;span style="color:#f92672">.&lt;/span>append(idx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/total_results_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.tsv&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(mut_list[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>keys()) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> m &lt;span style="color:#f92672">in&lt;/span> mut_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, m&lt;span style="color:#f92672">.&lt;/span>values())) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/ccm_results_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.tsv&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(mut_list[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>keys()) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> ccm_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, mut_list[i]&lt;span style="color:#f92672">.&lt;/span>values())) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>array(mut_list), ccm_list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="5-cluster-expansion">
 5. Cluster Expansion
 &lt;a class="anchor" href="#5-cluster-expansion">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- Cluster Expansion ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">expand_cluster&lt;/span>(ccm_idx, mut_list, info):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> es_l &lt;span style="color:#f92672">=&lt;/span> es_r &lt;span style="color:#f92672">=&lt;/span> mut_list[ccm_idx][&lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_idx, r_idx &lt;span style="color:#f92672">=&lt;/span> ccm_idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, ccm_idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mut_n &lt;span style="color:#f92672">=&lt;/span> len(mut_list)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_max, r_max &lt;span style="color:#f92672">=&lt;/span> mut_list[ccm_idx][&lt;span style="color:#e6db74">&amp;#39;left_distance&amp;#39;&lt;/span>], mut_list[ccm_idx][&lt;span style="color:#e6db74">&amp;#39;right_distance&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_pos &lt;span style="color:#f92672">=&lt;/span> mut_list[ccm_idx][POS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> l_idx &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> (l_pos &lt;span style="color:#f92672">-&lt;/span> mut_list[l_idx][POS]) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> l_max:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delta &lt;span style="color:#f92672">=&lt;/span> es_l &lt;span style="color:#f92672">-&lt;/span> mut_list[l_idx][&lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> es_l &lt;span style="color:#f92672">-=&lt;/span> delta &lt;span style="color:#f92672">/&lt;/span> info&lt;span style="color:#f92672">.&lt;/span>es_control_const
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_max &lt;span style="color:#f92672">=&lt;/span> max(info&lt;span style="color:#f92672">.&lt;/span>eps &lt;span style="color:#f92672">*&lt;/span> es_l, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_idx &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> r_idx &lt;span style="color:#f92672">&amp;lt;&lt;/span> mut_n &lt;span style="color:#f92672">and&lt;/span> (mut_list[r_idx][POS] &lt;span style="color:#f92672">-&lt;/span> l_pos) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> r_max:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delta &lt;span style="color:#f92672">=&lt;/span> es_r &lt;span style="color:#f92672">-&lt;/span> mut_list[r_idx][&lt;span style="color:#e6db74">&amp;#39;eps_scaler&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> es_r &lt;span style="color:#f92672">-=&lt;/span> delta &lt;span style="color:#f92672">/&lt;/span> info&lt;span style="color:#f92672">.&lt;/span>es_control_const
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r_max &lt;span style="color:#f92672">=&lt;/span> max(info&lt;span style="color:#f92672">.&lt;/span>eps &lt;span style="color:#f92672">*&lt;/span> es_r, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r_idx &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l_idx &lt;span style="color:#f92672">=&lt;/span> max(l_idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r_idx &lt;span style="color:#f92672">=&lt;/span> min(r_idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, mut_n &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clust &lt;span style="color:#f92672">=&lt;/span> [a[POS] &lt;span style="color:#66d9ef">for&lt;/span> a &lt;span style="color:#f92672">in&lt;/span> mut_list[l_idx:r_idx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#66d9ef">if&lt;/span> a[HSCORE] &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>: min(clust),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>: max(clust),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;length&amp;#39;&lt;/span>: max(clust) &lt;span style="color:#f92672">-&lt;/span> min(clust) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;mut_positions&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, sorted(clust)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="6-dynamic-clustering">
 6. Dynamic Clustering
 &lt;a class="anchor" href="#6-dynamic-clustering">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --- Dynamic Clustering ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">dynaclust&lt;/span>(mut_list, ccm_list, info, tag):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters &lt;span style="color:#f92672">=&lt;/span> [expand_cluster(i, mut_list, info) &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> ccm_list]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters&lt;span style="color:#f92672">.&lt;/span>sort(key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> x: x[&lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> len(clusters):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l, r &lt;span style="color:#f92672">=&lt;/span> clusters[i][&lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>], clusters[i][&lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> muts &lt;span style="color:#f92672">=&lt;/span> set(map(int, clusters[i][&lt;span style="color:#e6db74">&amp;#39;mut_positions&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j &lt;span style="color:#f92672">=&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> j &lt;span style="color:#f92672">&amp;lt;&lt;/span> len(clusters) &lt;span style="color:#f92672">and&lt;/span> clusters[j][&lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>] &lt;span style="color:#f92672">&amp;lt;=&lt;/span> r:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> max(r, clusters[j][&lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> muts&lt;span style="color:#f92672">.&lt;/span>update(map(int, clusters[j][&lt;span style="color:#e6db74">&amp;#39;mut_positions&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(muts) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> MIN_MUTATIONS:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged&lt;span style="color:#f92672">.&lt;/span>append({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;left_position&amp;#39;&lt;/span>: min(muts),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;right_position&amp;#39;&lt;/span>: max(muts),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;length&amp;#39;&lt;/span>: max(muts) &lt;span style="color:#f92672">-&lt;/span> min(muts) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;mut_positions&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, sorted(muts)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#f92672">=&lt;/span> j
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>info&lt;span style="color:#f92672">.&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/clusters_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.txt&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(merged[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>keys()) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> m &lt;span style="color:#f92672">in&lt;/span> merged:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, m&lt;span style="color:#f92672">.&lt;/span>values())) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> merged
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>#code availability&lt;/p></description></item><item><title>SQL #6 AI 서비스 리뷰 시스템</title><link>https://yshghid.github.io/docs/study/sw/sw13/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw13/</guid><description>&lt;h1 id="sql-6-ai-서비스-리뷰-시스템">
 SQL #6 AI 서비스 리뷰 시스템
 &lt;a class="anchor" href="#sql-6-ai-%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%a6%ac%eb%b7%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-31&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>AI 서비스 리뷰 시스템: 키워드 기반 텍스트 필터링과 AI 기반 방식의 비교를 통해 유사도 기반 검색에 대한 개념 이해&lt;/p>
&lt;ul>
&lt;li>
&lt;p>테이블 개요&lt;/p>
&lt;ul>
&lt;li>Day 3 – ai_service_creator_ranking.sql&lt;/li>
&lt;li>주제: AI 서비스 리뷰 (WITH (CTE) + 집계로 인기 기획자 추출)&lt;/li>
&lt;li>목적: CTE(Common Table Expression)로 집계 테이블을 구성, AVG(평점)과 COUNT(리뷰)를 기준으로 인기 있는 기획자 선정, ROW_NUMBER()로 랭킹 부여, 향후 AI 추천(예: 유사도 기반 + 평점 기반 추천) 전단 필터링에 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>실습 문제&lt;/p></description></item><item><title>SQL #4 AI 피드백 분석 시스템의 테이블 정규화</title><link>https://yshghid.github.io/docs/study/sw/sw10/</link><pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw10/</guid><description>&lt;h1 id="sql-4-ai-피드백-분석-시스템의-테이블-정규화">
 SQL #4 AI 피드백 분석 시스템의 테이블 정규화
 &lt;a class="anchor" href="#sql-4-ai-%ed%94%bc%eb%93%9c%eb%b0%b1-%eb%b6%84%ec%84%9d-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ed%85%8c%ec%9d%b4%eb%b8%94-%ec%a0%95%ea%b7%9c%ed%99%94">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-30&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>AI 피드백 분석 시스템의 테이블 정규화&lt;/p>
&lt;ul>
&lt;li>
&lt;p>시나리오&lt;/p>
&lt;ul>
&lt;li>여러분은 AI 피드백 분석 시스템을 위한 데이터 모델링을 맡았습니다.&lt;/li>
&lt;li>현재는 여러 실험 데이터를 한 테이블에 모아두었지만, 벡터 임베딩 처리, 학습데이터 전처리, RAG 문서 기반 검색 등을 고려해 정규화 설계가 필요합니다. [비정규 테이블 예시: Day 2 – 정규화와 제약조건_실습1_예제_ai_feedback_raw.csv]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>실습 목표&lt;/p>
&lt;ul>
&lt;li>LLM Feedback 데이터 정규화 (3NF까지 고려)&lt;/li>
&lt;li>model, user, prompt-response, tags 분리&lt;/li>
&lt;li>tags 필드는:TEXT[ ] 배열로 유지한 구조 (빠른 전처리, FAISS 등 용이)&lt;/li>
&lt;li>feedback_tag라는 별도 테이블로 정규화 (통계, RAG 전처리 유리)&lt;/li>
&lt;li>AI 분석 목적의 전처리 성능 관점에서 두 방식 비교 설명&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-objective">
 2. Objective
 &lt;a class="anchor" href="#2-objective">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>비정규화된 AI 피드백 테이블을 정규화&lt;/li>
&lt;li>사용자, 모델, 질문-응답(prompt-response), 태그(tags) 정보를 분리&lt;/li>
&lt;li>태그를 배열 형태(TEXT[]), 또는 별도 정규 테이블(feedback_tag)로 관리하여 AI 분석 목적(임베딩, 전처리, RAG)에 적합한 구조로 테이블 설계&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3-ai-피드백-테이블-확인">
 3. AI 피드백 테이블 확인
 &lt;a class="anchor" href="#3-ai-%ed%94%bc%eb%93%9c%eb%b0%b1-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%99%95%ec%9d%b8">#&lt;/a>
&lt;/h3>
&lt;p>원본 데이터를 확인해보면 아래와같고&lt;/p></description></item><item><title>SQL #5 소셜미디어 포스트 리뷰 시스템</title><link>https://yshghid.github.io/docs/study/sw/sw11/</link><pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw11/</guid><description>&lt;h1 id="sql-5-소셜미디어-포스트-리뷰-시스템">
 SQL #5 소셜미디어 포스트 리뷰 시스템
 &lt;a class="anchor" href="#sql-5-%ec%86%8c%ec%85%9c%eb%af%b8%eb%94%94%ec%96%b4-%ed%8f%ac%ec%8a%a4%ed%8a%b8-%eb%a6%ac%eb%b7%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-30&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>JSONB 기반의 메타정보 필드 설계 + 검색 + AI 분석 연계&lt;/p>
&lt;ul>
&lt;li>
&lt;p>테이블 개요&lt;/p>
&lt;ul>
&lt;li>Day 2 – jsonb_metadata_sql_practice.sql&lt;/li>
&lt;li>주제: 소셜미디어 포스트 리뷰&lt;/li>
&lt;li>목적: 포스트에 대한 사용자 평가 + 해시태그/속성을 JSONB로 저장하여 AI 추천/필터 기반 만들기&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>실습 준비&lt;/p>
&lt;ul>
&lt;li>특정 메타 속성 포함 검색(JSONB 검색 쿼리 실습)&lt;/li>
&lt;li>GIN 인덱스 생성&lt;/li>
&lt;li>AI 필터링 활용 시나리오 (Hybrid Filtering 기반)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>문제&lt;/p>
&lt;ul>
&lt;li>sentiment가 negative인 리뷰만 출력&lt;/li>
&lt;li>메타데이터에 &amp;ldquo;language&amp;rdquo; 키가 포함된 행 찾기 (? 연산자 사용)&lt;/li>
&lt;li>&amp;ldquo;topic&amp;quot;이 &amp;ldquo;productivity&amp;quot;이 아닌 리뷰만 출력 (힌트: NOT (metadata @&amp;gt; &amp;hellip;))&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-소셜미디어-포스트-리뷰-테이블-생성">
 2. 소셜미디어 포스트 리뷰 테이블 생성
 &lt;a class="anchor" href="#2-%ec%86%8c%ec%85%9c%eb%af%b8%eb%94%94%ec%96%b4-%ed%8f%ac%ec%8a%a4%ed%8a%b8-%eb%a6%ac%eb%b7%b0-%ed%85%8c%ec%9d%b4%eb%b8%94-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> post_reviews (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> review_id SERIAL &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post_id TEXT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> review_text TEXT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata JSONB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> post_reviews (post_id, review_text, metadata) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#e6db74">&amp;#39;POST001&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;이 포스트는 인사이트가 풍부했어요!&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;topic&amp;#34;: &amp;#34;AI&amp;#34;, &amp;#34;sentiment&amp;#34;: &amp;#34;positive&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;ko&amp;#34;}&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#e6db74">&amp;#39;POST002&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;내용이 다소 어렵고 추상적입니다.&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;topic&amp;#34;: &amp;#34;philosophy&amp;#34;, &amp;#34;sentiment&amp;#34;: &amp;#34;negative&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;en&amp;#34;}&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#e6db74">&amp;#39;POST003&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;짧고 명확해서 유익했어요!&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;topic&amp;#34;: &amp;#34;productivity&amp;#34;, &amp;#34;sentiment&amp;#34;: &amp;#34;positive&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;ko&amp;#34;}&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#e6db74">&amp;#39;POST004&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;그저 그런 느낌이었어요.&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;topic&amp;#34;: &amp;#34;lifestyle&amp;#34;, &amp;#34;sentiment&amp;#34;: &amp;#34;neutral&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;en&amp;#34;}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> idx_post_reviews_metadata &lt;span style="color:#66d9ef">ON&lt;/span> post_reviews &lt;span style="color:#66d9ef">USING&lt;/span> GIN (metadata);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1880" height="424" alt="image" src="https://github.com/user-attachments/assets/6aed3876-7946-4b4a-8019-2fac8fb2ce75" />
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3-sentiment가-negative인-리뷰만-출력">
 3. sentiment가 negative인 리뷰만 출력
 &lt;a class="anchor" href="#3-sentiment%ea%b0%80-negative%ec%9d%b8-%eb%a6%ac%eb%b7%b0%eb%a7%8c-%ec%b6%9c%eb%a0%a5">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> post_reviews
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> metadata &lt;span style="color:#f92672">-&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;sentiment&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;negative&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1879" height="420" alt="image" src="https://github.com/user-attachments/assets/320b17c9-e2d5-4061-955a-2a57a6d26835" />
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="4-메타데이터에-language-키가-포함된-행-찾기">
 4. 메타데이터에 &amp;ldquo;language&amp;rdquo; 키가 포함된 행 찾기
 &lt;a class="anchor" href="#4-%eb%a9%94%ed%83%80%eb%8d%b0%ec%9d%b4%ed%84%b0%ec%97%90-language-%ed%82%a4%ea%b0%80-%ed%8f%ac%ed%95%a8%eb%90%9c-%ed%96%89-%ec%b0%be%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> post_reviews
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> metadata &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#39;language&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1878" height="426" alt="image" src="https://github.com/user-attachments/assets/36f8f4a0-477d-4c1f-b06d-6be54a0aaba7" />
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="5-topic이-productivity이-아닌-리뷰만-출력">
 5. &amp;ldquo;topic&amp;quot;이 &amp;ldquo;productivity&amp;quot;이 아닌 리뷰만 출력
 &lt;a class="anchor" href="#5-topic%ec%9d%b4-productivity%ec%9d%b4-%ec%95%84%eb%8b%8c-%eb%a6%ac%eb%b7%b0%eb%a7%8c-%ec%b6%9c%eb%a0%a5">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> post_reviews
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> (metadata &lt;span style="color:#f92672">@&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{&amp;#34;topic&amp;#34;: &amp;#34;productivity&amp;#34;}&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1880" height="426" alt="image" src="https://github.com/user-attachments/assets/c72e1981-0fb4-499c-8a92-bd7908f91914" />
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>cf) GIN 인덱스&lt;/p></description></item><item><title>SQL #1 학사 관리 시스템 설계 - 엔터티 도출 및 ERD 작성</title><link>https://yshghid.github.io/docs/study/sw/sw7/</link><pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw7/</guid><description>&lt;h1 id="sql-1-학사-관리-시스템-설계---엔터티-도출-및-erd-작성">
 SQL #1 학사 관리 시스템 설계 - 엔터티 도출 및 ERD 작성
 &lt;a class="anchor" href="#sql-1-%ed%95%99%ec%82%ac-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%84%a4%ea%b3%84---%ec%97%94%ed%84%b0%ed%8b%b0-%eb%8f%84%ec%b6%9c-%eb%b0%8f-erd-%ec%9e%91%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-29&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>AI 기반 학사 관리 시스템 (Learning Management System) 설계를 위한 엔터티 도출 및 ERD 작성 실습입니다.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>요구사항
. 교육과정, 수강생, 과정운영자, 강사, 과정 설명 텍스트, Review 등으로 구성
. 과정 설명 텍스트는 향후 AI 임베딩 대상이므로 충분한 길이와 자유 텍스트로 정의&lt;/p>
&lt;/li>
&lt;li>
&lt;p>순서
. 학사관리시스템 엔티티 도출 및 검증
. ERD 변환 작업
. 변환된 ERD로 설치된 PostgreSQL 에 생성&lt;/p></description></item><item><title>SQL #2 학사 관리 시스템 설계 - 스키마 분리 및 멀티 프로젝트 설계</title><link>https://yshghid.github.io/docs/study/sw/sw8/</link><pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw8/</guid><description>&lt;h1 id="sql-2-학사-관리-시스템-설계---스키마-분리-및-멀티-프로젝트-설계">
 SQL #2 학사 관리 시스템 설계 - 스키마 분리 및 멀티 프로젝트 설계
 &lt;a class="anchor" href="#sql-2-%ed%95%99%ec%82%ac-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%84%a4%ea%b3%84---%ec%8a%a4%ed%82%a4%eb%a7%88-%eb%b6%84%eb%a6%ac-%eb%b0%8f-%eb%a9%80%ed%8b%b0-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8-%ec%84%a4%ea%b3%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-29&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>이전에 만든 ERD를 기반으로 PostgreSQL 로 스키마 분리 및 멀티 프로젝트 설계합니다.&lt;/p>
&lt;ul>
&lt;li>주제
. 서울캠퍼스/제주캠퍼스별 학사 관리 시스템 (Learning Management System)
동일한 학사관리 시스템 구조를 기반으로, 캠퍼스에 따라 데이터를 스키마 단위로
분리 설계하고 향후 AI 분석 결과의 멀티 벡터 저장 구조로 확장 가능하도록 구조 설계&lt;/li>
&lt;li>요구사항
. 교육과정, 수강생 과정운영자, 강사, 과정 설명 텍스트, Review 등으로 구성하되,
캠퍼스별 특성을 고려하여 스키마 분리
. 서울 캠퍼스와 제주 캠퍼스 간 교수/강사/과정은 중복될 수 있음&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-서울캠퍼스제주캠퍼스별-학사-관리-시스템-엔티티-도출">
 2. 서울캠퍼스/제주캠퍼스별 학사 관리 시스템 엔티티 도출
 &lt;a class="anchor" href="#2-%ec%84%9c%ec%9a%b8%ec%ba%a0%ed%8d%bc%ec%8a%a4%ec%a0%9c%ec%a3%bc%ec%ba%a0%ed%8d%bc%ec%8a%a4%eb%b3%84-%ed%95%99%ec%82%ac-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%97%94%ed%8b%b0%ed%8b%b0-%eb%8f%84%ec%b6%9c">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#기존 스키마&lt;/mark>&lt;/p></description></item><item><title>SQL #3 스키마 분리와 AI 분석</title><link>https://yshghid.github.io/docs/study/sw/sw9/</link><pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw9/</guid><description>&lt;h1 id="sql-3-스키마-분리와-ai-분석">
 SQL #3 스키마 분리와 AI 분석
 &lt;a class="anchor" href="#sql-3-%ec%8a%a4%ed%82%a4%eb%a7%88-%eb%b6%84%eb%a6%ac%ec%99%80-ai-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-29&lt;/p>
&lt;hr>
&lt;p>&lt;mark>생각 정리&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>AI 분석이 들어갈 때 왜 별도 스키마로 나누는 것이 유리할까요?&lt;/li>
&lt;li>스키마 vs. 테이블 분리, 어떤 방식이 어떤 상황에 적합할까요?&lt;/li>
&lt;li>향후 pgvector 또는 AI 모델 결과를 넣기 위해 어떻게 테이블을 확장할 수 있을까요?&lt;/li>
&lt;/ol>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>AI 분석이 들어갈 때 왜 별도 스키마로 나누는 것이 유리할까요?&lt;/li>
&lt;/ol>
&lt;p>AI 분석이 포함된 시스템에서 데이터를 다룰 때, 별도 스키마로 나누는 것이 유리한 이유는 (1) 데이터의 사용 목적이 다르기 때문이고, (2) 데이터의 구조와 속성이 근본적으로 다르기 때문입니다.&lt;/p></description></item><item><title>DBSCAN #2 슈도코드</title><link>https://yshghid.github.io/docs/study/ai/ai9/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai9/</guid><description>&lt;h1 id="dbscan-2-슈도코드">
 DBSCAN #2 슈도코드
 &lt;a class="anchor" href="#dbscan-2-%ec%8a%88%eb%8f%84%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code>Input:
 - D: 데이터 포인트 집합
 - eps: 이웃 거리 임계값
 - minPts: 최소 이웃 수 (밀도 기준)

Output:
 - cluster_labels: 각 데이터 포인트에 대한 클러스터 라벨 (노이즈는 -1)

Initialize:
 - cluster_id ← 0
 - label[x] ← UNVISITED for all x in D
&lt;/code>&lt;/pre>&lt;p>데이터 집합 D, 파라미터 eps와 minPts가 들어간다.&lt;/p>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code>For each point x in D:
 If label[x] ≠ UNVISITED:
 continue

 N ← regionQuery(x, eps) // x 주변의 eps 이내 이웃 포인트 탐색

 If |N| &amp;lt; minPts:
 label[x] ← NOISE
// Else:
// cluster_id ← cluster_id + 1
// expandCluster(x, N, cluster_id, eps, minPts, label)

Function regionQuery(x, eps):
 return { all points y in D such that distance(x, y) ≤ eps }
&lt;/code>&lt;/pre>&lt;p>주석 처리 안된 부분만 보기.&lt;/p></description></item><item><title>DBSCAN: #1 1D 클러스터링의 성능 평가</title><link>https://yshghid.github.io/docs/study/ai/ai8/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai8/</guid><description>&lt;h1 id="dbscan-1-1d-클러스터링의-성능-평가">
 DBSCAN: #1 1D 클러스터링의 성능 평가
 &lt;a class="anchor" href="#dbscan-1-1d-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81%ec%9d%98-%ec%84%b1%eb%8a%a5-%ed%8f%89%ea%b0%80">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-problem">
 1. Problem
 &lt;a class="anchor" href="#1-problem">#&lt;/a>
&lt;/h3>
&lt;p>클러스터 응집도는 보통 클러스터 내 데이터 간의 평균 거리나 분산, 혹은 실루엣 계수처럼 군집 내 응집도와 군집 간 분리도를 동시에 평가한다.&lt;/p>
&lt;p>하지만 1차원 데이터에서는 클러스터 응집도(Cluster Cohesion) 또는 실루엣 계수(Silhouette coefficient) 같은 지표가 잘 작동하지 않는다.&lt;/p>
&lt;h3 id="2-클러스터-응집도">
 2. 클러스터 응집도
 &lt;a class="anchor" href="#2-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0-%ec%9d%91%ec%a7%91%eb%8f%84">#&lt;/a>
&lt;/h3>
&lt;p>클러스터링 성능을 평가하는 지표 중 하나인 응집도(Cohesion)는 클러스터 내부의 데이터들이 얼마나 서로 가까운지를 측정하는 지표다. 대표적으로는 클러스터 내 모든 점 간의 평균 거리, 클러스터 중심과 각 점 사이의 평균 거리, 혹은 분산을 사용하는 방식 등이 있다. 이와 함께 자주 사용되는 분리도(Separation)는 클러스터 간의 거리가 얼마나 떨어져 있는지를 평가하며, 이 두 지표를 동시에 고려하는 실루엣 계수(Silhouette coefficient) 같은 복합 지표도 존재한다.&lt;/p></description></item><item><title>MAFFT #1 Fasta 파일 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi29/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi29/</guid><description>&lt;h1 id="mafft-1-fasta-파일-전처리">
 MAFFT #1 Fasta 파일 전처리
 &lt;a class="anchor" href="#mafft-1-fasta-%ed%8c%8c%ec%9d%bc-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> random
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2410/Mutclust2&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-objective">
 2. Objective
 &lt;a class="anchor" href="#2-objective">#&lt;/a>
&lt;/h3>
&lt;p>Influenza type A의 H1N1 strain의 fasta 파일을 확인해보면?&lt;/p>
&lt;img width="1403" height="634" alt="image" src="https://github.com/user-attachments/assets/373e1c82-42a4-4654-828c-64ab7a6645f6" />
&lt;p>&lt;code>&amp;gt;&lt;/code>로 시작하는 행에 해당 시퀀스의 메타데이터가 있고&lt;/p>
&lt;p>다음 &lt;code>&amp;gt;&lt;/code>로 시작하는 행 이전까지 해당 시퀀스 정보가 있다.&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;gt;&lt;/code>로 시작하는 행을 |로 분리했을때 제일 마지막값에 유전자 정보가 있다.&lt;/li>
&lt;/ul>
&lt;p>Raw 데이터는 아래와 같이 구성돼있는데&lt;/p></description></item><item><title>MAFFT #2 MAFFT 실행</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi30/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi30/</guid><description>&lt;h1 id="mafft-2-mafft-실행">
 MAFFT #2 MAFFT 실행
 &lt;a class="anchor" href="#mafft-2-mafft-%ec%8b%a4%ed%96%89">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-objective">
 1. Objective
 &lt;a class="anchor" href="#1-objective">#&lt;/a>
&lt;/h3>
&lt;p>Influenza의 Reference squence는 길이가 fix되어있지만,&lt;/p>
&lt;ul>
&lt;li>각 sequence는 삽입/탈락 mutation이 일어남에 따라 모두 길이가 같지 않다.&lt;/li>
&lt;li>이 길이를 맞춰주는 padding을 하기 위해 MAFFT를 이용해 정렬(Multiple Sequence Alignment)한다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-mafft-실행-bash-script">
 2. MAFFT 실행 bash script
 &lt;a class="anchor" href="#2-mafft-%ec%8b%a4%ed%96%89-bash-script">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#data&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/Influenza
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Preprocessed/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── HA/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── A-H1N1.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── A-H1N1.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── B.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── (HA와 동일 구조)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── MAFFT/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── (empty)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># List of genes and files to process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gene_list&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;HA&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;NA&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;MP&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;PA&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;NS&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;PB1&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;PB2&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;NP&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file_list&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;A-H1N1&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A-H3N2&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A-H5N1&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;B&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Loop through each gene and file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> gene in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene_list[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Processing gene: &lt;/span>$gene&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file_list[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Processing file: &lt;/span>$file&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Define directories and file paths&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input_fasta&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/projects/2020_MUTCLUST/Data/Projects/GISAID_revision/Influenza/Preprocessed/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.fasta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reference_fasta&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/projects/2020_MUTCLUST/Data/Projects/GISAID_revision/Influenza/Reference/Preprocessed/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.fasta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output_dir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/projects/2020_MUTCLUST/Data/Projects/GISAID_revision/Influenza/MAFFT/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output_fasta&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>output_dir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.fasta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Create output directory if it doesn&amp;#39;t exist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$output_dir&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Perform multiple sequence alignment with MAFFT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Running MAFFT for &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mafft --thread &lt;span style="color:#ae81ff">50&lt;/span> --anysymbol --add &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$input_fasta&lt;span style="color:#e6db74">&amp;#34;&lt;/span> --keeplength &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$reference_fasta&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$output_fasta&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check if MAFFT was successful&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -eq &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Alignment complete: &lt;/span>$output_fasta&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;MAFFT alignment failed for &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>gene&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#result&lt;/mark>&lt;/p></description></item><item><title>methylKit: DMR 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi31/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi31/</guid><description>&lt;h1 id="methylkit-dmr-분석">
 methylKit: DMR 분석
 &lt;a class="anchor" href="#methylkit-dmr-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-load-packages">
 1. Load packages
 &lt;a class="anchor" href="#1-load-packages">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;methylKit&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;genomation&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;GenomicRanges&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-set-path">
 2. Set path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2309_5-aza/Bismark/sorted_n&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data1/home/ysh980101/2309_5-aza/Bismark/sorted_n&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-load-data">
 3. Load data
 &lt;a class="anchor" href="#3-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define the list containing the bismark coverage files.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>covlist &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;KEB1/KEB01_1_bismark_bt2_pe.sorted_n.deduplicated.bismark.cov.gz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;KEB2/KEB02_1_bismark_bt2_pe.sorted_n.deduplicated.bismark.cov.gz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;KEB4/KEB04_1_bismark_bt2_pe.sorted_n.deduplicated.bismark.cov.gz&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myobj_lowCov &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">methRead&lt;/span>(covlist,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sample.id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">list&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;KEB01&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;KEB02&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;KEB04&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pipeline &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bismarkCoverage&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assembly&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hg38&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> treatment&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mincov &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tiles &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">tileMethylCounts&lt;/span>(myobj_lowCov,win.size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>,step.size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>,cov.bases &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tiles.norm &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">normalizeCoverage&lt;/span>(tiles, method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;median&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meth.tiles &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">unite&lt;/span>(tiles.norm, destrand&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meth.tiles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1062" height="786" alt="image" src="https://github.com/user-attachments/assets/2ab50f79-7f69-4b35-a150-b40beb54709c" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>meth.tilesDf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">getData&lt;/span>(meth.tiles)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meth.tilesDf_filtered &lt;span style="color:#f92672">&amp;lt;-&lt;/span> meth.tilesDf[&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">grepl&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;\\.|\\_|MT&amp;#34;&lt;/span>, meth.tilesDf&lt;span style="color:#f92672">$&lt;/span>chr), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meth.tilesDf_filtered
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="1043" height="861" alt="image" src="https://github.com/user-attachments/assets/4e79725b-da91-4be6-a71f-f62d4401e883" />
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="4-test-keb01-vs-keb02">
 4. Test: keb01 vs keb02
 &lt;a class="anchor" href="#4-test-keb01-vs-keb02">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>meth.tilesDf.1vs2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> meth.tilesDf_filtered[, &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meth.tilesDf.1vs2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="841" height="744" alt="image" src="https://github.com/user-attachments/assets/0f2f6a50-877a-4c77-9e64-3308f42e8361" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>meth.tiles.1vs2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">new&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;methylBase&amp;#34;&lt;/span>,meth.tilesDf.1vs2,sample.ids&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;KEB01&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;KEB02&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assembly&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hg38&amp;#34;&lt;/span>,treatment&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myDiff &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">calculateDiffMeth&lt;/span>(meth.tiles.1vs2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> overdispersion &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;MN&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> adjust&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BH&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myDiff &lt;span style="color:#f92672">&amp;lt;-&lt;/span> myDiff&lt;span style="color:#a6e22e">[order&lt;/span>(myDiff&lt;span style="color:#f92672">$&lt;/span>qvalue), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myDiff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="766" height="807" alt="image" src="https://github.com/user-attachments/assets/12ffce09-8aa4-47c7-be34-36090dfdc74c" />
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="5-save">
 5. Save
 &lt;a class="anchor" href="#5-save">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>myDiffDf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">getData&lt;/span>(myDiff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">write.table&lt;/span>(myDiffDf, file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2310/res_total/myDiff1vs2.tsv&amp;#34;&lt;/span>, sep &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\t&amp;#34;&lt;/span>, quote &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>, row.names &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="6-cpg-filtering">
 6. CpG filtering
 &lt;a class="anchor" href="#6-cpg-filtering">#&lt;/a>
&lt;/h3>
&lt;p>차등 메틸화된 모든 region에 대한 test 결과가 myDiff에 있는데 CpG island 부분만 남겨서 downstream 분석을 진행한다.&lt;/p></description></item><item><title>MutClust 슈도코드 작성하기</title><link>https://yshghid.github.io/docs/study/ai/ai10/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai10/</guid><description>&lt;h1 id="mutclust-슈도코드-작성하기">
 MutClust 슈도코드 작성하기
 &lt;a class="anchor" href="#mutclust-%ec%8a%88%eb%8f%84%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code>Input:
 - D: 데이터 포인트 집합
 - Efactor: 이웃 거리 조정값
 - DiminFactor: 클러스터 경계 조정값
 - minPts: 최소 이웃 수 (밀도 기준)

Output:
 - cluster_labels: 각 데이터 포인트에 대한 클러스터 라벨 (노이즈는 -1)

Initialize:
 - cluster_id ← 0
 - Label[x] ← UNVISITED for all x in D
&lt;/code>&lt;/pre>&lt;p>데이터 집합 D, 파라미터 eps와 minPts가 들어간다.&lt;/p>
&lt;h3 id="2-h-중요도-계산">
 2. H-중요도 계산
 &lt;a class="anchor" href="#2-h-%ec%a4%91%ec%9a%94%eb%8f%84-%ea%b3%84%ec%82%b0">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code>For each point x in D:
 x.H ← calculateHscore(x)
&lt;/code>&lt;/pre>&lt;p>각 데이터포인트에 대해 H-score를 계산한다.&lt;/p></description></item><item><title>Selenium: Influenza fasta 파일 크롤링</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi28/</link><pubDate>Mon, 28 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi28/</guid><description>&lt;h1 id="selenium-influenza-fasta-파일-크롤링">
 Selenium: Influenza fasta 파일 크롤링
 &lt;a class="anchor" href="#selenium-influenza-fasta-%ed%8c%8c%ec%9d%bc-%ed%81%ac%eb%a1%a4%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-28&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-set-path">
 2. Set path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/Users/yshmbid/Desktop/workspace/gisaid&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>getcwd()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/Users/yshmbid/Desktop/workspace/gisaid&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3-run-crawling">
 3. Run crawling
 &lt;a class="anchor" href="#3-run-crawling">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ChromeDriver 경로를 설치하고 Service 객체로 전달&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chrome_service &lt;span style="color:#f92672">=&lt;/span> Service(ChromeDriverManager()&lt;span style="color:#f92672">.&lt;/span>install())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ChromeDriver 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> crawler &lt;span style="color:#f92672">=&lt;/span> webdriver&lt;span style="color:#f92672">.&lt;/span>Chrome(service&lt;span style="color:#f92672">=&lt;/span>chrome_service)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 크롬드라이버가 없을 때 autoinstaller로 설치&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chromedriver_autoinstaller&lt;span style="color:#f92672">.&lt;/span>install(&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> crawler &lt;span style="color:#f92672">=&lt;/span> webdriver&lt;span style="color:#f92672">.&lt;/span>Chrome(service&lt;span style="color:#f92672">=&lt;/span>chrome_service)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler&lt;span style="color:#f92672">.&lt;/span>implicitly_wait(&lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#75715e"># 크롤러 대기 시간 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;https://gisaid.org/&amp;#39;&lt;/span>) &lt;span style="color:#75715e"># 웹사이트 열기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># login 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> WebDriverWait(crawler, &lt;span style="color:#ae81ff">10&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>until(EC&lt;span style="color:#f92672">.&lt;/span>element_to_be_clickable((By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;menuequer&amp;#34;]/li[7]/a&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># id 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WebDriverWait(crawler, &lt;span style="color:#ae81ff">10&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>until(EC&lt;span style="color:#f92672">.&lt;/span>element_to_be_clickable((By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;elogin&amp;#34;]&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;elogin&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler&lt;span style="color:#f92672">.&lt;/span>execute_script(&lt;span style="color:#e6db74">&amp;#34;arguments[0].click();&amp;#34;&lt;/span>, engine)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>send_keys(&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>) &lt;span style="color:#75715e"># *: id 블라인드 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pw 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/br[3]&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;epassword&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crawler&lt;span style="color:#f92672">.&lt;/span>execute_script(&lt;span style="color:#e6db74">&amp;#34;arguments[0].click();&amp;#34;&lt;/span>, engine)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>send_keys(&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>) &lt;span style="color:#75715e"># *: pw 블라인드 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/input[3]&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> WebDriverWait(crawler, &lt;span style="color:#ae81ff">10&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>until(EC&lt;span style="color:#f92672">.&lt;/span>element_to_be_clickable((By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;login&amp;#34;]/div[2]/input[3]&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># epiflu 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;main_nav&amp;#34;]/ul/li[2]/a&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># search&amp;amp;browse 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;c_sjk17x_ey-c_sjk17x_ey&amp;#34;]/div/div/div[7]/div&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;c_sjlgnx_11g-c_sjlgnx_11g&amp;#34;]/div/div/div[7]/div&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;c_sjk17x_ey-c_sjk17x_ey&amp;#34;]/div/div/div[7]/div&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># collection-date 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_q_input&amp;#34;]&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_hv_input&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>send_keys(&lt;span style="color:#e6db74">&amp;#39;2024-01-01&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_r_input&amp;#34;]&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_hw_input&amp;#34;]&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>send_keys(&lt;span style="color:#e6db74">&amp;#39;2024-02-01&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># search 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = WebDriverWait(crawler, 10).until(EC.element_to_be_clickable((By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjk17x_1p&amp;#34;]/div/button&amp;#39;)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine.click()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#engine = crawler.find_element(By.XPATH, &amp;#39;//*[@id=&amp;#34;ce_sjlgnx_iu&amp;#34;]/div/button&amp;#39;) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> WebDriverWait(crawler, &lt;span style="color:#ae81ff">10&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>until(EC&lt;span style="color:#f92672">.&lt;/span>element_to_be_clickable((By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;ce_sjlgnx_iu&amp;#34;]/div/button&amp;#39;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># check all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine &lt;span style="color:#f92672">=&lt;/span> crawler&lt;span style="color:#f92672">.&lt;/span>find_element(By&lt;span style="color:#f92672">.&lt;/span>XPATH, &lt;span style="color:#e6db74">&amp;#39;//*[@id=&amp;#34;yui-dt0-th-c-liner&amp;#34;]/span/input&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>engine&lt;span style="color:#f92672">.&lt;/span>click()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>분명 알고리즘 개발에는 22만개 sequence를 사용했는데 validation set으로 190만개 sequence를 쓰는게 맞았을까 생각했던작업&lt;/li>
&lt;li>그와중에 GISAID의 xpath가 매일 업데이트돼서 매일아침 코드 수정해가면서 돌렸던기억이 있다&lt;/li>
&lt;li>그리구 이상한게 핫스팟연결하면 오류나가지고 이기간엔 라운지도 못가고 연구실에만 있었어야했다..&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>이번주 많이들은플리!</title><link>https://yshghid.github.io/docs/hobby/music/music1/</link><pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/music/music1/</guid><description>&lt;h1 id="이번주-많이들은플리">
 이번주 많이들은플리!
 &lt;a class="anchor" href="#%ec%9d%b4%eb%b2%88%ec%a3%bc-%eb%a7%8e%ec%9d%b4%eb%93%a4%ec%9d%80%ed%94%8c%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-26&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=qcoIr2aiDuM&amp;amp;t=20s">https://www.youtube.com/watch?v=qcoIr2aiDuM&amp;t=20s&lt;/a>
&lt;img width="2464" height="1590" alt="image" src="https://github.com/user-attachments/assets/36e0c836-d46c-473b-a70a-4467ad8886c7" />&lt;/p>
&lt;p>아무생각 안하고싶은데 잔잔하고싶지 않은 기분 &amp;laquo; 일때 듣기 딱인 플리&lt;/p>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=lceBLdrpjFY">https://www.youtube.com/watch?v=lceBLdrpjFY&lt;/a>
&lt;img width="2464" height="1582" alt="image" src="https://github.com/user-attachments/assets/2bb91aff-116d-47fb-bb9e-1474c1015be8" />&lt;/p>
&lt;p>갑자기 혈중발라드수혈 필요해져서 듣기 너무 추억돋아서 웃기다.. 내가젤좋아했던 박정현-내낡은서랍속의바다 없어서 아쉬웠다&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title/><link>https://yshghid.github.io/docs/hobby/book/book51/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book51/</guid><description>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-24&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&amp;ldquo;메리가 이걸 드리래요. 전 진이에요.&amp;rdquo; &amp;ldquo;로버트예요.&amp;rdquo; &amp;ldquo;하콘 슈발리에예요. 지난달 서버가 주최한 노조 모임 때 봤죠?&amp;rdquo;&lt;/p>
&lt;p>태트록이 고개를 끄덕인다. 나는 잔을 집어든다.&lt;/p>
&lt;p>&amp;ldquo;로버트는 공산주의자가 아니래요.&amp;rdquo; &amp;ldquo;공산주의에 대해 잘 모르시나 보네.&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;『자본』 을 세 권 다 읽었는데 그건 안 쳐주나요?&amp;rdquo; &amp;ldquo;당원들보다 책을 많이 읽으셨군.&amp;rdquo; &amp;ldquo;이해하기 힘든 개념들이 좀 있더군요. &amp;lsquo;소유Ownership는 도둑질이다&amp;rsquo;라든지.&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;&amp;lsquo;재물의 소유Property&amp;rsquo;예요, 그냥 &amp;lsquo;소유&amp;rsquo;가 아니고.&amp;rdquo; &amp;ldquo;미안해요, 독일어 원서로 읽어서요.&lt;/p>
&lt;p>슈발리에는 웃음을 터트리더니 우릴 남겨두고 자리를 뜬다.&lt;/p>
&lt;p>&amp;ldquo;중요한 건 책이 아니고 그 속에 담긴 이념이죠. 근데 별 관심 없으신가 보네요.&amp;rdquo; &amp;ldquo;더 나은 세상을 만들기 위해선 자유로운 사고가 필요하다고 생각해요. 왜 하나의 도그마에 자신을 가두려고 하죠?&amp;rdquo; &amp;ldquo;당신은 물리학자지요. 규칙을 자기가 고르고 선택하는 편인가요, 아니면 에너지를 발전에 쏟아붓기 위해서 규율을 고수하는 편인가요?&amp;rdquo;&lt;/p></description></item><item><title>Hugo #1 Markdown HTML 렌더링 문제</title><link>https://yshghid.github.io/docs/study/sw/sw6/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw6/</guid><description>&lt;h1 id="hugo-1-markdown-html-렌더링-문제">
 Hugo #1 Markdown HTML 렌더링 문제
 &lt;a class="anchor" href="#hugo-1-markdown-html-%eb%a0%8c%eb%8d%94%eb%a7%81-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-24&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;lt;details&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;summary&amp;gt; 토글 &amp;lt;/summary&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 토글 내용
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/details&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hugo book Theme는 &lt;a href="https://github.com/alex-shpak/hugo-book/blob/master/exampleSite/content.en/docs/shortcodes/details.md">원래&lt;/a> 위 코드를 작성하면 아래처럼 토글이 나온다.&lt;/p>
&lt;details>
 &lt;summary> 토글 &lt;/summary>
 토글 내용
&lt;/details>
&lt;p>어느날부터 갑자기 토글이든 문단나누기든 다 안먹어서, 근데 원인을 몰라서 그냥 shortcode 기능 없는대로 쓰다가, 너무 불편해서 좀 찾아봤고 &lt;code>hugo.toml&lt;/code>에 다음 내용 넣어준 뒤로는 잘 작동했다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">markup&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#a6e22e">markup&lt;/span>.&lt;span style="color:#a6e22e">goldmark&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#a6e22e">markup&lt;/span>.&lt;span style="color:#a6e22e">goldmark&lt;/span>.&lt;span style="color:#a6e22e">renderer&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">unsafe&lt;/span> = &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>근데 이후에 &lt;a href="https://yshghid.github.io/docs/study/sw/sw5/">html 관련 포스팅&lt;/a>을 작성했는데 넣어준 코드가 다 깨졌다.&lt;/p></description></item><item><title>JavaScript #1 쇼핑몰 주문 처리 과제</title><link>https://yshghid.github.io/docs/study/sw/sw5/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw5/</guid><description>&lt;h1 id="javascript-1-쇼핑몰-주문-처리-과제">
 JavaScript #1 쇼핑몰 주문 처리 과제
 &lt;a class="anchor" href="#javascript-1-%ec%87%bc%ed%95%91%eb%aa%b0-%ec%a3%bc%eb%ac%b8-%ec%b2%98%eb%a6%ac-%ea%b3%bc%ec%a0%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>당신은 온라인 쇼핑몰의 개발자로, 고객 주문을 처리하는 프로그램을 작성하고 있습니다. 주문 처리 과정에서는 여러 조건을 고려해야 합니다. 예를 들어, 상품의 재고 여부, 고객의 회원 등급, 주문 금액, 배송 옵션 등을 확인하여 적절한 메시지와 할인율을 적용해야 합니다. 아래의 세부 조건에 맞도록 JavaScript 함수를 구현하고, 최종 결과를 console.log 또는 alert로 출력해보세요.&lt;/p>
&lt;p>#세부 조건&lt;/p>
&lt;p>상품 재고 확인&lt;/p>
&lt;ul>
&lt;li>재고가 1개 이상일 경우: 주문을 진행한다.&lt;/li>
&lt;li>재고가 0개일 경우: 품절 메시지를 출력한다.&lt;/li>
&lt;/ul>
&lt;p>회원 등급에 따른 할인율 적용&lt;/p></description></item><item><title>netMHCpan #1 환자 시퀀스 생성</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi25/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi25/</guid><description>&lt;h1 id="netmhcpan-1-환자-시퀀스-생성">
 netMHCpan #1 환자 시퀀스 생성
 &lt;a class="anchor" href="#netmhcpan-1-%ed%99%98%ec%9e%90-%ec%8b%9c%ed%80%80%ec%8a%a4-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;p>&lt;mark>path&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── clusters.tsv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── meta.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── codon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── reference_codon.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── *.codon.csv (*: patient id)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> re
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data/home/ysh980101/2409/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> mhc_epitope &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">make_sequence_df&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 참조 시퀀스 파일 불러오기 및 컬럼 이름 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ref_sequence &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">&amp;#34;data/codon/reference_codon.csv&amp;#34;&lt;/span>, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ref_sequence&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;sequence&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;reference&amp;#39;&lt;/span>}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 코돈 파일 목록 불러오기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_list &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(&lt;span style="color:#e6db74">&amp;#34;data/codon&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> patient_list &lt;span style="color:#f92672">=&lt;/span> [f&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#66d9ef">for&lt;/span> f &lt;span style="color:#f92672">in&lt;/span> file_list &lt;span style="color:#66d9ef">if&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>endswith(&lt;span style="color:#e6db74">&amp;#39;.codon.csv&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 메타데이터 파일 불러오기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">&amp;#34;data/meta.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta_list &lt;span style="color:#f92672">=&lt;/span> meta[&lt;span style="color:#e6db74">&amp;#39;sampleID&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>tolist()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 공통 샘플 목록 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> common_list &lt;span style="color:#f92672">=&lt;/span> list(set(meta_list) &lt;span style="color:#f92672">&amp;amp;&lt;/span> set(patient_list))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> common_list&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 각 환자 파일 불러오고 병합하기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pid &lt;span style="color:#f92672">in&lt;/span> common_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/codon/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.codon.csv&amp;#34;&lt;/span>, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;sequence&amp;#39;&lt;/span>: pid}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ref_sequence &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>merge(ref_sequence, df, on&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gene&amp;#39;&lt;/span>, how&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;outer&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ref_sequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sequence_df &lt;span style="color:#f92672">=&lt;/span> make_sequence_df()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sequence_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/0e189a27-05c2-4fd5-8f24-f87290b8f31e" alt="image" />&lt;/p></description></item><item><title>netMHCpan #2 HLA-I 펩타이드 추출</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi24/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi24/</guid><description>&lt;h1 id="netmhcpan-2-hla-i-펩타이드-추출">
 netMHCpan #2 HLA-I 펩타이드 추출
 &lt;a class="anchor" href="#netmhcpan-2-hla-i-%ed%8e%a9%ed%83%80%ec%9d%b4%eb%93%9c-%ec%b6%94%ec%b6%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-patient-id-추출">
 1. Patient id 추출
 &lt;a class="anchor" href="#1-patient-id-%ec%b6%94%ec%b6%9c">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#data&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c315
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── allprot.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── c442
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── allprot.fasta
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#patients.bash&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># FASTA에서 patient ID 추출하여 patient_id.txt로 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALLPROT_PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/c315/allprot.fasta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OUT_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/patient_id.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 스크립트가 있는 디렉터리로 이동&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>dirname &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$0&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># patient_id.txt 파일 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$OUT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># FASTA 파일에서 ID 추출&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grep &lt;span style="color:#e6db74">&amp;#34;^&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$ALLPROT_PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span> | cut -d&lt;span style="color:#e6db74">&amp;#39;|&amp;#39;&lt;/span> -f1 | sed &lt;span style="color:#e6db74">&amp;#39;s/^&amp;gt;//&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$OUT_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c315
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── allprot.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c442
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── allprot.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── patient_id.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-환자별-proteomefasta와-hla-i-펩타이드-생성">
 2. 환자별 proteome.fasta와 HLA-I 펩타이드 생성
 &lt;a class="anchor" href="#2-%ed%99%98%ec%9e%90%eb%b3%84-proteomefasta%ec%99%80-hla-i-%ed%8e%a9%ed%83%80%ec%9d%b4%eb%93%9c-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#data&lt;/mark>&lt;/p></description></item><item><title>netMHCpan #3 HLA-peptide affinity 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi26/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi26/</guid><description>&lt;h1 id="netmhcpan-3-hla-peptide-affinity-분석">
 netMHCpan #3 HLA-peptide affinity 분석
 &lt;a class="anchor" href="#netmhcpan-3-hla-peptide-affinity-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;p>&lt;mark>#data&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c315
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── allprot.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── * (*: patient id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── proteome.fasta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── peptides_HLA-I.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c442
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── (c315와 동일한 구조로 생성됨)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── patient_id.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── common_mhc.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>&lt;mark>#predict_affinity.bash&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 입력:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1) 클러스터명 (예: c315)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2) 병렬 프로세스 수 (NUM_PROC)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 출력:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 환자별 binding_affinities_HLA-I.csv&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CLUSTER&lt;span style="color:#f92672">=&lt;/span>$1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NUM_PROC&lt;span style="color:#f92672">=&lt;/span>$2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netMHCpan&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;../netMHCpan-4.1/netMHCpan&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OUT_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CLUSTER&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PATIENT_TXT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/patient_id.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HLA_I_ALLELES_FILE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data/common_mhc.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 스크립트가 있는 디렉터리로 이동&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>dirname &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$0&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 환자별로 netMHCpan 예측 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> read -r PATIENT_ID; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PATIENT_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$OUT_DIR&lt;span style="color:#e6db74">/&lt;/span>$PATIENT_ID&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RAW_DIR&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/raw_predictions&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$RAW_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PEPTIDES_TABLE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/peptides_HLA-I.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># peptides.txt 생성 (첫 컬럼만 추출, 헤더 제거)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tail -n +2 &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PEPTIDES_TABLE&lt;span style="color:#e6db74">&amp;#34;&lt;/span> | cut -d&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> -f1 &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/peptides.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 병렬로 netMHCpan 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parallel -j &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$NUM_PROC&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$netMHCpan&lt;span style="color:#e6db74"> -BA -p &lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/peptides.txt -a {} &amp;gt; &lt;/span>$RAW_DIR&lt;span style="color:#e6db74">/{}.txt&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> :::: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HLA_I_ALLELES_FILE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 결과 병합 및 정리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> python3 sc2.py &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$RAW_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &amp;gt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/binding_affinities_HLA-I.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm -rf &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$RAW_DIR&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_DIR&lt;span style="color:#e6db74">/peptides.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span> &amp;lt; &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PATIENT_TXT&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#sc2.py&lt;/mark>&lt;/p></description></item><item><title>netMHCpan #4 결과 확인 및 heatmap 시각화</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi27/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi27/</guid><description>&lt;h1 id="netmhcpan-4-결과-확인-및-heatmap-시각화">
 netMHCpan #4 결과 확인 및 heatmap 시각화
 &lt;a class="anchor" href="#netmhcpan-4-%ea%b2%b0%ea%b3%bc-%ed%99%95%ec%9d%b8-%eb%b0%8f-heatmap-%ec%8b%9c%ea%b0%81%ed%99%94">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-netmhcpan-결과-확인">
 1. netMHCpan 결과 확인
 &lt;a class="anchor" href="#1-netmhcpan-%ea%b2%b0%ea%b3%bc-%ed%99%95%ec%9d%b8">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#data&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c315
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── * (*: patient id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── peptides_HLA-I.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── binding_affinities_HLA-I.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── c442
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── (c315와 동일한 구조로 생성됨)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── patient_id.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── (empty)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Load package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Load patient id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;/data/patient_id.txt&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patients &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>read()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Merge epitope table&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;c315&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c442&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>peptide_df_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> hotspot &lt;span style="color:#f92672">in&lt;/span> hotspots:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> patient &lt;span style="color:#f92672">in&lt;/span> patients:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> peptide_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>patient&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/peptides_HLA-I.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 특수 문자가 포함된 Peptide 제거 (Non coding region)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> peptide_df &lt;span style="color:#f92672">=&lt;/span> peptide_df[&lt;span style="color:#f92672">~&lt;/span>peptide_df[&lt;span style="color:#e6db74">&amp;#39;Peptide&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>str&lt;span style="color:#f92672">.&lt;/span>contains(&lt;span style="color:#e6db74">&amp;#39;[-*]&amp;#39;&lt;/span>, regex&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, na&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Patients 컬럼의 첫 번째 행 값 가져오기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> patient_name &lt;span style="color:#f92672">=&lt;/span> patient &lt;span style="color:#75715e"># 파일 이름 또는 경로에서 patient ID를 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Peptide 컬럼 이름을 patient_name으로 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> peptide_df &lt;span style="color:#f92672">=&lt;/span> peptide_df[[&lt;span style="color:#e6db74">&amp;#39;Peptide&amp;#39;&lt;/span>]] &lt;span style="color:#75715e"># Peptide 컬럼만 남기기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> peptide_df&lt;span style="color:#f92672">.&lt;/span>columns &lt;span style="color:#f92672">=&lt;/span> [patient_name] &lt;span style="color:#75715e"># 컬럼 이름 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 리스트에 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> peptide_df_list&lt;span style="color:#f92672">.&lt;/span>append(peptide_df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Merged df 생성 및 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat(peptide_df_list, axis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged_df&lt;span style="color:#f92672">.&lt;/span>index &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> merged_df&lt;span style="color:#f92672">.&lt;/span>index&lt;span style="color:#f92672">.&lt;/span>astype(str)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> merged_df&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/result/epitope_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Merge affinity table&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> hotspot &lt;span style="color:#f92672">in&lt;/span> hotspots:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pid &lt;span style="color:#f92672">in&lt;/span> patient_ids:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/binding_affinities_HLA-I.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(file_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;Affinity&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;Peptide&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Peptide_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> pid &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;reference&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs&lt;span style="color:#f92672">.&lt;/span>append(df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs&lt;span style="color:#f92672">.&lt;/span>append(df[[&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#dfs.append(df[[f&amp;#39;{pid}&amp;#39;, f&amp;#39;Peptide_{pid}&amp;#39;]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat(dfs, axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_df &lt;span style="color:#f92672">=&lt;/span> res_df&lt;span style="color:#f92672">.&lt;/span>set_index(&lt;span style="color:#e6db74">&amp;#39;Allele&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 유의미한 pair만 남기기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_df &lt;span style="color:#f92672">=&lt;/span> res_df[res_df[&lt;span style="color:#e6db74">&amp;#39;reference&amp;#39;&lt;/span>] &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">500&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_df&lt;span style="color:#f92672">.&lt;/span>iloc[:, &lt;span style="color:#ae81ff">1&lt;/span>:] &lt;span style="color:#f92672">=&lt;/span> res_df&lt;span style="color:#f92672">.&lt;/span>iloc[:, &lt;span style="color:#ae81ff">1&lt;/span>:]&lt;span style="color:#f92672">.&lt;/span>subtract(res_df[&lt;span style="color:#e6db74">&amp;#39;reference&amp;#39;&lt;/span>], axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_df&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/result/aff-table_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#result&lt;/mark>&lt;/p></description></item><item><title>TFT #0 연구 방향</title><link>https://yshghid.github.io/docs/study/ai/ai4/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai4/</guid><description>&lt;h1 id="tft-0-연구-방향">
 TFT #0 연구 방향
 &lt;a class="anchor" href="#tft-0-%ec%97%b0%ea%b5%ac-%eb%b0%a9%ed%96%a5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;p>(#2025-05-31 작성)&lt;/p>
&lt;p>#1&lt;/p>
&lt;p>사용하고자 하는 데이터는?&lt;/p>
&lt;ul>
&lt;li>feature
&lt;ul>
&lt;li>Clinical feature (17, float): Creatinine, Hemoglobin, LDH, Lymphocytes, Neutrophils, Platelet count, WBC count, hs-CRP, D-Dimer, BDTEMP, BREATH, DBP, SBP, PULSE, SPO2, O2_APPLY&lt;/li>
&lt;li>Antibiotics feature (2, str)
&lt;ul>
&lt;li>Treatment (list, str): 투여한 항생제, 결측값일수도있고 2개 이상일수도 있음&lt;/li>
&lt;li>Strain (str): 환자가 감염된 균주, 1개&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NEWS (int): 중증도&lt;/li>
&lt;li>Code (int/str): 환자 등록번호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>time-series
&lt;ul>
&lt;li>10개 시점 (항생제 투여 기준 D-3 ~ D+6)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>TFT input 형식은?&lt;/p></description></item><item><title>TFT #1 입력 시퀀스 생성</title><link>https://yshghid.github.io/docs/study/ai/ai5/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai5/</guid><description>&lt;h1 id="tft-1-입력-시퀀스-생성">
 TFT #1 입력 시퀀스 생성
 &lt;a class="anchor" href="#tft-1-%ec%9e%85%eb%a0%a5-%ec%8b%9c%ed%80%80%ec%8a%a4-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/workspace&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-raw-data">
 2. Load raw data
 &lt;a class="anchor" href="#2-load-raw-data">#&lt;/a>
&lt;/h3>
&lt;p>#data&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── PreprocessedData/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── TimecourseData/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── * (*: patient id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── SeverityScore.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── Laboratory_processed.csv 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── Medication.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── PreprocessedData_knuh/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── (PreprocessedData와 동일)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── 병원체자원은행 균주현황(2014-2024.06)_Sepsis.xlsx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/data_knuch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── (empty)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/data_knuh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── (empty)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>data_knuch &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data_knuh &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/PreprocessedData_knuh/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span> [d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(data_knuch)] &lt;span style="color:#f92672">+&lt;/span> [d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(data_knuh)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(pids)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>13779
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-raw-data-processing">
 3. Raw data processing
 &lt;a class="anchor" href="#3-raw-data-processing">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#processing knuch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span> [d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_dict &lt;span style="color:#f92672">=&lt;/span> make_input(datadir, pids)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_dict, no_strains &lt;span style="color:#f92672">=&lt;/span> add_strain(input_dict)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;data_knuch&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Input.pkl&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pickle&lt;span style="color:#f92672">.&lt;/span>dump(input_dict, f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(list(input_dict&lt;span style="color:#f92672">.&lt;/span>keys())))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(no_strains))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4516
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#processing knuh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/PreprocessedData_knuh/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span> [d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_dict &lt;span style="color:#f92672">=&lt;/span> make_input(datadir, pids)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_dict, no_strains &lt;span style="color:#f92672">=&lt;/span> add_strain(input_dict)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;data_knuh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Input.pkl&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pickle&lt;span style="color:#f92672">.&lt;/span>dump(input_dict, f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(list(input_dict&lt;span style="color:#f92672">.&lt;/span>keys())))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(no_strains))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>9100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#result&lt;/p></description></item><item><title>TFT #2 입력 feature 생성</title><link>https://yshghid.github.io/docs/study/ai/ai6/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai6/</guid><description>&lt;h1 id="tft-2-입력-feature-생성">
 TFT #2 입력 feature 생성
 &lt;a class="anchor" href="#tft-2-%ec%9e%85%eb%a0%a5-feature-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/workspace&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-make-feature1">
 2. Make feature1
 &lt;a class="anchor" href="#2-make-feature1">#&lt;/a>
&lt;/h3>
&lt;p>#data&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── all_meds.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/data_knuch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── sequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── *.pkl (*: antibiotics)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/data_knuh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── sequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── *.pkl (*: antibiotics)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>medinfo &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/all_meds.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(medinfo, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meds &lt;span style="color:#f92672">=&lt;/span> [line&lt;span style="color:#f92672">.&lt;/span>strip()&lt;span style="color:#f92672">.&lt;/span>replace(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;_&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> line &lt;span style="color:#f92672">in&lt;/span> f &lt;span style="color:#66d9ef">if&lt;/span> line&lt;span style="color:#f92672">.&lt;/span>strip()]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;data_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>dtype&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>strain_dic &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> med &lt;span style="color:#f92672">in&lt;/span> meds:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;data_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>dtype&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/sequence/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>med&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.pkl&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res_dict &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> feature1_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pid, df &lt;span style="color:#f92672">in&lt;/span> res_dict&lt;span style="color:#f92672">.&lt;/span>items():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> news_bf &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>iloc[&lt;span style="color:#ae81ff">2&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;NEWS&amp;#39;&lt;/span>] &lt;span style="color:#75715e"># 3번째 행 (0-indexed)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> news_af &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>iloc[&lt;span style="color:#ae81ff">3&lt;/span>:][&lt;span style="color:#e6db74">&amp;#39;NEWS&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>max() &lt;span style="color:#75715e"># 4번째 행부터 마지막까지 중 최댓값&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> news_af &lt;span style="color:#f92672">&amp;lt;&lt;/span> news_bf: &lt;span style="color:#75715e"># &amp;#34;작은&amp;#34; 경우만 (같은 건 포함하지 않음)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> feature1_list&lt;span style="color:#f92672">.&lt;/span>append(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#print(len(feature1_list))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filtered_res_dict &lt;span style="color:#f92672">=&lt;/span> {pid: res_dict[pid] &lt;span style="color:#66d9ef">for&lt;/span> pid &lt;span style="color:#f92672">in&lt;/span> feature1_list &lt;span style="color:#66d9ef">if&lt;/span> pid &lt;span style="color:#f92672">in&lt;/span> res_dict}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;data_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>dtype&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/temp/feature1/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>med&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.pkl&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pickle&lt;span style="color:#f92672">.&lt;/span>dump(filtered_res_dict, f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pid, df &lt;span style="color:#f92672">in&lt;/span> filtered_res_dict&lt;span style="color:#f92672">.&lt;/span>items():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(df) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur_strain &lt;span style="color:#f92672">=&lt;/span> df&lt;span style="color:#f92672">.&lt;/span>iloc[&lt;span style="color:#ae81ff">2&lt;/span>][&lt;span style="color:#e6db74">&amp;#39;strain&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> isinstance(cur_strain, list):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strains &lt;span style="color:#f92672">=&lt;/span> cur_strain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strains &lt;span style="color:#f92672">=&lt;/span> [cur_strain]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#print(med)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> strain &lt;span style="color:#f92672">in&lt;/span> strains:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> strain &lt;span style="color:#f92672">in&lt;/span> strain_dic:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strain_dic[strain]&lt;span style="color:#f92672">.&lt;/span>append(med)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strain_dic[strain] &lt;span style="color:#f92672">=&lt;/span> [med]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> strain &lt;span style="color:#f92672">in&lt;/span> strain_dic:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strain_dic[strain] &lt;span style="color:#f92672">=&lt;/span> list(set(strain_dic[strain]))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Save feature1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/feature1.pkl&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pickle&lt;span style="color:#f92672">.&lt;/span>dump(strain_dic, f)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#result&lt;/p></description></item><item><title>TFT #3 모델 학습</title><link>https://yshghid.github.io/docs/study/ai/ai7/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai7/</guid><description>&lt;h1 id="tft-3-모델-학습">
 TFT #3 모델 학습
 &lt;a class="anchor" href="#tft-3-%eb%aa%a8%eb%8d%b8-%ed%95%99%ec%8a%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_lightning &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_lightning.callbacks &lt;span style="color:#f92672">import&lt;/span> EarlyStopping, LearningRateMonitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_lightning.loggers &lt;span style="color:#f92672">import&lt;/span> TensorBoardLogger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting &lt;span style="color:#f92672">import&lt;/span> TimeSeriesDataSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models &lt;span style="color:#f92672">import&lt;/span> TemporalFusionTransformer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models.baseline &lt;span style="color:#f92672">import&lt;/span> Baseline
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> QuantileLoss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> MAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.data &lt;span style="color:#f92672">import&lt;/span> GroupNormalizer, NaNLabelEncoder
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#data&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Sequence.pkl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>sequence &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_pickle(&lt;span style="color:#e6db74">&amp;#34;/data/Sequence.pkl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sequence
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/2dc80ef0-4da5-4d72-bf2d-4d7087b38b64" alt="image" />&lt;/p></description></item><item><title>미드멀리 에어팟케이스+키링</title><link>https://yshghid.github.io/docs/hobby/shopping/shopping2/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/shopping/shopping2/</guid><description>&lt;h1 id="미드멀리-에어팟케이스키링">
 미드멀리 에어팟케이스+키링
 &lt;a class="anchor" href="#%eb%af%b8%eb%93%9c%eb%a9%80%eb%a6%ac-%ec%97%90%ec%96%b4%ed%8c%9f%ec%bc%80%ec%9d%b4%ec%8a%a4%ed%82%a4%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-23&lt;/p>
&lt;hr>
&lt;div class="book-columns flex flex-wrap">
&lt;div class="flex-even markdown-inner" style="flex-grow: 1;">
&lt;p>&lt;img src="https://github.com/user-attachments/assets/1b5f3bd8-f0e3-4ca8-97cc-93350576726b" alt="image" />&lt;/p>
 &lt;/div>
&lt;div class="flex-even markdown-inner" style="flex-grow: 1;">
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0b8d79ee-7623-42a5-845e-d852b695f09f" alt="image" />&lt;/p>
 &lt;/div>
&lt;/div>
&lt;p>리뷰 중에 두개를 같이껴놓은게있었는데 조합이 이뻐서 그대로 사버렸당&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/de25672a-2091-41e4-9ad3-cc1f65be5f27" alt="image" />&lt;/p>
&lt;p>예뿌다 잘삿다 !!ㅋ&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>HTML #1 프로필 웹페이지 작성 과제</title><link>https://yshghid.github.io/docs/study/sw/sw2/</link><pubDate>Tue, 22 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw2/</guid><description>&lt;h1 id="html-1-프로필-웹페이지-작성-과제">
 HTML #1 프로필 웹페이지 작성 과제
 &lt;a class="anchor" href="#html-1-%ed%94%84%eb%a1%9c%ed%95%84-%ec%9b%b9%ed%8e%98%ec%9d%b4%ec%a7%80-%ec%9e%91%ec%84%b1-%ea%b3%bc%ec%a0%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-22&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>#구조&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>/HTML
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 자기소개1.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── 자기소개2.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── media/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── 증명사진.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── blog.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── net1.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── net2.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── net3.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── net4.jpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── playlist.jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#코드&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ko&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;윤소현의 프로필&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 헤더 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">header&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;윤소현의 프로필&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">header&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 자기소개 섹션 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;자기소개&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;안녕하세요! 저는 윤소현입니다. 생명공학과 바이오인포메틱스를 전공하였습니다. 취미는 넷플릭스, 음악 감상 입니다.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 정보 목록 섹션 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;취미&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">li&lt;/span>&amp;gt;넷플릭스&amp;lt;/&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">li&lt;/span>&amp;gt;음악 감상&amp;lt;/&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">li&lt;/span>&amp;gt;산책&amp;lt;/&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 넷플릭스 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;넷플릭스&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;최근 본 작품:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.netflix.com/search?q=%EB%AF%B8%EC%A7%80%EC%9D%98&amp;amp;jbv=82024804&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;미지의 서울&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.netflix.com/search?q=%EC%84%B1%EB%82%9C&amp;amp;jbv=81447461&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;성난 사람들&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.netflix.com/search?q=%EB%8D%B0%EB%B8%94%EC%8A%A4&amp;amp;jbv=81653386&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;데블스플랜2&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.netflix.com/browse?jbv=80994899&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;보헤미안 랩소디&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;netflix-thumbnails&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/net1.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;미지의 서울&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;미지의 서울&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/net2.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;성난 사람들&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;성난 사람들&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/net3.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;데블스플랜2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;데블스플랜2&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/net4.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;보헤미안 랩소디&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;보헤미안 랩소디&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">style&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">netflix-thumbnails&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">flex&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">gap&lt;/span>: &lt;span style="color:#ae81ff">15&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin-top&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">netflix-thumbnails&lt;/span> &lt;span style="color:#f92672">img&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">width&lt;/span>: &lt;span style="color:#ae81ff">120&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">height&lt;/span>: &lt;span style="color:#66d9ef">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-radius&lt;/span>: &lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">transition&lt;/span>: &lt;span style="color:#66d9ef">transform&lt;/span> &lt;span style="color:#ae81ff">0.2&lt;/span>&lt;span style="color:#66d9ef">s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">netflix-thumbnails&lt;/span> &lt;span style="color:#f92672">img&lt;/span>:&lt;span style="color:#a6e22e">hover&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">transform&lt;/span>: scale(&lt;span style="color:#ae81ff">1.05&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">style&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">style&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">tooltip&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">position&lt;/span>: &lt;span style="color:#66d9ef">relative&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">cursor&lt;/span>: &lt;span style="color:#66d9ef">pointer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">tooltip-img&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">position&lt;/span>: &lt;span style="color:#66d9ef">absolute&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">top&lt;/span>: &lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">left&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">none&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">width&lt;/span>: &lt;span style="color:#ae81ff">150&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">height&lt;/span>: &lt;span style="color:#66d9ef">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ccc&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">background&lt;/span>: &lt;span style="color:#ae81ff">#fff&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">z-index&lt;/span>: &lt;span style="color:#ae81ff">100&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">tooltip&lt;/span>:&lt;span style="color:#a6e22e">hover&lt;/span> .&lt;span style="color:#a6e22e">tooltip-img&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">block&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">style&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 블로그 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;블로그&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://yshghid.github.io/&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;블로그 링크&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt; 입니다.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/blog.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;블로그 이미지&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width:500px; border-radius:10px;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 플레이리스트 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;플레이리스트&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;자주 듣는 플레이리스트 입니다.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.youtube.com/watch?v=gmLyLvyLiUU&amp;amp;t=793s&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;media/playlist.jpg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;플레이리스트 이미지&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width:500px; border-radius:10px;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- contact --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;Contact&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 📧 이메일: &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mailto:yshggid@gmail.com&amp;#34;&lt;/span>&amp;gt;yshggid@gmail.com&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 💻 GitHub: &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://github.com/yshghid&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span>&amp;gt;https://github.com/yshghid&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 푸터 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;© 2025 윤소현&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>#실행결과&lt;/mark>&lt;/p></description></item><item><title>NPM 과 PIP 명령어 목록</title><link>https://yshghid.github.io/docs/study/sw/sw1/</link><pubDate>Tue, 22 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw1/</guid><description>&lt;h1 id="npm-과-pip-명령어-목록">
 NPM 과 PIP 명령어 목록
 &lt;a class="anchor" href="#npm-%ea%b3%bc-pip-%eb%aa%85%eb%a0%b9%ec%96%b4-%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-22&lt;/p>
&lt;hr>
&lt;h3 id="1-npm-node-package-manager">
 1. NPM (Node Package Manager)
 &lt;a class="anchor" href="#1-npm-node-package-manager">#&lt;/a>
&lt;/h3>
&lt;p>패키지 설치&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install &amp;lt;패키지명&amp;gt; - 패키지 설치
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install -g &amp;lt;패키지명&amp;gt; - 전역 설치
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install --save-dev &amp;lt;패키지명&amp;gt; - 개발 의존성으로 설치
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install - package.json의 모든 의존성 설치
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>패키지 관리&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm uninstall &amp;lt;패키지명&amp;gt; - 패키지 제거
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm update &amp;lt;패키지명&amp;gt; - 패키지 업데이트
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm list - 설치된 패키지 목록 보기
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm list -g - 전역 설치된 패키지 목록
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>프로젝트 관리&lt;/p></description></item><item><title>BFS/DFS #3 게임 맵 최단거리</title><link>https://yshghid.github.io/docs/study/algorithm/algo8/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo8/</guid><description>&lt;h1 id="bfsdfs-3-게임-맵-최단거리">
 BFS/DFS #3 게임 맵 최단거리
 &lt;a class="anchor" href="#bfsdfs-3-%ea%b2%8c%ec%9e%84-%eb%a7%b5-%ec%b5%9c%eb%8b%a8%ea%b1%b0%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-21&lt;/p>
&lt;hr>
&lt;p>문제: ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다. 지금부터 당신은 한 팀의 팀원이 되어 게임을 진행하려고 합니다. 다음은 5 x 5 크기의 맵에, 당신의 캐릭터가 (행: 1, 열: 1) 위치에 있고, 상대 팀 진영은 (행: 5, 열: 5) 위치에 있는 경우의 예시입니다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0c2834d7-07d7-4c5a-b6c6-9058de58a3da" alt="image" />&lt;/p>
&lt;p>위 그림에서 검은색 부분은 벽으로 막혀있어 갈 수 없는 길이며, 흰색 부분은 갈 수 있는 길입니다. 캐릭터가 움직일 때는 동, 서, 남, 북 방향으로 한 칸씩 이동하며, 게임 맵을 벗어난 길은 갈 수 없습니다. 아래 예시는 캐릭터가 상대 팀 진영으로 가는 두 가지 방법을 나타내고 있습니다.&lt;/p></description></item><item><title>GIT, Docker, VScode, RDE 컨테이너 - 개발환경 설정</title><link>https://yshghid.github.io/docs/study/devops/dev1/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/devops/dev1/</guid><description>&lt;h1 id="git-docker-vscode-rde-컨테이너---개발환경-설정">
 GIT, Docker, VScode, RDE 컨테이너 - 개발환경 설정
 &lt;a class="anchor" href="#git-docker-vscode-rde-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88---%ea%b0%9c%eb%b0%9c%ed%99%98%ea%b2%bd-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-21&lt;/p>
&lt;hr>
&lt;h3 id="1-git-사용자-정보-설정">
 1. GIT 사용자 정보 설정
 &lt;a class="anchor" href="#1-git-%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%a0%95%eb%b3%b4-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Git 설치 확인&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>사용자 이름 설정&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.name &lt;span style="color:#e6db74">&amp;#34;윤소현&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>이메일 주소 설정&lt;span style="color:#f92672">]&lt;/span> GitHub에 등록된 이메일 주소와 일치하는지 확인 필요
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.email &lt;span style="color:#e6db74">&amp;#34;yshggid@gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>설정 확인&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-로컬-git-repository-생성">
 2. 로컬 GIT Repository 생성
 &lt;a class="anchor" href="#2-%eb%a1%9c%ec%bb%ac-git-repository-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;p>vscode에서 좌측 SOURCE CONTRIL 아이콘 &amp;gt; Initialize Repository &amp;gt; 로컬 폴더를 git repository로 생성&lt;/p></description></item><item><title>RDE #1 Local PC에서 RDE 환경 구성</title><link>https://yshghid.github.io/docs/study/sw/sw3/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/sw/sw3/</guid><description>&lt;h1 id="rde-1-local-pc에서-rde-환경-구성">
 RDE #1 Local PC에서 RDE 환경 구성
 &lt;a class="anchor" href="#rde-1-local-pc%ec%97%90%ec%84%9c-rde-%ed%99%98%ea%b2%bd-%ea%b5%ac%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-22&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Docker Desktop 설치&lt;/li>
&lt;/ol>
&lt;p>링크 - &lt;a href="https://www.docker.com/products/docker-desktop/">https://www.docker.com/products/docker-desktop/&lt;/a>&lt;/p>
&lt;ol start="2">
&lt;li>RdE Container download&lt;/li>
&lt;/ol>
&lt;p>Harbor registry로부터 이미지 다운로드 (*에 이미지 경로)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>다운로드 확인하면?&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/f17604e3-47b4-4cd4-87e2-eb5037a60e7d" alt="image" />&lt;/p>
&lt;p>잘들어가있다!&lt;/p>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Local RDE 설치하기&lt;/li>
&lt;/ol>
&lt;p>https://mattermost.&lt;em>.com 접속해서 다운로드. (&lt;/em>: 링크 블라인드처리)&lt;/p>
&lt;ol start="2">
&lt;li>실행&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e2d206b7-5969-4f68-840f-67e1bf343b31" alt="image" />&lt;/p>
&lt;p>아이콘 클릭해서 실행&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RDE Launcher 시작 중...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>시작 시간: 2025-07-22 16:55:56
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>작업 디렉토리: /Users/yshmbid/rde
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>실행 파일: rde-launcher-macos-arm64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>로그 파일: /Users/yshmbid/rde/rde-launcher.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>작업 디렉토리로 이동했습니다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>실행 파일 확인 완료: rde-launcher-macos-arm64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RDE Launcher 실행 중...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>프로세스를 시작합니다...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>설정 파일 로드 중...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>컨테이너 타입 설정이 없습니다. 기본값 &lt;span style="color:#e6db74">&amp;#39;docker&amp;#39;&lt;/span>을 사용합니다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VS Code 서버가 성공적으로 시작되었습니다!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SSH config가 이미 최신 상태입니다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SSH 키가 성공적으로 복사되었습니다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✅ VS Code 컨테이너가 성공적으로 시작되었습니다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 접속 URL: http://localhost:8443/vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✅ 명령 실행 완료.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 실행이 성공적으로 완료되었습니다!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=============================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>완료 시간: 2025-07-22 16:56:27
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>실행 시간: 00:00:31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>종료 코드: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>로그 파일 위치: /Users/yshmbid/rde/rde-launcher.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>로그 파일을 열려면 &lt;span style="color:#e6db74">&amp;#39;open &amp;#34;/Users/yshmbid/rde/rde-launcher.log&amp;#34;&amp;#39;&lt;/span> 명령을 사용하세요.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>완료! 계속하려면 Enter 키를 누르세요...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>base&lt;span style="color:#f92672">)&lt;/span> yshmbid:~ yshmbid$ 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>성공적으로 실행!&lt;/p></description></item><item><title>BFS/DFS #1 타겟 넘버</title><link>https://yshghid.github.io/docs/study/algorithm/algo6/</link><pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo6/</guid><description>&lt;h1 id="bfsdfs-1-타겟-넘버">
 BFS/DFS #1 타겟 넘버
 &lt;a class="anchor" href="#bfsdfs-1-%ed%83%80%ea%b2%9f-%eb%84%98%eb%b2%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-19&lt;/p>
&lt;hr>
&lt;p>문제: n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 사용할 수 있는 숫자가 담긴 배열 &lt;code>numbers&lt;/code>, 타겟 넘버 &lt;code>target&lt;/code>이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.&lt;/p>
&lt;p>제한사항: 주어지는 숫자의 개수는 2개 이상 20개 이하입니다. 각 숫자는 1 이상 50 이하인 자연수입니다. 타겟 넘버는 1 이상 1000 이하인 자연수입니다.&lt;/p></description></item><item><title>BFS/DFS #2 네트워크</title><link>https://yshghid.github.io/docs/study/algorithm/algo7/</link><pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo7/</guid><description>&lt;h1 id="bfsdfs-2-네트워크">
 BFS/DFS #2 네트워크
 &lt;a class="anchor" href="#bfsdfs-2-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-19&lt;/p>
&lt;hr>
&lt;p>문제: 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 이때 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다. 컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.&lt;/p>
&lt;p>제한사항: 컴퓨터의 개수 n은 1 이상 200 이하인 자연수입니다. 각 컴퓨터는 0부터 &lt;code>n-1&lt;/code>인 정수로 표현합니다. i번 컴퓨터와 j번 컴퓨터가 연결되어 있으면 computers[i][j]를 1로 표현합니다. computer[i][i]는 항상 1입니다.&lt;/p></description></item><item><title>RAG #2 출력 파서의 개념, Pydantic/Json 출력 파서</title><link>https://yshghid.github.io/docs/study/ai/ai2/</link><pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai2/</guid><description>&lt;h1 id="rag-2-출력-파서의-개념-pydanticjson-출력-파서">
 RAG #2 출력 파서의 개념, Pydantic/Json 출력 파서
 &lt;a class="anchor" href="#rag-2-%ec%b6%9c%eb%a0%a5-%ed%8c%8c%ec%84%9c%ec%9d%98-%ea%b0%9c%eb%85%90-pydanticjson-%ec%b6%9c%eb%a0%a5-%ed%8c%8c%ec%84%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-19&lt;/p>
&lt;hr>
&lt;h3 id="1-출력-파서의-개념과-종류-그리고-세가지-주요-메서드">
 1. 출력 파서의 개념과 종류 그리고 세가지 주요 메서드
 &lt;a class="anchor" href="#1-%ec%b6%9c%eb%a0%a5-%ed%8c%8c%ec%84%9c%ec%9d%98-%ea%b0%9c%eb%85%90%ea%b3%bc-%ec%a2%85%eb%a5%98-%ea%b7%b8%eb%a6%ac%ea%b3%a0-%ec%84%b8%ea%b0%80%ec%a7%80-%ec%a3%bc%ec%9a%94-%eb%a9%94%ec%84%9c%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;p>출력 파서(output parser)는 LLM에서 생성된 응답을 받아서 우리가 원하는 형식으로 변환해주는 역할을 한다. 쉽게 말해, LLM은 텍스트만 생성하지만 우리는 그 텍스트를 리스트, 딕셔너리, JSON, 숫자 등 구조화된 데이터로 바꾸어서 프로그램에 넘기거나, 다음 단계 체인으로 활용하길 원할 때가 많다. 출력 파서는 이 연결고리 역할을 한다. 출력 파서는 LLM이라는 기계가 말한 인간 언어를 다시 기계가 이해할 수 있는 언어로 &amp;lsquo;번역&amp;rsquo;하는 통역사 같은 존재이다. 예를 들어 LLM이 “답은 아시아입니다”라고 말하면, 이걸 다시 &lt;code>{&amp;quot;answer&amp;quot;: &amp;quot;아시아&amp;quot;}&lt;/code> 같은 JSON 객체로 바꿔주는 게 파서의 역할이다. 반대로 말하면, 출력 파서 없이는 LLM이 말한 결과를 그대로 사람이 읽고 판단하거나 후처리 코드를 추가해야만 한다.&lt;/p></description></item><item><title>RAG #3 자동 대화 이력 관리</title><link>https://yshghid.github.io/docs/study/ai/ai3/</link><pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai3/</guid><description>&lt;h1 id="rag-3-자동-대화-이력-관리">
 RAG #3 자동 대화 이력 관리
 &lt;a class="anchor" href="#rag-3-%ec%9e%90%eb%8f%99-%eb%8c%80%ed%99%94-%ec%9d%b4%eb%a0%a5-%ea%b4%80%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-19&lt;/p>
&lt;hr>
&lt;h3 id="1-자동-대화-이력-관리">
 1. 자동 대화 이력 관리
 &lt;a class="anchor" href="#1-%ec%9e%90%eb%8f%99-%eb%8c%80%ed%99%94-%ec%9d%b4%eb%a0%a5-%ea%b4%80%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>ChatPromptTemplate&lt;/code>을 통해 시스템 메시지를 포함하는 프롬프트를 만든다. 시스템 메시지는 모델에게 “너는 금융 상담사야”라고 역할을 부여하는 것이다. 이어지는 &lt;code>(&amp;quot;placeholder&amp;quot;, &amp;quot;{messages}&amp;quot;)&lt;/code>는 실제 사용자의 질문과 AI의 답변이 이 자리에 채워질 것이라는 의미다. 이 프롬프트는 &lt;code>chat = ChatOpenAI(model=&amp;quot;gpt-4o-mini&amp;quot;)&lt;/code>와 연결되는데, 이는 OpenAI의 gpt-4o-mini 모델을 사용하는 챗 인터페이스이다. 이 프롬프트와 모델을 &lt;code>prompt | chat&lt;/code>이라는 LCEL 표현으로 묶으면, 하나의 체인이 만들어진다. 이 체인은 주어진 메시지 목록을 받아, GPT 모델에 전달하고 응답을 생성하는 구조다.&lt;/p></description></item><item><title>RAG #1 랭체인, LCEL, 프롬프트</title><link>https://yshghid.github.io/docs/study/ai/ai1/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/ai/ai1/</guid><description>&lt;h1 id="rag-1-랭체인-lcel-프롬프트">
 RAG #1 랭체인, LCEL, 프롬프트
 &lt;a class="anchor" href="#rag-1-%eb%9e%ad%ec%b2%b4%ec%9d%b8-lcel-%ed%94%84%eb%a1%ac%ed%94%84%ed%8a%b8">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-17&lt;/p>
&lt;hr>
&lt;h3 id="1-랭체인-생태계의-주요-패키지">
 1. 랭체인 생태계의 주요 패키지
 &lt;a class="anchor" href="#1-%eb%9e%ad%ec%b2%b4%ec%9d%b8-%ec%83%9d%ed%83%9c%ea%b3%84%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8c%a8%ed%82%a4%ec%a7%80">#&lt;/a>
&lt;/h3>
&lt;p>랭체인(LangChain)은 LLM(Large Language Model)을 활용한 애플리케이션을 쉽게 만들 수 있도록 돕는 프레임워크이다. 이 생태계는 단일 라이브러리로 구성된 것이 아니라 여러 개의 하위 패키지로 나뉘어 있고, 각각의 역할이 명확하게 분리되어 있다. 랭체인의 주요 목적은 LLM을 단순한 텍스트 생성 도구가 아니라, 여러 시스템과 결합하여 유의미한 작업을 수행하는 &amp;ldquo;생각하고 행동하는&amp;rdquo; 에이전트로 만드는 것이다. 이 생태계의 핵심 구성 요소들을 쉽게 설명하자면, 마치 LLM이라는 뇌에 주변 감각기관과 기억장치, 도구들, 그리고 의사결정 능력을 붙여주는 것이라고 보면 된다.&lt;/p></description></item><item><title>룩캐스트 쇼핑 + 출근템쇼핑</title><link>https://yshghid.github.io/docs/hobby/shopping/shopping1/</link><pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/shopping/shopping1/</guid><description>&lt;h1 id="룩캐스트-쇼핑--출근템쇼핑">
 룩캐스트 쇼핑 + 출근템쇼핑
 &lt;a class="anchor" href="#%eb%a3%a9%ec%ba%90%ec%8a%a4%ed%8a%b8-%ec%87%bc%ed%95%91--%ec%b6%9c%ea%b7%bc%ed%85%9c%ec%87%bc%ed%95%91">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-16&lt;/p>
&lt;hr>
&lt;p>연구실다니면서 맨날 오버핏반팔티만 입고다니다가,,, 출근용으로 입을게업는거같아서 급하게 맨날맨날템을 구비해보앗다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/5c43ec43-aafe-4daf-9bdc-9d133a2eabc7" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b8385676-2d09-4d0e-b8df-2eea3c24a8a7" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1c19a433-3b5a-4fa9-8180-436cd767d8b1" alt="image" />&lt;/p>
&lt;p>1-룩캐스트 케일 라운드 슬림 니트탑&lt;/p>
&lt;p>첨에 네이비를삿는데 얇고 시원하고 막입기좋아서 깔별로 사버렸당&lt;/p>
&lt;p>가격대비 질도 조음&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0e273de1-15a1-4a54-8494-1087d9164d18" alt="image" />&lt;/p>
&lt;p>2-룩캐스트 베린 썸머 턱 팬츠&lt;/p>
&lt;p>매우얇고 핏이이쁘다 ㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8b8c8250-96bb-4f0b-9e5b-4a4d56f8471d" alt="image" />&lt;/p>
&lt;p>3-룩캐스트 코니 윈드브레이커 후디 점퍼&lt;/p>
&lt;p>에어컨가리기용으로 그냥 사봤는데 생각보다 이뻐서 흰색도 살까말까 고민중이당&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ebd82cf2-de75-41bf-ba32-3938a6e0d6e4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/43573e0b-cab3-421c-9c11-90e46262a995" alt="image" />&lt;/p>
&lt;p>4-룩캐스트 무이 소프트 티셔츠&lt;/p>
&lt;p>끔찍한 맨날맨날템.. ㅋㅋ 소재가 텐셀느낌인데 쇼핑몰텐셀티 특유의 추리해보이는느낌이 안나서 좋길래 얘도 깔별로 구매해버렷다 ㅋㅋ&lt;/p></description></item><item><title>Olivet 뽀글 올톡이 키링</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite9/</link><pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite9/</guid><description>&lt;h1 id="olivet-뽀글-올톡이-키링">
 Olivet 뽀글 올톡이 키링
 &lt;a class="anchor" href="#olivet-%eb%bd%80%ea%b8%80-%ec%98%ac%ed%86%a1%ec%9d%b4-%ed%82%a4%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-14&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/763bf79a-d0e2-4011-ab92-a58b42f7674c" alt="image" />&lt;/p>
&lt;p>출근용으로 요 가방을 샀는데&lt;/p>
&lt;p>키링 달아주면 이쁠것같아서 검색하다가 맘에드는 키링을 찾았다 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/1a8a8bdd-64df-4b07-8fc6-3fb01a10a64e" alt="image" />&lt;/p>
&lt;p>갈색도있고 회색 핑크색 등등 여러색깔이 있는데 멜론색말고는 눈에안들어와서 멜론으로 구매 예정!! (사실 이미 시켰다가 서울올라가기전에 배송 안올거같아서 취소신청함 .. 올라가서 다시 사야지 ㅠㅠ)&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0bcb6084-7899-472b-a9f0-9373cc706f2e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/29e4f32f-702f-4973-a32b-77f2db864a26" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/df532b11-749d-4e58-97bf-bbf11e036f6b" alt="image" />&lt;/p>
&lt;p>하찮게 달려있는거&amp;hellip; 넘기엽다 ㅋㅋ&lt;/p></description></item><item><title>edgeR: DE 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi23/</link><pubDate>Sat, 12 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi23/</guid><description>&lt;h1 id="edger-de-분석">
 edgeR: DE 분석
 &lt;a class="anchor" href="#edger-de-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-12&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(edgeR)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">packageVersion&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;edgeR&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-set-path">
 2. Set path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2406/data-gne&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;data/home/ysh980101/2406/data-gne&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="3-load-data-run-edger">
 3. Load data, Run edgeR
 &lt;a class="anchor" href="#3-load-data-run-edger">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>tissue_type &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;G&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S1 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#34;WT&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#34;GneKI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (tissue &lt;span style="color:#66d9ef">in&lt;/span> tissue_type) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">print&lt;/span>(tissue) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.csv&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;count.csv&amp;#34;&lt;/span>, header &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts[, &lt;span style="color:#ae81ff">-1&lt;/span>] &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">lapply&lt;/span>(counts[, &lt;span style="color:#ae81ff">-1&lt;/span>], as.numeric)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &lt;span style="color:#f92672">&amp;lt;-&lt;/span> counts&lt;span style="color:#a6e22e">[rowSums&lt;/span>(counts[, &lt;span style="color:#ae81ff">-1&lt;/span>]) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.csv&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mouse_meta_&amp;#34;&lt;/span>,tissue,&lt;span style="color:#e6db74">&amp;#34;.csv&amp;#34;&lt;/span>), header &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> meta &lt;span style="color:#f92672">&amp;lt;-&lt;/span> meta[meta&lt;span style="color:#f92672">$&lt;/span>Group &lt;span style="color:#f92672">%in%&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(S1, S2), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &lt;span style="color:#f92672">&amp;lt;-&lt;/span> counts[, &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;GeneID&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">unique&lt;/span>(meta&lt;span style="color:#f92672">$&lt;/span>SampleID))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> counts &lt;span style="color:#f92672">&amp;lt;-&lt;/span> counts[, &lt;span style="color:#a6e22e">colnames&lt;/span>(counts) &lt;span style="color:#f92672">%in%&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;GeneID&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;GeneID&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">unique&lt;/span>(meta&lt;span style="color:#f92672">$&lt;/span>SampleID)))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">factor&lt;/span>(meta&lt;span style="color:#f92672">$&lt;/span>Group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">relevel&lt;/span>(Group, ref&lt;span style="color:#f92672">=&lt;/span>S1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">DGEList&lt;/span>(counts&lt;span style="color:#f92672">=&lt;/span>counts[,&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#a6e22e">ncol&lt;/span>(counts)], group&lt;span style="color:#f92672">=&lt;/span>Group, genes &lt;span style="color:#f92672">=&lt;/span> counts[,&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">calcNormFactors&lt;/span>(y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">model.matrix&lt;/span>(&lt;span style="color:#f92672">~&lt;/span>Group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rownames&lt;/span>(design) &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">colnames&lt;/span>(y3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">estimateDisp&lt;/span>(y3, design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y3 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">estimateGLMRobustDisp&lt;/span>(y3,design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fit3 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">glmFit&lt;/span>(y3, design)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrt3 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">glmLRT&lt;/span>(fit3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">plotMD&lt;/span>(lrt3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">abline&lt;/span>(h&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#ae81ff">-1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>), col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;blue&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#a6e22e">summary&lt;/span>(&lt;span style="color:#a6e22e">decideTests&lt;/span>(lrt3)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result_table &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">topTags&lt;/span>(lrt3, n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">nrow&lt;/span>(lrt3&lt;span style="color:#f92672">$&lt;/span>table))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sorted_result_table &lt;span style="color:#f92672">&amp;lt;-&lt;/span> result_table&lt;span style="color:#a6e22e">[order&lt;/span>(result_table&lt;span style="color:#f92672">$&lt;/span>table&lt;span style="color:#f92672">$&lt;/span>FDR, decreasing &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filtered_result_table &lt;span style="color:#f92672">&amp;lt;-&lt;/span> sorted_result_table[sorted_result_table&lt;span style="color:#f92672">$&lt;/span>table&lt;span style="color:#f92672">$&lt;/span>FDR &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0.05&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write.csv&lt;/span>(sorted_result_table, file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;de-edger-&amp;#34;&lt;/span>,tissue,&lt;span style="color:#e6db74">&amp;#34;_&amp;#34;&lt;/span>,S1,&lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span>,S2,&lt;span style="color:#e6db74">&amp;#34;.csv&amp;#34;&lt;/span>), row.names &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>[1] &amp;#34;G&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GroupGneKI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Down 50
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NotSig 10888
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Up 100
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img width="840" height="840" alt="image" src="https://github.com/user-attachments/assets/c51125bd-7a59-4241-b39c-da785b4dbc0e" /></description></item><item><title>카페 코잔타</title><link>https://yshghid.github.io/docs/hobby/daily/daily18/</link><pubDate>Sat, 12 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily18/</guid><description>&lt;h1 id="카페-코잔타">
 카페 코잔타
 &lt;a class="anchor" href="#%ec%b9%b4%ed%8e%98-%ec%bd%94%ec%9e%94%ed%83%80">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-12&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/90ecb7b6-a85b-4c90-96bc-f1132785686d" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/b6f08533-56ed-407d-8718-d8d9895eacc2" alt="image" />&lt;/p>
&lt;p>여름 분위기 그자체였던 카페 코잔타 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/fb5e668e-2b10-4690-bf6c-62a96e2cd8f5" alt="image" />&lt;/p>
&lt;p>브런치카페긴 한데 밥을 먹고가서 초코브라우니랑 당근케이크를 시켰다. 브라우니는 무난했구 당근케이크가 좀 맛있었는데 인스타 찾아보니까 실제로도 요게 제일 잘나가는듯 ㅎ&lt;/p>
&lt;p>그리고 커피가 진짜 맛있었다!!! 나는 오트라떼 마셨는데 내기준 1위인 폴바셋 오트라떼에 준하는 엄청 맛있는 라떼였다 ㅎㅎㅎ 그리고 컵이 진짜 이뻤음&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/581a138b-05d8-4cc0-b668-4aeb76fe2440" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/c55d000a-6ef2-494a-94a6-753c058318f0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5885e56b-427b-4ddd-b854-a9e4d5b1a764" alt="image" />&lt;/p>
&lt;p>별채 소품샵도 구경했는데 ㅎ 카페랑 한몸인듯한 감성이었다 키링 그릇 이런거 판매중이었고 이쁘다고 생각한 컵도 팔고있었는데 5마넌이어서 그냥 나옴 ㅋㅋㅎ&lt;/p></description></item><item><title>직관적 이해</title><link>https://yshghid.github.io/docs/hobby/book/book50/</link><pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book50/</guid><description>&lt;h1 id="직관적-이해">
 직관적 이해
 &lt;a class="anchor" href="#%ec%a7%81%ea%b4%80%ec%a0%81-%ec%9d%b4%ed%95%b4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-11&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>오클라호마에서 큰 홍수가 나서 발이 묶였는데, 더 재미있었습니다. 살짝 모험을 하는 상황이었으니까요. 비니타라는 작은 마을에서 그야말로 우린 물에 포위되었어요. 온 마을이 오도 가도 못하는 운전자들로 바글거렸어요.&lt;/p>
&lt;p>파인만은 늘 그렇듯이 방을 구하는 법을 알았어요. 우린 마을에서 악명 높은 사창가로 갔죠. 끔찍했습니다. 오클라호마답게 무덥고 끈적거리는 여름밤이었어요. 지붕에 탕 탕 탕 소리를 내며 밤새 비도 쏟아졌어요. 잠을 자는 건 고사하고, 머리에 지붕이 있다는 것만 해도 감지덕지했죠. 그렇게 우린 매춘부들이 바깥 복도에서 왔다 갔다 하는 냄새나는 방에 갇혀 있었답니다. 뭐 딱히 할 일도 없어서 우린 밤새 이야기를 나눴어요. 세상 이야기나 하면서 파인만을 여덟 시간 동안 온전히 차지한 날은 그날뿐이었어요.&lt;/p></description></item><item><title>모든 법칙은 동일한 법칙의 다른 측면일 뿐이다.</title><link>https://yshghid.github.io/docs/hobby/book/book49/</link><pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book49/</guid><description>&lt;h1 id="모든-법칙은-동일한-법칙의-다른-측면일-뿐이다">
 모든 법칙은 동일한 법칙의 다른 측면일 뿐이다.
 &lt;a class="anchor" href="#%eb%aa%a8%eb%93%a0-%eb%b2%95%ec%b9%99%ec%9d%80-%eb%8f%99%ec%9d%bc%ed%95%9c-%eb%b2%95%ec%b9%99%ec%9d%98-%eb%8b%a4%eb%a5%b8-%ec%b8%a1%eb%a9%b4%ec%9d%bc-%eb%bf%90%ec%9d%b4%eb%8b%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-06&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>물리학은 자연의 갖가지 현상들이 실제로는 동일한 것의 다른 측면임을 알아내려는 영원한 시도입니다.&lt;/p>
&lt;p>온갖 상이한 것들, 그 모든 현상을 어떤 근본적인 법칙과 단순성의 상이한 측면으로—아마도—설명할 수 있다는 거죠. 놀랍게도, 완전히 달라 보이는 것들이 실제로는 아주 밀접하게 관련되어 있어요.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>물리학의 역사는 주로 역학,&lt;/p>
&lt;p>즉 뉴턴의 운동법칙과 함께 시작되었습니다. 가령 뉴턴은 추와 지구상 물체의 운동과 행성의 운동이 실제로 똑같은 법칙의 지배를 받고 있음을 밝혀냈지요. 나중에 열과 온도에 관한 현상들이 발견되었는데, 우리는 그걸 운동과 전혀 다르게 느껴요. 하지만 열 현상은 부분들의 운동으로 궁극적으로 설명되기에, 이것이 바로 자연의 위대한 단순성의 한 사례죠. 전기 현상과 자기 현상도 서로 독립적으로 연구되었지만, 둘은 긴밀히 연결되어 있었습니다. 동일한 것의 다른 측면일 뿐이었어요.&lt;/p></description></item><item><title>2025 하반기 일정</title><link>https://yshghid.github.io/docs/study/career/career6/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career6/</guid><description>&lt;h1 id="2025-하반기-일정">
 2025 하반기 일정
 &lt;a class="anchor" href="#2025-%ed%95%98%eb%b0%98%ea%b8%b0-%ec%9d%bc%ec%a0%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-05&lt;/p>
&lt;hr>
&lt;h3 id="1-졸업-일정">
 1. 졸업 일정
 &lt;a class="anchor" href="#1-%ec%a1%b8%ec%97%85-%ec%9d%bc%ec%a0%95">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>2025학년도 1학기 대학원 수료생 등록 안내 &lt;a href="https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;amp;wr_id=28393&amp;amp;sca=">https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;wr_id=28393&amp;sca=&lt;/a>대학원&amp;amp;page=3&lt;/p>
&lt;ul>
&lt;li>신청-2025. 2. 24.(월)~2. 26.(수)&lt;/li>
&lt;li>등록-2025. 3. 10.(월)~3. 11.(화)
&lt;img src="https://github.com/user-attachments/assets/641aa182-e978-4172-b657-0bcdcbeb6339" alt="image" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2025학년도 1학기 대학원생 연구윤리교육 시행 안내 &lt;a href="https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;amp;wr_id=28426&amp;amp;sca=">https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;wr_id=28426&amp;sca=&lt;/a>대학원&amp;amp;page=3&lt;/p>
&lt;ul>
&lt;li>수강신청-2025. 3. 5.(수)~3. 10.(월)&lt;/li>
&lt;li>교육기간-2025. 3. 12.(수)~6. 23.(월)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2025학년도 1학기 재학생 등록금 수납 &lt;a href="https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;amp;wr_id=28429&amp;amp;sca=">https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;wr_id=28429&amp;sca=&lt;/a>대학원&amp;amp;page=3&lt;/p>
&lt;ul>
&lt;li>납부기간-2025. 2. 18.(화) 9:00 ~ 2. 21.(금) 16:00&lt;/li>
&lt;li>고지서 출력-2025. 2. 15.(토) 14:00부터 조회 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2025.1학기 학위논문 제출 예정자 신청안내 &lt;a href="https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;amp;wr_id=28447&amp;amp;sca=">https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;wr_id=28447&amp;sca=&lt;/a>대학원&amp;amp;page=2&lt;/p>
&lt;ul>
&lt;li>신청기간-2025. 3. 17.(월)~3. 19.(수)   15:00 까지 [3일간]&lt;/li>
&lt;li>신청방법-통합정보시스템에서 학생이 신청 후 사무실 신청서 제출&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>2025학년도 1학기 대학원 심사용 학위논문 접수 안내 &lt;a href="https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;amp;wr_id=28502&amp;amp;sca=">https://cse.knu.ac.kr/bbs/board.php?bo_table=sub5_1&amp;wr_id=28502&amp;sca=&lt;/a>대학원&amp;amp;page=2&lt;/p></description></item><item><title>SKALA 2기 지원</title><link>https://yshghid.github.io/docs/study/career/career4/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career4/</guid><description>&lt;h1 id="skala-2기-지원">
 SKALA 2기 지원
 &lt;a class="anchor" href="#skala-2%ea%b8%b0-%ec%a7%80%ec%9b%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-05&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/3c49a3c3-de77-42b7-a836-3adf0cce6a12" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/14408607-6b30-46e9-b0e7-eb470706c152" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3ec138e6-6b6b-4b7a-a735-82e7ef4599e1" alt="image" />&lt;/p>
&lt;p>서류 -&amp;gt; SKCT 심층검사 -&amp;gt; 인성/직무 면접 이렇게 3단계로만 진행했고&lt;/p>
&lt;p>6.15 서류제출 -&amp;gt; 7.4 결과발표로 전형기간이 엄청 짧은 편이었는데도 첨이라 그런지 엄청 길게 느껴졌다.&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>가볍게 회고해보면&lt;/p>
&lt;p>서류는 진짜 대충썼던거같고..&lt;/p>
&lt;p>인성검사 처음쳐봐서 걱정했는데 잡플랫 프패 10마넌짜리 끊어서 한 7-8개정도 쳐보고 친게 도움된거같다.&lt;/p>
&lt;p>그리고 &amp;lsquo;나&amp;rsquo;라고 생각하기보다는 &amp;lsquo;나와 비슷하면서 sk 인재상에 맞는 누군가&amp;rsquo;를 떠올리면서 쳤는데 그게 일관성 유지에 도움된것같다. 모의검사 쳐보면서 느낀게 나는 복잡한 나를 너무 잘 알다보니 비슷한 문항을 다르게 해석해서 답변하게돼서 오히려 일관성이 떨어지는 느낌을 받았다 그래서 sk 인재상에 맞으면서 바람직한 사람인 교수님을 떠올리면서 교수님이라면 뭘 체크하실까? 생각하면서 쳤는데 다행히 괜찮게작용한거같다.&lt;/p></description></item><item><title>파인만 공부법</title><link>https://yshghid.github.io/docs/hobby/book/book48/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book48/</guid><description>&lt;h1 id="파인만-공부법">
 파인만 공부법
 &lt;a class="anchor" href="#%ed%8c%8c%ec%9d%b8%eb%a7%8c-%ea%b3%b5%eb%b6%80%eb%b2%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-05&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>정전기학에 관한 내용처럼 어려운 부분을 만나면 저만의 요령이 하나 있었습니다.&lt;/p>
&lt;p>뭐냐면 처음 두세 문단이 이해가 안 되더라도 내용 전체를 읽어요. 처음에는 전체를 흐릿하게 이해하지만 다시 읽으면 조금 나아지고 계속 그러다 보면 전부 이해가 되지요(예외도 있는데 그건 나중에 설명하겠습니다). 그다음 책에다 요점을 적어놓으면 완성됩니다. 가령 타원형 축전기의 정전용량 계산 같은 건 건너뛰는데, 내용 전체를 읽어보면 그런 기능이나 복잡한 계산은 뒤에 다시 나오지 않는 지엽적인 사안임을
이미 알기 때문이지요. 복잡한 책들을 많이 읽다 보니, 배워야 할 핵심 부분과 응용이나 지엽적인 부분(전체 내용을 이해하는 능력과는 무관한 부분)을 본능적으로 구분할 줄 알게 되었어요. 이런 독창적인 방법 덕분에, 책에서 흥미로운 주제가 무언지를 늘 스스로 간파해냈죠. 하지만 미적분은 달랐습니다. 저로서는 이해불가였어요!&lt;/p></description></item><item><title>BFS 공부</title><link>https://yshghid.github.io/docs/study/algorithm/algo5/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo5/</guid><description>&lt;h1 id="bfs-공부">
 BFS 공부
 &lt;a class="anchor" href="#bfs-%ea%b3%b5%eb%b6%80">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;h3 id="1-기본로직">
 1. 기본로직
 &lt;a class="anchor" href="#1-%ea%b8%b0%eb%b3%b8%eb%a1%9c%ec%a7%81">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>1. graph 만든다
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 인접 리스트 정렬
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. bfs 만든다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i) visited 만들고 / queue 만들어서 start만 넣는다. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ii) queue가 빌때까지 다음을 수행
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: queue의 첫번째값 v를 꺼냄. v가 미방문이면? visited에 v추가하고. v의 이웃을 봣을때 미방문이면? queue에 추가.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4. bfs 돌린다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>참고 문제: &lt;a href="https://yshghid.github.io/docs/study/algorithm/algo3/#1-%eb%b0%a9%eb%ac%b8-%ec%88%9c%ec%84%9c-%ec%b6%9c%eb%a0%a5%ed%95%98%ea%b8%b0">BFS #1&lt;/a>&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>나눔과 버팀</title><link>https://yshghid.github.io/docs/hobby/book/book46/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book46/</guid><description>&lt;h1 id="나눔과-버팀">
 나눔과 버팀
 &lt;a class="anchor" href="#%eb%82%98%eb%88%94%ea%b3%bc-%eb%b2%84%ed%8c%80">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-04&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>짧고 평범한 인생이지만 그래도 살면서 한 가지 명확해진 사실이 있다. 인생은 그야말로 운의 상승과 하락의 반복이라는 점이다. 언뜻 보면, 모든 것은 자신의 노력이나 선택에 달려 있을 것 같지만, 실상은 그렇지 않다. 어떤 때는 아무리 노력해도 모든 것이 뜻대로 풀리지 않고, 반대로 마치 모든 일이 잘될 운명인 듯 일이 술술 풀리기도 한다.&lt;/p>
&lt;p>가장 먼저 깨달은 것은, 모든 것이 잘 풀리는 운의 상승기에 있을 때야말로 주위 사람들에게 아낌없이 베풀어야 한다는 사실이다. 나에게 모든 것이 잘 풀리는 순간, 흔히 사람들은 자신만의 성과와 행복에 집중하기 쉽다. 자만하기도 쉽다. 정상에 오르면 기분이 좋고, 뭔가 해낼 수 있다는 자신감에 차게 된다.&lt;/p></description></item><item><title>테슬라모터스의 탄생</title><link>https://yshghid.github.io/docs/hobby/book/book47/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book47/</guid><description>&lt;h1 id="테슬라모터스의-탄생">
 테슬라모터스의 탄생
 &lt;a class="anchor" href="#%ed%85%8c%ec%8a%ac%eb%9d%bc%eb%aa%a8%ed%84%b0%ec%8a%a4%ec%9d%98-%ed%83%84%ec%83%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-04&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>원가가산 방식의 계약 시스템에서는&lt;/p>
&lt;p>정부가 새로운 로켓이나 엔진, 인공위성 제작과 같은 프로젝트에 대한 통제권을 갖고 원하는 세부사양을 제시했다. 그런 다음 보잉이나 록히드마틴과 같은 대기업과 계약을 체결하고 모든 비용에 보장 수익을 더해서 지급했다. 이 방식은 제2차 세계대전 중 정부가 무기 개발을 완전히 통제하는 동시에 도급업체가 전쟁으로 돈벌이를 한다는 인식을 방지하기 위한 표준으로 자리 잡았다.&lt;/p>
&lt;p>워싱턴을 방문한 머스크는 상원위원회에서 증언을 하면서 다른 방식을 도입하라고 압박했다. 원가가산 방식의 문제점은 혁신을 저해하는 것이라고, 그는 주장했다. 프로젝트가 예산을 초과하면 도급업체는 더 많은 돈을 받게 되는 방식이었다. 원가가산 방식의 계약자들로 구성된 아늑한 클럽에는 리스크를 감수하거나 창의력을 발휘하거나 빠르게 작업하거나 비용을 절감할 동기가 거의 없었다. “보잉과 록히드마틴은 원가가산 방식이라는 횡재가 계속되길 바라지요.” 그는 말한다. “그런 시스템으로는 화성에 갈 수 없어요. 저들에게는 결코 완수 단계에 이르러서는 안 될 동기가 있지요. 원가가산 방식의 계약을 끝내지 않으면, 정부는 영원히 피만 빨리는 거예요.”&lt;/p></description></item><item><title>BFS #1 #2</title><link>https://yshghid.github.io/docs/study/algorithm/algo3/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo3/</guid><description>&lt;h1 id="bfs-1-2">
 BFS #1 #2
 &lt;a class="anchor" href="#bfs-1-2">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-03&lt;/p>
&lt;hr>
&lt;h3 id="1-방문-순서-출력하기">
 1. 방문 순서 출력하기
 &lt;a class="anchor" href="#1-%eb%b0%a9%eb%ac%b8-%ec%88%9c%ec%84%9c-%ec%b6%9c%eb%a0%a5%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>정점의 개수 n, 간선의 개수 m, 시작 정점 s가 주어진다.
이후 m개의 간선 정보(정점 a, 정점 b)가 주어진다.
인접한 정점들을 오름차순으로 방문한다고 할 때, BFS로 방문한 정점의 순서를 출력하시오.&lt;/p>
&lt;p>#입력 형식&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>5 4 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#출력 예시&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>1 2 3 4 5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> deque
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n, m, s &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split()) &lt;span style="color:#75715e"># 정점 개수, 간선 개수, 시작 정점&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>graph &lt;span style="color:#f92672">=&lt;/span> {i: [] &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, n&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 간선 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(m):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a, b &lt;span style="color:#f92672">=&lt;/span> map(int, input()&lt;span style="color:#f92672">.&lt;/span>split())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[a]&lt;span style="color:#f92672">.&lt;/span>append(b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[b]&lt;span style="color:#f92672">.&lt;/span>append(a) &lt;span style="color:#75715e"># 양방향 그래프&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 인접 리스트 정렬 (오름차순 방문)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> node &lt;span style="color:#f92672">in&lt;/span> graph:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[node]&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BFS 함수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">bfs&lt;/span>(start):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited &lt;span style="color:#f92672">=&lt;/span> set()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue &lt;span style="color:#f92672">=&lt;/span> deque([start])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited_order &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> queue:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v &lt;span style="color:#f92672">=&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>popleft()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> v &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> visited:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited&lt;span style="color:#f92672">.&lt;/span>add(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited_order&lt;span style="color:#f92672">.&lt;/span>append(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> neighbor &lt;span style="color:#f92672">in&lt;/span> graph[v]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> neighbor &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> visited:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>append(neighbor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> visited_order
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 출력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>order &lt;span style="color:#f92672">=&lt;/span> bfs(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(map(str, order)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#풀이&lt;/p></description></item><item><title>BFS #3</title><link>https://yshghid.github.io/docs/study/algorithm/algo4/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/algorithm/algo4/</guid><description>&lt;h1 id="bfs-3">
 BFS #3
 &lt;a class="anchor" href="#bfs-3">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-03&lt;/p>
&lt;hr>
&lt;h3 id="3-가장-가까운-목표지점까지의-거리">
 3. 가장 가까운 목표지점까지의 거리
 &lt;a class="anchor" href="#3-%ea%b0%80%ec%9e%a5-%ea%b0%80%ea%b9%8c%ec%9a%b4-%eb%aa%a9%ed%91%9c%ec%a7%80%ec%a0%90%ea%b9%8c%ec%a7%80%ec%9d%98-%ea%b1%b0%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>1과 0으로 구성된 maps 배열이 주어집니다.
maps[y][x] == 1인 곳은 이동할 수 있고, 0인 곳은 이동할 수 없습니다.&lt;/p>
&lt;p>시작점은 (0,0), 도착점은 (n-1, m-1)입니다.
상, 하, 좌, 우 4방향으로만 이동할 수 있을 때, 도착지까지 최단 거리를 구하세요.
도착할 수 없는 경우 -1을 반환하세요.&lt;/p>
&lt;p>#제한사항&lt;/p>
&lt;p>maps는 5 ≤ maps의 세로 길이, 가로 길이 ≤ 100&lt;/p>
&lt;p>시작점과 도착점은 항상 1입니다.&lt;/p></description></item><item><title>QWER - 눈물참기</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite7/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite7/</guid><description>&lt;h1 id="qwer---눈물참기">
 QWER - 눈물참기
 &lt;a class="anchor" href="#qwer---%eb%88%88%eb%ac%bc%ec%b0%b8%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-03&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=pifz9JH1Re8">https://www.youtube.com/watch?v=pifz9JH1Re8&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/f6d04023-dd5a-436f-aef6-592e2ded567a" alt="image" />&lt;/p>
&lt;p>맑은 하늘에 비 내리는 날&lt;/p>
&lt;p>내 마음과 정말 닮아서 이상하네요&lt;/p>
&lt;p>한 방울 한 방울씩 떨어지는 비가&lt;/p>
&lt;p>점점 맘에 차서 숨쉬기가 힘들 것 같아요&lt;/p>
&lt;p>세상이 아직은 무섭고&lt;/p>
&lt;p>여전히 넘어지는 게&lt;/p>
&lt;p>아직은 너무 어려운가 봐&lt;/p>
&lt;p>눈물 멈추는 법을 몰라요&lt;/p>
&lt;p>차디차고 너무 아파요&lt;/p>
&lt;p>괜찮다는 말은 다 거짓말&lt;/p>
&lt;p>비가 내리는 여기 남겨져&lt;/p>
&lt;p>혼자 울고 싶지 않아요&lt;/p>
&lt;p>알려주세요&lt;/p>
&lt;p>눈물을 참는 방법&lt;/p>
&lt;p>하나둘 한숨 위로 차오른 슬픔이&lt;/p>
&lt;p>이제는 밖으로 다 쏟아져 넘칠 것 같아요&lt;/p></description></item><item><title>마지막 멤버를 공개합니다.. | 최애의 아이들 EP7</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite8/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite8/</guid><description>&lt;h1 id="마지막-멤버를-공개합니다--최애의-아이들-ep7">
 마지막 멤버를 공개합니다.. | 최애의 아이들 EP7
 &lt;a class="anchor" href="#%eb%a7%88%ec%a7%80%eb%a7%89-%eb%a9%a4%eb%b2%84%eb%a5%bc-%ea%b3%b5%ea%b0%9c%ed%95%a9%eb%8b%88%eb%8b%a4--%ec%b5%9c%ec%95%a0%ec%9d%98-%ec%95%84%ec%9d%b4%eb%93%a4-ep7">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-03&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=_1JxVDLZWvw">https://www.youtube.com/watch?v=_1JxVDLZWvw&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/f6ae693a-8fc0-49be-8987-bba2282e6790" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ad74909d-421e-4a20-a703-11cf8a3ea6f4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5d6af15d-2fd0-41b0-a84f-5a6f8d3f0840" alt="image" />&lt;/p>
&lt;p>먼가 사람이 넘 절박하니까 역으로 맹하고 실없어진다 ㅎ 내가 겹쳐보여서 맘이허할때마다 찾아보는 영상!!&lt;/p>
&lt;p>보고나면 멋진사람과 나의 접점을 인지함으로써 간접적으로 자신감이 올라간다 ^^ㅎㅎ (성과를 이룬건 저사람인데 니가왜..ㅋ)&lt;/p>
&lt;p>어디서봤는진 기억안나지만 냥뇽녕냥두 그냥 방송하면서 &amp;lsquo;뭔가를열심히해서 이루는건없이&amp;rsquo; 계속 살게되는건가 하다가 요거 제안들어와서 올인한거같던데 사람이 멀 이루려면 ㅜ 패를 다까고 뛰어들어야하나봐 나를 판단당하는게 무섭다 이런생각은 하면안댄다 할시간없고 그냥뛰어들어야댄다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/10e629a2-f8ac-4b17-99f6-313551a0184e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/57943b74-d05d-406b-95d7-94f5171eeb75" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8e8ef53b-5b7e-43a1-b104-432cf5189512" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/805c9766-834f-48e8-ad4d-c500b32f411c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/fa5b3876-ce5d-44c1-a31b-733372d55429" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/98ee9bee-fa50-42f7-b7b5-5cfae7cce814" alt="image" />&lt;/p></description></item><item><title>비정상성, 궤도의 이탈과 행복</title><link>https://yshghid.github.io/docs/hobby/book/book45/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book45/</guid><description>&lt;h1 id="비정상성-궤도의-이탈과-행복">
 비정상성, 궤도의 이탈과 행복
 &lt;a class="anchor" href="#%eb%b9%84%ec%a0%95%ec%83%81%ec%84%b1-%ea%b6%a4%eb%8f%84%ec%9d%98-%ec%9d%b4%ed%83%88%ea%b3%bc-%ed%96%89%eb%b3%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-03&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>‘행복이란 무엇인가?’라는 질문을 보면 어떠한 생각이 드는가? 너무 닳고 닳은 질문이면서 질문 자체가 명확할 수 없는 난제다. 사실 행복한 순간에는 이 질문이 떠오르지 않는다. 그럴 필요가 없기 때문이다. 지금 불만 없고 행복한데 저런 쓰잘머리 없는 질문이 떠오를 이유가 없다. 저 질문이 떠올랐다는 건 애초에 지금 행복하지 않고 불만이 많은 것이다.&lt;/p>
&lt;p>사실 이 답도 없는 질문은 평생 죽을 때까지 내 곁에 있을 것 같다. 답을 쉽게 내릴 수도 답이 존재하는지도 모르는 질문이라고 생각이 들기 때문이다. 행복은 사랑인가, 만족인가, 감사인가, 내가 좋아하는 것을 하는 건가, 불편함이 없는 상태인가, 건강인가, 인정받음인가. 수많은 답과 의견들이 있지만 무엇 하나 맞는다고 느껴지지 않는다. 그렇다고 완전히 틀렸다고도 느껴지지 않는다. 맞지만 맞지 않는 그 찝찝함도 사실 이 질문을 다루기 싫은 이유 중에 하나다. 모두가 의견이 다르니까 엄청난 진흙탕 싸움이 벌어지기 딱 좋은 질문이다.&lt;/p></description></item><item><title>*</title><link>https://yshghid.github.io/docs/hobby/book/book43/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book43/</guid><description>&lt;h1 id="heading">
 *
 &lt;a class="anchor" href="#heading">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-02&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>나는왜케 커리어욕심을 내는지?&lt;/p>
&lt;p>내가 중요하게 생각하는것은 사람과 성취감이다. 살면서 주변으로 접하는사람들이랑 좋은시간을 보내는게 행복하고 무언가를 노력해서 얻었을때 행복하다 그리고 그 성취라는게 대단한게 아니라 이쁜쿠키를 구웠을때도 마싯는커피를 내렷을때도 성취감은 든다. 꼭 NLP 모델링이어야하는 이유가 있나?&lt;/p>
&lt;p>면접이 애매했던 이유도 그건거같다 지원동기가 애매했다. 면접관들도 의아했을것이다 지원동기가 명확하지 않은데 어떻게이렇게 의지가명확한지? 사실 이번&amp;rsquo;면접&amp;rsquo;에 붙고싶던 이유는 명확했다 &amp;lsquo;나도 대기업 갈수있는 사람인걸 인정받고 싶어&amp;rsquo; &amp;lsquo;이 연구실에 남아있는것 말고는 할수있는게 없는 사람이 아닌걸 증명하고싶어&amp;rsquo; &amp;lsquo;내가 이정도라는걸 보여주고싶어&amp;rsquo;
하지만 그게 해당 교육과정과 기업에 대한 동기였냐 하면 아니었다 그냥 석사와 취준을하면서 조금내려간 자존감을 이번지원을 통해서 해소하고싶었던거같다. 난내가 입신양명이 꿈이고 그래서 누구보다 독기있게 면접을 봤다고 생각했는데 사실은 무언가 끔찍한것으로부터 도망칠 명분을 얻고싶었던거같다 그게 취업해야하는 상황이든 난이정도는 대체가능한인력이라는사실이라는거든&lt;/p></description></item><item><title>7월 2일 (오랜만에 루틴)</title><link>https://yshghid.github.io/docs/study/luck/luck17/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck17/</guid><description>&lt;h1 id="7월-2일-오랜만에-루틴">
 7월 2일 (오랜만에 루틴)
 &lt;a class="anchor" href="#7%ec%9b%94-2%ec%9d%bc-%ec%98%a4%eb%9e%9c%eb%a7%8c%ec%97%90-%eb%a3%a8%ed%8b%b4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-02&lt;/p>
&lt;hr>
&lt;p>먼가 잠오지만,, 마음도 쳐지구 해서 독서실옴 2시간만 코테 하고 30분 라디오 듣고 집에 가야겠다.&lt;/p>
&lt;blockquote>
&lt;p>오늘 한일&lt;/p>
&lt;ul>
&lt;li>코테 dfs 5개 풀기&lt;/li>
&lt;li>리비전 조금&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;blockquote>
&lt;p>내일 할일&lt;/p>
&lt;ul>
&lt;li>리비전 마저하기&lt;/li>
&lt;li>인적성 1회&lt;/li>
&lt;li>코테 bfs 풀기&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>cf) 오늘푼거중에 헷갈린것.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>graph &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> a, b &lt;span style="color:#f92672">in&lt;/span> edges:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> a &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> graph:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[a] &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> b &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> graph:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[b] &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[a]&lt;span style="color:#f92672">.&lt;/span>append(b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> graph[b]&lt;span style="color:#f92672">.&lt;/span>append(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>visited &lt;span style="color:#f92672">=&lt;/span> set()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">dfs&lt;/span>(v):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited&lt;span style="color:#f92672">.&lt;/span>add(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> u &lt;span style="color:#f92672">in&lt;/span> graph[v]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> u &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> visited:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(u)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, node&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> v &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> visited:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cnt)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>아근데 ㅋㅋ ㅠㅠ 도망가고싶다&lt;/p></description></item><item><title>기술적으로 완벽하지 않다는 두려움</title><link>https://yshghid.github.io/docs/hobby/book/book44/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book44/</guid><description>&lt;h1 id="기술적으로-완벽하지-않다는-두려움">
 기술적으로 완벽하지 않다는 두려움
 &lt;a class="anchor" href="#%ea%b8%b0%ec%88%a0%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%99%84%eb%b2%bd%ed%95%98%ec%a7%80-%ec%95%8a%eb%8b%a4%eb%8a%94-%eb%91%90%eb%a0%a4%ec%9b%80">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-02&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>이직을 고민할 때마다 내 머릿속을 짓눌렀던 의문이 하나 있었다. “내가 이 일을 그만두고 아예 새로운 다른 일을 할 수 있을까?” 이 의문은 나만의 것이 아니라, 비슷한 길을 걸어온 사람들에게 공통적으로 다가오는 두려움이기도 했다&lt;/p>
&lt;p>그러나 이직을 생각하며 내가 겪어 본 다양한 경험과 그로부터 얻은 깨달음은 나의 두려움을 조금씩 덜어 주었다. 나는 여러 분야에서 다양한 사람들과 일을 하면서 조금씩 알아차렸다. 세상에서 완벽하게 돌아가는 일은 거의 없다는 것을, 그리고 그 속에서 중요한 것은 완벽한 준비보다는 오히려 부딪히며 배우고 적응하는 과정이라는 것을 말이다.&lt;/p></description></item><item><title>우디 - 어제보다 슬픈 오늘</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite6/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite6/</guid><description>&lt;h1 id="우디---어제보다-슬픈-오늘">
 우디 - 어제보다 슬픈 오늘
 &lt;a class="anchor" href="#%ec%9a%b0%eb%94%94---%ec%96%b4%ec%a0%9c%eb%b3%b4%eb%8b%a4-%ec%8a%ac%ed%94%88-%ec%98%a4%eb%8a%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-02&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=1mZ-hoIvEx8">https://www.youtube.com/watch?v=1mZ-hoIvEx8&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/224c4e2b-06f2-456c-8671-292ade9bf222" alt="image" />&lt;/p>
&lt;p>최근에 이노래 많이들리길래 누가 리메이크햇나?했는데 노래방가니까 인기순위에까지 있었다!!&lt;/p>
&lt;p>서비스로 1곡주길래 머하지하다가 잘기억안나는데 요거그냥불렀음 근데 올만에들으니까 더좋다 ㅎ&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=XkksH267QlU">https://www.youtube.com/watch?v=XkksH267QlU&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/169fd886-f9b2-4f58-bb2d-ceb35dd4c130" alt="image" />&lt;/p>
&lt;p>이노래는 사실 이창섭 라이브로 첨들었었는데 너무 좋아서 이창섭이 이소라의가요광장 나와서 부른 노래 다 돌려들었던 기억이 난당&lt;/p>
&lt;p>어제보다슬픈오늘 말고는&amp;hellip; 비오는거리도 좋고 듣는 편지도 좋다. ㅎㅎ&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=YXXK-WuCZwo">https://www.youtube.com/watch?v=YXXK-WuCZwo&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/871adfcd-ecd0-4cca-b533-b3a2b20cf9ce" alt="image" />&lt;/p>
&lt;p>(근데 벌써 10년이나 댓다니.. 충격)&lt;/p></description></item><item><title>정희원의 라디오 쉼표</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite5/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite5/</guid><description>&lt;h1 id="정희원의-라디오-쉼표">
 정희원의 라디오 쉼표
 &lt;a class="anchor" href="#%ec%a0%95%ed%9d%ac%ec%9b%90%ec%9d%98-%eb%9d%bc%eb%94%94%ec%98%a4-%ec%89%bc%ed%91%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-01&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/217745de-5769-4b0e-adc4-45d9b21f8a39" alt="image" />&lt;/p>
&lt;p>시기적절하게 제2의 왕날편이 생겼다 ㅠㅠ&lt;/p>
&lt;p>인생힘든시기2차가 온거같은 느낌이 들었는데 이번엔 요거 빨로 이겨보면되겠다 근데 사진은 ㅋㅋㅋ 좀너무한거같네 ㅋㅋㅋㅋ&lt;/p></description></item><item><title>지키기 위해서는 변해야 한다</title><link>https://yshghid.github.io/docs/hobby/book/book42/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book42/</guid><description>&lt;h1 id="지키기-위해서는-변해야-한다">
 지키기 위해서는 변해야 한다
 &lt;a class="anchor" href="#%ec%a7%80%ed%82%a4%ea%b8%b0-%ec%9c%84%ed%95%b4%ec%84%9c%eb%8a%94-%eb%b3%80%ed%95%b4%ec%95%bc-%ed%95%9c%eb%8b%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-01&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>난 그냥 나에게 맞는 직업을 찾아 이동했을 뿐이다. 내 주관적인 적성 그 외에는 어떠한 의미 부여도 가치 판단도 하고 싶지 않다.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>이직을 고민하면서 가장 핵심으로 생각한 질문은 이것이다. ‘내 인생에서 직장과 관련하여 단 하나를 잡는다면 무엇을 잡을 것이냐?’ 돈인가, 명예인가, 여유인가, 전문성인가, 꿈인가.&lt;/p>
&lt;p>난 신이 아니기에 일을 하면서 모든 것을 얻을 수 없다. 돈도 명예도 여유도 전문성도 꿈도 모든 것을 갖고 싶지만 불완전한 인간이기에 당연히 무엇인가는 놓칠 수밖에 없다. 하지만 인간이기에 모든 것을 가지고 싶어 하는 마음도 무시할 수는 없다. 그렇기에 잡지도 못하면서 돈도 명예도 시간도 안정성도 이것저것 다 가져가려고 억지로 잡고 버티다가 고통받고 넘어졌다고 생각한다. 그래서 생각했다. 내가 정말 여유가 없고 힘들고 생존이 위기인 상황이라도 일을 통해서 얻고 싶은 것은 무엇일까? 잡고 있는 것만으로도 행복한 무엇인가를 찾아야 하지 않을까.&lt;/p></description></item><item><title>첫면접</title><link>https://yshghid.github.io/docs/study/career/career5/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career5/</guid><description>&lt;h1 id="첫면접">
 첫면접
 &lt;a class="anchor" href="#%ec%b2%ab%eb%a9%b4%ec%a0%91">#&lt;/a>
&lt;/h1>
&lt;p>#2025-07-01&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/047117a4-5d78-4076-a6ee-b5be74d7236e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4ca6fc7f-ac67-4a0f-b3eb-fab51fd7e10b" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/c7a5a91f-39aa-4305-a898-eaa3d39ea9e7" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/84884c6c-5a69-4f9f-93ca-0f3c945bb0ae" alt="image" />&lt;/p>
&lt;p>새로산기여운케이스랑 마고플레인이랑 저속노화좌 없었으면 멘탈 부셔졌을거같은데 다행히 마무리까지끝냈다&lt;/p>
&lt;p>준비하는동안 24기광수책이랑 정희원의저속노화 너무 읽고싶었는데 이제읽을수있으니까 좋다.&lt;/p></description></item><item><title>HLA 결합력 변화 비교</title><link>https://yshghid.github.io/docs/study/tech/tech37/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech37/</guid><description>&lt;h1 id="hla-결합력-변화-비교">
 HLA 결합력 변화 비교
 &lt;a class="anchor" href="#hla-%ea%b2%b0%ed%95%a9%eb%a0%a5-%eb%b3%80%ed%99%94-%eb%b9%84%ea%b5%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-27&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-affinity-data">
 2. Load affinity data
 &lt;a class="anchor" href="#2-load-affinity-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;/data/home/ysh980101/2411/data-mhc/patient_id.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> patients &lt;span style="color:#f92672">=&lt;/span> [line&lt;span style="color:#f92672">.&lt;/span>strip() &lt;span style="color:#66d9ef">for&lt;/span> line &lt;span style="color:#f92672">in&lt;/span> file]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(patients)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>388 #387+reference
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-merge-affinity-tables">
 3. Merge affinity tables
 &lt;a class="anchor" href="#3-merge-affinity-tables">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hotspot &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;c315&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dfs &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> pid &lt;span style="color:#f92672">in&lt;/span> patients:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2411/data-mhc/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hotspot&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/binding_affinities_HLA-I.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(file_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;Affinity&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;Peptide&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Peptide_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>}, inplace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> pid &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;reference&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs&lt;span style="color:#f92672">.&lt;/span>append(df)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs&lt;span style="color:#f92672">.&lt;/span>append(df[[&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#dfs.append(df[[f&amp;#39;{pid}&amp;#39;, f&amp;#39;Peptide_{pid}&amp;#39;]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat(dfs, axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_df &lt;span style="color:#f92672">=&lt;/span> res_df&lt;span style="color:#f92672">.&lt;/span>set_index(&lt;span style="color:#e6db74">&amp;#39;Allele&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/f42cabe2-ace8-4fad-af95-054120e129b7" alt="image" />&lt;/p></description></item><item><title>SK AX 면접 준비</title><link>https://yshghid.github.io/docs/study/career/career3/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career3/</guid><description>&lt;h1 id="sk-ax-면접-준비">
 SK AX 면접 준비
 &lt;a class="anchor" href="#sk-ax-%eb%a9%b4%ec%a0%91-%ec%a4%80%eb%b9%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-27&lt;/p>
&lt;hr></description></item><item><title>﹂슈도코드</title><link>https://yshghid.github.io/docs/study/tech/tech36/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech36/</guid><description>&lt;h1 id="슈도코드">
 ﹂슈도코드
 &lt;a class="anchor" href="#%ec%8a%88%eb%8f%84%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;h3 id="clustering">
 #Clustering
 &lt;a class="anchor" href="#clustering">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">DBSCAN&lt;/span>(sequence, eps, min_samples):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cores &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> nt &lt;span style="color:#f92672">in&lt;/span> sequence:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> neighbors &lt;span style="color:#f92672">=&lt;/span> find_neighbors(nt, eps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(neighbors) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> min_samples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of nt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">#core&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append nt &lt;span style="color:#f92672">in&lt;/span> cores
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> core &lt;span style="color:#f92672">in&lt;/span> cores:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label, clusters &lt;span style="color:#f92672">=&lt;/span> expand_cluster(core, neighbors, eps, min_samples)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of nt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> nt &lt;span style="color:#f92672">in&lt;/span> sequence &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> clusters &lt;span style="color:#75715e">#noise not in cluster&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">MUTCLUST&lt;/span>(sequence, eps_scaler, dim_factor, min_samples):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ccms &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hscore &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deps &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> nt &lt;span style="color:#f92672">in&lt;/span> sequence:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hscore[nt], deps[nt] &lt;span style="color:#f92672">=&lt;/span> calculate_hscore(nt), calculate_deps(nt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append nt &lt;span style="color:#f92672">in&lt;/span> ccms &lt;span style="color:#66d9ef">if&lt;/span> select_ccm(hscore, deps, min_samples)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ccm &lt;span style="color:#f92672">in&lt;/span> ccms:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of ccm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">#core&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusters &lt;span style="color:#f92672">=&lt;/span> expand_cluster(ccm, sequence, eps, min_samples, eps_scaler, dim_factor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of nt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> nt &lt;span style="color:#f92672">in&lt;/span> sequence &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#f92672">in&lt;/span> clusters &lt;span style="color:#75715e">#noise&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> hscore, ccms, clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#functions used in dbscan()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">expand_cluster&lt;/span>(cur_nt, cur_neighbors, min_samples, clusters): &lt;span style="color:#75715e">#expand cluster of cur_nt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ne &lt;span style="color:#f92672">in&lt;/span> cur_neighbors:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ne_neighbors &lt;span style="color:#f92672">=&lt;/span> find_neighbors(ne, eps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ne_neighbors &lt;span style="color:#f92672">&amp;gt;=&lt;/span> min_samples: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of ne &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e">#border&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append ne &lt;span style="color:#f92672">in&lt;/span> clusters[cur_nt]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append ne &lt;span style="color:#f92672">in&lt;/span> cur_neighbors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of nt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">#noise in cluster&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append ne &lt;span style="color:#f92672">in&lt;/span> clusters[cur_nt]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> label, clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">find_neighbors&lt;/span>(nt, eps):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> potential_ne &lt;span style="color:#f92672">in&lt;/span> sequence:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append potential_ne &lt;span style="color:#f92672">in&lt;/span> neighbors &lt;span style="color:#66d9ef">if&lt;/span> euclidean distance &lt;span style="color:#f92672">&amp;lt;=&lt;/span> eps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> neighbors
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#functions used in mutclust()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">expand_cluster&lt;/span>(cur_nt, cur_neighbors, min_samples, clusters): &lt;span style="color:#75715e">#expand cluster of cur_nt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eps &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur_deps &lt;span style="color:#f92672">=&lt;/span> deps[cur_nt]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ne &lt;span style="color:#f92672">=&lt;/span> cur_nt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> cur_deps &lt;span style="color:#f92672">&amp;lt;&lt;/span> min_samples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ne &lt;span style="color:#f92672">=&lt;/span> next_ne(ne)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> label of ne &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e">#border&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append ne &lt;span style="color:#f92672">in&lt;/span> clusters[cur_nt]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ne_deps &lt;span style="color:#f92672">=&lt;/span> deps[ne]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cur_deps &lt;span style="color:#f92672">=&lt;/span> diminish_deps(cur_deps, ne_deps, dim_factor) &lt;span style="color:#75715e">#diminish cur_deps by ne_deps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eps[cur_nt] &lt;span style="color:#f92672">=&lt;/span> cur_deps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> label, clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calculate_hscore&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq, ent, ratio &lt;span style="color:#f92672">=&lt;/span> info&lt;span style="color:#f92672">.&lt;/span>freq, info&lt;span style="color:#f92672">.&lt;/span>ent, info&lt;span style="color:#f92672">.&lt;/span>ratio &lt;span style="color:#75715e">#frequency, entropy, ratio are pre-calculated&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hscore &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>log2(ratio &lt;span style="color:#f92672">*&lt;/span> ent &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> hscore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calculate_deps&lt;/span>(hscore):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#params&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#EPS_SCALER = 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deps &lt;span style="color:#f92672">=&lt;/span> ceil(eps_scaler &lt;span style="color:#f92672">*&lt;/span> hscore)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> deps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">select_ccm&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#params&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#MIN_MUTATIONS = 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#CCM_MIN_HSCORE_SUM = 0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#CCM_MIN_HSCORE_AVR = 0.01&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#CCM_MIN_HSCORE = 0.03&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eps_temp &lt;span style="color:#f92672">=&lt;/span> deps[nt]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#calculate statistics within eps_temp of nt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> count of mutation &lt;span style="color:#f92672">&amp;lt;&lt;/span> MIN_MUTATIONS:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> sum of hscore &lt;span style="color:#f92672">&amp;lt;&lt;/span> CCM_MIN_HSCORE_SUM:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> average of hscore &lt;span style="color:#f92672">&amp;lt;&lt;/span> CCM_MIN_HSCORE_AVR:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> min of hscore &lt;span style="color:#f92672">&amp;lt;&lt;/span> CCM_MIN_HSCORE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">next_ne&lt;/span>(ne):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> next nt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">diminish_deps&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#params&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#EPS_SCALER = 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#DIMINISHING_FACTOR = 3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>*</title><link>https://yshghid.github.io/docs/hobby/book/book41/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book41/</guid><description>&lt;h1 id="heading">
 *
 &lt;a class="anchor" href="#heading">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;p>갑자기 튀어나온 나의 솔직한 마음.&lt;/p>
&lt;p>연구실 와서 많이 느낀건데 나는 얼마나 성격이 이상한거지? 싶다. 내딴에는 남들을 불쾌하게 하지 않고 어떻게 생각할까를 엄청 고민해서 말하고 말조심하려고 노력하는데도 평판이 딱히 좋은 편이 아닌거같아서 &amp;hellip; 성격이 얼마나 안좋길래 이렇게 신경을 써도 남들이 불편하게 느끼는 부분이 많은걸까 ㅠㅠ&lt;/p>
&lt;p>어느정도나면 남을 대하는 행위가 검열해야할것이 너무 많은 일이라 피로도가 높아서, 할일이 많거나 기분이 안좋거나 하는 이유로 1) 기분을 좋게하거나 할일을 하기 2) 사람을 대하기 이 두가지를 동시에 하는게 버거운 날이 있고&lt;/p></description></item><item><title>#2 Explainable AI</title><link>https://yshghid.github.io/docs/study/etc/etc2/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/etc/etc2/</guid><description>&lt;h1 id="2-explainable-ai">
 #2 Explainable AI
 &lt;a class="anchor" href="#2-explainable-ai">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;h3 id="1-explainable-ai란">
 1. Explainable AI란?
 &lt;a class="anchor" href="#1-explainable-ai%eb%9e%80">#&lt;/a>
&lt;/h3>
&lt;p>Explainable AI는 인공지능(AI) 또는 머신러닝(ML) 모델이 어떤 방식으로 특정 결과를 도출했는지 사람이 이해할 수 있도록 설명하는 기술과 방법론.&lt;/p>
&lt;h3 id="2-xai-기법-분류">
 2. XAI 기법 분류
 &lt;a class="anchor" href="#2-xai-%ea%b8%b0%eb%b2%95-%eb%b6%84%eb%a5%98">#&lt;/a>
&lt;/h3>
&lt;p>모델 구조&lt;/p>
&lt;ul>
&lt;li>Intrinsic:	모델 자체가 설명 가능한 구조 (예: 의사결정나무, 선형회귀 등)&lt;/li>
&lt;li>Post-hoc:	모델 학습 후 별도로 설명 생성 (예: SHAP, LIME)
대상&lt;/li>
&lt;li>Global:	전체 모델의 작동 원리를 설명&lt;/li>
&lt;li>Local:	특정 샘플의 예측 결과를 설명&lt;/li>
&lt;/ul>
&lt;h3 id="3-주요-post-hoc-설명-기법">
 3. 주요 Post-hoc 설명 기법
 &lt;a class="anchor" href="#3-%ec%a3%bc%ec%9a%94-post-hoc-%ec%84%a4%eb%aa%85-%ea%b8%b0%eb%b2%95">#&lt;/a>
&lt;/h3>
&lt;p>LIME (Local Interpretable Model-Agnostic Explanations): 주변 입력을 랜덤하게 생성하고, 단순 모델(선형 회귀 등)을 학습해 근사&lt;/p></description></item><item><title>#3 Random Forest</title><link>https://yshghid.github.io/docs/study/etc/etc3/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/etc/etc3/</guid><description>&lt;h1 id="3-random-forest">
 #3 Random Forest
 &lt;a class="anchor" href="#3-random-forest">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;h3 id="1-random-forest의-분류와-회귀">
 1. Random Forest의 분류와 회귀
 &lt;a class="anchor" href="#1-random-forest%ec%9d%98-%eb%b6%84%eb%a5%98%ec%99%80-%ed%9a%8c%ea%b7%80">#&lt;/a>
&lt;/h3>
&lt;p>랜덤 포레스트(Random Forest)는&lt;/p>
&lt;ul>
&lt;li>RandomForestClassifier: 분류용&lt;/li>
&lt;li>RandomForestRegressor: 회귀용 이다.&lt;/li>
&lt;/ul>
&lt;p>분류와 회귀의 핵심 차이는&lt;/p>
&lt;ul>
&lt;li>분류는 각 leaf node에 속한 클래스의 비율을 기반으로 확률 예측&lt;/li>
&lt;li>회귀는 leaf node에 있는 target 값들의 평균을 예측값으로 사용&lt;/li>
&lt;/ul>
&lt;p>랜덤 포레스트의 트리 구조(= 리프 분기 방식)는 분류나 회귀나 똑같고&lt;/p>
&lt;ul>
&lt;li>단지 리프 노드에 어떤 데이터 형식이 들어가느냐에 따라
&lt;ul>
&lt;li>분류이면 라벨 비율(확률 분포)&lt;/li>
&lt;li>회귀이면 값의 평균으로 예측을 내놓는다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-트리-기반-모델과-클러스터링의-차이">
 2. 트리 기반 모델과 클러스터링의 차이
 &lt;a class="anchor" href="#2-%ed%8a%b8%eb%a6%ac-%ea%b8%b0%eb%b0%98-%eb%aa%a8%eb%8d%b8%ea%b3%bc-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81%ec%9d%98-%ec%b0%a8%ec%9d%b4">#&lt;/a>
&lt;/h3>
&lt;p>랜덤 포레스트(혹은 결정 트리)의 리프 분기 방식은 &amp;lsquo;거리 기반&amp;rsquo;이 아님&lt;/p></description></item><item><title>byemypie 뮤땅이 폰케이스</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite4/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite4/</guid><description>&lt;h1 id="byemypie-뮤땅이-폰케이스">
 byemypie 뮤땅이 폰케이스
 &lt;a class="anchor" href="#byemypie-%eb%ae%a4%eb%95%85%ec%9d%b4-%ed%8f%b0%ec%bc%80%ec%9d%b4%ec%8a%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/f9c13378-5a75-4508-a5fd-135afeb9e892" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/bf93ed6d-3432-46cd-9210-cb2f4a9b6c62" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/25114c1c-740f-4872-89c6-098428952d4c" alt="image" />&lt;/p>
&lt;p>바이마이파이에서 신상 케이스중에 기여운게 있길래, 꽤괜 하고 보고있었는데 즉시 구매할 정도는 아니었다.&lt;/p>
&lt;p>근데&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/9478ad23-90a7-4b8d-92f9-259d37160086" alt="image" />&lt;/p>
&lt;p>후기샷 보고싶어서 인스타에 뮤땅이 쳤다가&lt;/p>
&lt;p>실물 냥이인 뮤땅이 사진들을 봐버렸고 ㅠㅠ 이제 얘가 너무기여워져버려서 저항없이 구매를 하였다&amp;hellip;ㅎㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/b1eb2694-5edb-4f15-840d-ebb85a3dd180" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a0cb283a-219b-4f4a-ae65-29c1edd56f91" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/91b72278-c6ea-40f7-9212-bb37240ffcff" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b4596fb9-5b1d-44e9-89ec-861eeeeebf04" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/cfde7865-5ba7-4abd-8af1-c4720ed95127" alt="image" />&lt;/p>
&lt;p>너무 기엽고 상세페이지에 이 사진들 넣었으면 요상품 5배는 더 팔렸을거라고 생각한다. ㅡㅡ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/90f5365d-6bed-4c32-92a6-b9d957c44e96" alt="image" />&lt;/p>
&lt;p>에어팟 케이스까진 살생각 없었는데 이것마저 눈독들이고 있다.&lt;/p>
&lt;p>그리고 다른 버전이나 다른상품도 더 나왔으면 좋겠고 갠적으로 맥북 스티커 나오면 진짜 좋을거같다 &amp;hellip; 회색냥이라 실버 맥북에 너무너무 잘어울릴듯.&lt;/p></description></item><item><title>SK AX 면접 준비</title><link>https://yshghid.github.io/docs/study/career/career2/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career2/</guid><description>&lt;h1 id="sk-ax-면접-준비">
 SK AX 면접 준비
 &lt;a class="anchor" href="#sk-ax-%eb%a9%b4%ec%a0%91-%ec%a4%80%eb%b9%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-26&lt;/p>
&lt;hr>
&lt;h3 id="1-sk-면접질문-모음">
 1. SK 면접질문 모음
 &lt;a class="anchor" href="#1-sk-%eb%a9%b4%ec%a0%91%ec%a7%88%eb%ac%b8-%eb%aa%a8%ec%9d%8c">#&lt;/a>
&lt;/h3>
&lt;p>#1 &lt;a href="https://community.linkareer.com/employment_data/2376979">https://community.linkareer.com/employment_data/2376979&lt;/a>&lt;/p>
&lt;p>SK AX 관련해서 관심있게 본 뉴스 있는가?&lt;/p>
&lt;p>스트레스 해소법&lt;/p>
&lt;p>상관의 부당한 업무 지시에 대한 대처&lt;/p>
&lt;p>**야근이나 주말 근무도 할 수 있는가?&lt;/p>
&lt;p>**직무에 지원한 이유?&lt;/p>
&lt;p>지원자께서는 AI 서비스개발 직무는 무엇이라고 생각하십니까?&lt;/p>
&lt;p>지원자의 지금까지 가장 힘들었던 경험은 무엇입니까?&lt;/p>
&lt;p>마지막으로 반드시 하고 싶은 말은 무엇입니까?&lt;/p>
&lt;p>*자소서 각 항목에 대해 꼬리 질문. 물어본 질문에 대한 정답성 발언을 두괄식으로 제시하면서 부연 설명으로 구체적인 본인의 진솔된 일화나 예시를 언급해줘야 면접관들이 정답만이 아닌 진심을 말하는 것으로 인식한다.&lt;/p></description></item><item><title>#1 DBSCAN</title><link>https://yshghid.github.io/docs/study/etc/etc1/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/etc/etc1/</guid><description>&lt;h1 id="1-dbscan">
 #1 DBSCAN
 &lt;a class="anchor" href="#1-dbscan">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-25&lt;/p>
&lt;hr>
&lt;h2 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h2>
&lt;p>DBSCAN은 밀도 기반 클러스터링 알고리즘으로&lt;/p>
&lt;ul>
&lt;li>데이터가 밀집된 영역을 클러스터로 인식하고&lt;/li>
&lt;li>밀도가 낮은 영역은 노이즈(이상치)로 간주하는 방법.&lt;/li>
&lt;/ul>
&lt;p>KMeans와 달리, 군집 수를 미리 정하지 않아도 되며,&lt;/p>
&lt;ul>
&lt;li>비선형 구조나 잡음이 있는 데이터에서 잘 작동한다.&lt;/li>
&lt;/ul>
&lt;h2 id="파라미터와-핵심-용어">
 파라미터와 핵심 용어
 &lt;a class="anchor" href="#%ed%8c%8c%eb%9d%bc%eb%af%b8%ed%84%b0%ec%99%80-%ed%95%b5%ec%8b%ac-%ec%9a%a9%ec%96%b4">#&lt;/a>
&lt;/h2>
&lt;p>주요 파라미터는 2개&lt;/p>
&lt;ul>
&lt;li>eps: 반지름 거리. 한 점에서 eps 거리 내에 있는 점들을 &amp;ldquo;이웃&amp;quot;이라고 판단.&lt;/li>
&lt;li>min_samples: core point로 인정되기 위해 필요한 최소 이웃 수&lt;/li>
&lt;/ul>
&lt;p>핵심 용어는 3개&lt;/p></description></item><item><title>강지영과 저스틴 민의 속마음ㅣ고나리자 EP.66</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite3/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite3/</guid><description>&lt;h1 id="강지영과-저스틴-민의-속마음ㅣ고나리자-ep66">
 강지영과 저스틴 민의 속마음ㅣ고나리자 EP.66
 &lt;a class="anchor" href="#%ea%b0%95%ec%a7%80%ec%98%81%ea%b3%bc-%ec%a0%80%ec%8a%a4%ed%8b%b4-%eb%af%bc%ec%9d%98-%ec%86%8d%eb%a7%88%ec%9d%8c%e3%85%a3%ea%b3%a0%eb%82%98%eb%a6%ac%ec%9e%90-ep66">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-25&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/9d6d5cbb-bc73-48e4-91b9-d99f74c8b2ec" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/bb04eb5c-4484-45f1-a424-924ea268c746" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/15cc0876-2aaf-4c13-baad-9944ab6bf429" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a192f970-0a7e-4690-bb1b-7449763e08b8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/72416079-1db7-4db4-9f10-c8af5b1e06b9" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/6c6b6372-23e0-4f43-93ad-71218daf8bfa" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3b60f6ed-730c-4ee3-8c24-5497057026a6" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1bbe4e38-a3dc-40da-a14f-2e2682a0c366" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f24e33a9-6d3c-479c-8551-bb14899b10e2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3da1be5e-735d-4c27-bbde-fee79b8b2c4c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/2cbf1e57-060a-4d27-aa2e-121952f94924" alt="image" />&lt;/p>
&lt;p>이장면이 좋은포인트: 1) 영어할줄아는 사람만 모여서 연합을 맺고 싶지 않았다는것 2) 강지영이 듣고 바로이해함 3) 영어를 못하는사람들이 자기한테 다가오는게 부담이었을거라고 자연스럽게 생각하는 성품&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7335d426-3c48-4c10-b96b-1d3a0030a615" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4d9ccebd-ac42-471b-8de0-9e5eb9924f1c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e3fa5e20-873d-481d-a3c8-9fed74ab68b3" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/6ee3c74d-1a9a-4906-9277-d5afc69b834a" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5aed34fa-ea6e-45d7-b804-1abee166a977" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/748e81a4-cbe9-4869-9b32-bb5591ae017c" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8217f026-5609-4eb2-8fcb-307cb0f02f5e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/9cdad951-39f4-4abe-9543-02d9988eaa07" alt="image" />&lt;/p>
&lt;p>저런 성품을 가진 사람이 될수없어도 저런 성품인 사람의 편에 서는 사람인것만 유지하자 그를 위해서 능력을 키우자 ㅎㅎ&lt;/p></description></item><item><title>충족감</title><link>https://yshghid.github.io/docs/hobby/book/book40/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book40/</guid><description>&lt;h1 id="충족감">
 충족감
 &lt;a class="anchor" href="#%ec%b6%a9%ec%a1%b1%ea%b0%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-25&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&amp;lsquo;화내지 않는 것&amp;rsquo;을 무기로 사용해 자기 안에 숨어 있는 &amp;lsquo;화&amp;rsquo;를 이기세요.&lt;/p>
&lt;p>&amp;lsquo;긍정적인 마음&amp;rsquo;을 무기로 사용해 자기 안에 숨어 있는 &amp;lsquo;부정적인 마음을 이기세요.&lt;/p>
&lt;p>&amp;lsquo;나누어 주는 것&amp;rsquo;을 무기로 사용해 자기 안에 숨어 있는 &amp;lsquo;쩨쩨함&amp;rsquo;을 이기세요.&lt;/p>
&lt;p>&amp;lsquo;사실만 말하는 것&amp;rsquo;을 무기로 사용해 자기 안에 숨어 있는 &amp;lsquo;거짓말쟁이&amp;rsquo;를 이기세요.&lt;/p>
&lt;p>-법구경 223&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>&amp;lsquo;저 사람보다 뛰어나다&amp;rsquo; 혹은 &amp;lsquo;이전의 나보다 낫다&amp;rsquo;는 말로 누군가와 지금의 자신을 비교하지 마세요. &amp;lsquo;저 사람보다 못하다&amp;rsquo; 혹은 &amp;lsquo;이전의 내게 미치치 못한다&amp;rsquo;는 말로 누군가와 지금의 자신을 비교하지 마세요. &amp;lsquo;저 사람과 같다&amp;rsquo; 혹은 &amp;lsquo;이전의 나와 같다&amp;rsquo;는 말로도 누군가와 지금의 자신을 비교하지 마세요.&lt;/p></description></item><item><title>#5 결과 검증: 계통 결정 돌연변이와 연관성</title><link>https://yshghid.github.io/docs/study/tech/tech35/</link><pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech35/</guid><description>&lt;h1 id="5-결과-검증-계통-결정-돌연변이와-연관성">
 #5 결과 검증: 계통 결정 돌연변이와 연관성
 &lt;a class="anchor" href="#5-%ea%b2%b0%ea%b3%bc-%ea%b2%80%ec%a6%9d-%ea%b3%84%ed%86%b5-%ea%b2%b0%ec%a0%95-%eb%8f%8c%ec%97%b0%eb%b3%80%ec%9d%b4%ec%99%80-%ec%97%b0%ea%b4%80%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-24&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>lineage_info_dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/home/ysh980101/2411/data/mutation_info&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>covid_annotation &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2404/Data/covid_annotation.tsv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/sig_hotspots.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lineage_info &lt;span style="color:#f92672">=&lt;/span> make_lineage_info(lineage_info_dir)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/458f5aa5-f2b0-4ec4-bad0-560f8b889d48" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hotspot_lineage &lt;span style="color:#f92672">=&lt;/span> make_hotspot_lineage(lineage_info, sig_hotspots_path, covid_annotation)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspot_lineage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/2df486b8-2ccb-4b68-a0dc-de452d3cb8a0" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>plot_hotspot_lineage(hotspot_lineage)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/0ecf300b-e844-42f9-910f-943604e5cddf" alt="image" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspot_lineage&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">Supplementary_table_1.csv&amp;#34;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>만든건 저장.&lt;/p></description></item><item><title>#6 알고리즘 성능 평가 - k dist plot</title><link>https://yshghid.github.io/docs/study/tech/tech34/</link><pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech34/</guid><description>&lt;h1 id="6-알고리즘-성능-평가---k-dist-plot">
 #6 알고리즘 성능 평가 - k dist plot
 &lt;a class="anchor" href="#6-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%b1%eb%8a%a5-%ed%8f%89%ea%b0%80---k-dist-plot">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-24&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/mutclust&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>indir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;result/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;result/GISAID_test1/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">GISAID_total.pickle&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;rb&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>resdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">clusters_test1.txt&amp;#34;&lt;/span>, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">sig_hotspots.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-k-dist-plot">
 3. K-dist plot
 &lt;a class="anchor" href="#3-k-dist-plot">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>kdist_plot(Input_df, hotspots, sig_hotspots, k&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech32/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech32/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-check-data">
 2. Check data
 &lt;a class="anchor" href="#2-check-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;res&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span>[d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir) &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>isdir(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(datadir, d))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(pids)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4589
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4589명 환자의 의료 데이터.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>cur_pid &lt;span style="color:#f92672">=&lt;/span> pids[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sev &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/SeverityScore.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lab &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Laboratory_processed.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>med &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Medication.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cur_pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(med)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>74374
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 [&amp;#39;Date&amp;#39;, &amp;#39;NEWS&amp;#39;, &amp;#39;WHO&amp;#39;, &amp;#39;SOFA&amp;#39;, &amp;#39;PBS&amp;#39;, &amp;#39;qPitt&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23 [&amp;#39;Date&amp;#39;, &amp;#39;ALT (U/L)&amp;#39;, &amp;#39;AST (U/L)&amp;#39;, &amp;#39;BUN (mg/dL)&amp;#39;, &amp;#39;Creatinine (mg/dL)&amp;#39;, &amp;#39;D-Dimer (ug/mL )&amp;#39;, &amp;#39;Ferritin (ng/mL)&amp;#39;, &amp;#39;HCO3 (mmol/L)&amp;#39;, &amp;#39;Hemoglobin (g/dL)&amp;#39;, &amp;#39;LDH (U/L)&amp;#39;, &amp;#39;Lymphocytes (%)&amp;#39;, &amp;#39;MDRD eGFR (mL/min/BSA)&amp;#39;, &amp;#39;Neutrophils (%)&amp;#39;, &amp;#39;O2 saturation (%)&amp;#39;, &amp;#39;PCO2 (mmHg)&amp;#39;, &amp;#39;PO2 (mmHg)&amp;#39;, &amp;#39;Platelet count (10^3/uL)&amp;#39;, &amp;#39;Potassium (mmol/L)&amp;#39;, &amp;#39;Sodium (mmol/L)&amp;#39;, &amp;#39;WBC count (10^3/uL)&amp;#39;, &amp;#39;hs-CRP (mg/dL)&amp;#39;, &amp;#39;pH ()&amp;#39;, &amp;#39;total CO2, calculated (mmol/L)&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date antimicrobials antimicrobials_dose antimicrobials_2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 Trizele 500.0mg/2 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 Trizele 500.0mg/3 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 Pospenem 1.0g/1 Pospenem 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 Pospenem 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> antimicrobials_2_dose antimicrobials_3 antimicrobials_3_dose 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2.0mg/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 1.0g/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 500.0mg/2 Vanco Kit 1.0g/1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>환자 &amp;lsquo;74374&amp;rsquo;를 확인해보면&lt;/p></description></item><item><title>#3 모델 구축</title><link>https://yshghid.github.io/docs/study/tech/tech33/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech33/</guid><description>&lt;h1 id="3-모델-구축">
 #3 모델 구축
 &lt;a class="anchor" href="#3-%eb%aa%a8%eb%8d%b8-%ea%b5%ac%ec%b6%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-23&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warnings&lt;span style="color:#f92672">.&lt;/span>filterwarnings(&lt;span style="color:#e6db74">&amp;#34;ignore&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lightning.pytorch &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.callbacks &lt;span style="color:#f92672">import&lt;/span> EarlyStopping, LearningRateMonitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.loggers &lt;span style="color:#f92672">import&lt;/span> TensorBoardLogger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting &lt;span style="color:#f92672">import&lt;/span> Baseline, TemporalFusionTransformer, TimeSeriesDataSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.data &lt;span style="color:#f92672">import&lt;/span> GroupNormalizer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> MAE, SMAPE, PoissonLoss, QuantileLoss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models.temporal_fusion_transformer.tuning &lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optimize_hyperparameters,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_forecasting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_lightning &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Forecasting:&amp;#34;&lt;/span>, pytorch_forecasting&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch:&amp;#34;&lt;/span>, torch&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Lightning:&amp;#34;&lt;/span>, pl&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>PyTorch Forecasting: 0.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch: 1.13.1+cu117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch Lightning: 1.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pytorch 및 관련 패키지 버전.&lt;/p></description></item><item><title>#5 타겟 넘버</title><link>https://yshghid.github.io/docs/study/tech/algo4/</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo4/</guid><description>&lt;h1 id="5-타겟-넘버">
 #5 타겟 넘버
 &lt;a class="anchor" href="#5-%ed%83%80%ea%b2%9f-%eb%84%98%eb%b2%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-22&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.&lt;/p>
&lt;p>-1+1+1+1+1 = 3&lt;/p>
&lt;p>+1-1+1+1+1 = 3&lt;/p>
&lt;p>+1+1-1+1+1 = 3&lt;/p>
&lt;p>+1+1+1-1+1 = 3&lt;/p>
&lt;p>+1+1+1+1-1 = 3&lt;/p>
&lt;p>사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.&lt;/p></description></item><item><title>Peder Elias - When I´m Still Getting Over You</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite2/</link><pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite2/</guid><description>&lt;h1 id="peder-elias---when-im-still-getting-over-you">
 Peder Elias - When I´m Still Getting Over You
 &lt;a class="anchor" href="#peder-elias---when-im-still-getting-over-you">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-21&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=DB2bsf3xkNk">https://www.youtube.com/watch?v=DB2bsf3xkNk&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/175285f3-35fb-4c04-b352-7f4463953bd4" alt="image" />&lt;/p>
&lt;p>한동안 내 컬러링이었던 곡 ㅎㅎ&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>#Lyrics&lt;/p>
&lt;p>I wish that I had stayed inside&lt;/p>
&lt;p>And not got that coffee at 8:05&lt;/p>
&lt;p>&amp;lsquo;Cause if I did, then I wouldn&amp;rsquo;t have seen you&lt;/p>
&lt;p>There with someone, that I&amp;rsquo;ve never known&lt;/p>
&lt;p>And looking and know you look beautiful&lt;/p>
&lt;p>Don&amp;rsquo;t wanna care, but I still do&lt;/p>
&lt;p>… &amp;lsquo;Cause you were my first, you were my last&lt;/p></description></item><item><title>김하린 데블스플랜2 비하인드 | Q&amp;A</title><link>https://yshghid.github.io/docs/hobby/favorite/favorite1/</link><pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/favorite/favorite1/</guid><description>&lt;h1 id="김하린-데블스플랜2-비하인드--qa">
 김하린 데블스플랜2 비하인드 | Q&amp;amp;A
 &lt;a class="anchor" href="#%ea%b9%80%ed%95%98%eb%a6%b0-%eb%8d%b0%eb%b8%94%ec%8a%a4%ed%94%8c%eb%9e%9c2-%eb%b9%84%ed%95%98%ec%9d%b8%eb%93%9c--qa">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-21&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/d00c4995-4e7f-4e9a-9c2e-282b74463baa" alt="image" />&lt;/p>
&lt;p>제가 정말 후회하는 타입이 아니거든요 근데 돌이켜봤을때 이게 내 최선이었나? 생각해보니까 아닌 것 같은거에요 내가 그때 그런 선택을 했으면 달라졌을까 하는 생각들이 (자막: 하는 if문들이) 머릿속에서 떠나질 않아서 새벽내내 울다가 도저히 그냥은 못자겠다 하고 술도 못먹는데 매운닭발 하나 시켜서 레드와인 한병 통째로 들이붓고 기절해서 겨우 잤습니다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/85f2456b-06f9-4298-aa0a-20762bc8fa14" alt="image" />&lt;/p>
&lt;p>그러고 나서도 한동안은 좀 폐인 상태였던 것 같아요 그만큼 아쉬움이 많이 남았던 거죠 이제는 괜찮습니다 시간이 약이긴 하더라고요&lt;/p></description></item><item><title>비오는날의 카페 페이스포포</title><link>https://yshghid.github.io/docs/hobby/daily/daily16/</link><pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily16/</guid><description>&lt;h1 id="비오는날의-카페-페이스포포">
 비오는날의 카페 페이스포포
 &lt;a class="anchor" href="#%eb%b9%84%ec%98%a4%eb%8a%94%eb%82%a0%ec%9d%98-%ec%b9%b4%ed%8e%98-%ed%8e%98%ec%9d%b4%ec%8a%a4%ed%8f%ac%ed%8f%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-21&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/789c9b39-de16-447a-b718-46368224a0ae" alt="image" />&lt;/p>
&lt;p>팍팍한 일상이지만 오랜만에 브런치먹으러 왔다..!&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/371a05d3-dd7d-4b05-908c-22ab97f06ccd" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/6f078e43-d54c-4004-9fad-cc0818ab2b8d" alt="image" />&lt;/p>
&lt;p>오늘 시킨 메뉴는 루꼴라 잠봉뵈르 / 루꼴라 쉬림프 타르틴 / 페스츄리소세지 푀이테 / 플레인 사워도우!!&lt;/p>
&lt;p>여기는 모든메뉴가 맛이 중~상이어서 역시 맛있었다 ㅎㅎ 그래두 젤 마싯었던건 루꼴라 잠봉뵈르(이유: 원래 조아하는 스타일이라서..)였구 엄마아빠는 페스츄리소세지 마싯다고했는데 난그냥 무난했음&lt;/p>
&lt;p>루꼴라 쉬림프 타르틴은 저번에도 시켰던건데 이메뉴는 실패가 없다. ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/abb53ba3-27b3-4740-bb40-485826ceeb38" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/87f0218b-b912-423a-97c0-1d5530e09277" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/178ae3d8-5669-4d25-b0be-9fe3064078ed" alt="image" />&lt;/p>
&lt;p>비오니깐 뭔가 더 이쁜것같은 내부&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0e394953-2c5b-4e7a-a6e7-d7e7f16286f3" alt="image" />&lt;/p></description></item><item><title>#2 중요도 지표 계산</title><link>https://yshghid.github.io/docs/study/tech/tech30/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech30/</guid><description>&lt;h1 id="2-중요도-지표-계산">
 #2 중요도 지표 계산
 &lt;a class="anchor" href="#2-%ec%a4%91%ec%9a%94%eb%8f%84-%ec%a7%80%ed%91%9c-%ea%b3%84%ec%82%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-gisaid-data">
 2. Load GISAID data
 &lt;a class="anchor" href="#2-load-gisaid-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>indir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Input/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Refseq &lt;span style="color:#f92672">=&lt;/span> getNucleotideRefSeq()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GISAID_Freq &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">gisaid_freq_all.csv&amp;#39;&lt;/span>, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GISAID_meta &lt;span style="color:#f92672">=&lt;/span> get_GISAID_meta()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(GISAID_Freq)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> A C G T R Y S W K M B D H V N
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 10612 390 415 785 11 1 3 4 24 2 1 2 0 0 219995
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 287 502 218 12942 3 31 14 4 61 0 1 2 1 0 218179
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 166 461 348 18168 1 12 29 10 15 1 0 1 1 0 213032
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 19398 267 502 972 12 5 1 33 37 6 1 1 0 1 211009
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 24962 281 334 699 6 21 6 17 15 10 5 1 1 1 205886
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... .. .. .. .. .. .. .. .. .. .. ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29899 41707 36 38 100 1 0 2 5 0 3 0 0 1 0 190351
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29900 40483 30 25 99 8 1 0 2 1 4 0 1 0 0 191590
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29901 39258 25 19 22 1 0 0 4 1 1 0 0 0 0 192913
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29902 38015 23 22 19 1 0 0 5 0 1 0 0 0 0 194158
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29903 34729 18 32 99 0 3 0 4 0 3 0 0 1 0 197355
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[29903 rows x 15 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-calculate-h-score">
 3. Calculate H-score
 &lt;a class="anchor" href="#3-calculate-h-score">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calculate_hscore&lt;/span>(Refseq, Freq, N):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df &lt;span style="color:#f92672">=&lt;/span> Freq[[&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;T&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;G&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;C&amp;#39;&lt;/span>]]&lt;span style="color:#f92672">.&lt;/span>copy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i,row &lt;span style="color:#f92672">in&lt;/span> enumerate(Refseq):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_df&lt;span style="color:#f92672">.&lt;/span>iloc[i][row] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">/&lt;/span>row&lt;span style="color:#f92672">.&lt;/span>sum(), axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_df &lt;span style="color:#f92672">=&lt;/span> per_df&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ent_df &lt;span style="color:#f92672">=&lt;/span> per_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: entropy(row, base&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>), axis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ent_df &lt;span style="color:#f92672">=&lt;/span> ent_df&lt;span style="color:#f92672">.&lt;/span>fillna(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">.&lt;/span>sum(), axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ratio_df &lt;span style="color:#f92672">=&lt;/span> freq_df&lt;span style="color:#f92672">.&lt;/span>apply(&lt;span style="color:#66d9ef">lambda&lt;/span> row: row&lt;span style="color:#f92672">.&lt;/span>sum()&lt;span style="color:#f92672">/&lt;/span>N, axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hscore_df &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>log2(ratio_df&lt;span style="color:#f92672">*&lt;/span>ent_df&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>concat([count_df, ratio_df, ent_df, hscore_df], axis&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, keys&lt;span style="color:#f92672">=&lt;/span>[FREQ, PER, ENT, HSCORE])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> Input_df&lt;span style="color:#f92672">.&lt;/span>reset_index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Input_df &lt;span style="color:#f92672">=&lt;/span> Input_df&lt;span style="color:#f92672">.&lt;/span>rename(columns&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">&amp;#39;index&amp;#39;&lt;/span>: POS}) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Input_df
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>N &lt;span style="color:#f92672">=&lt;/span> len(GISAID_meta)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input_df &lt;span style="color:#f92672">=&lt;/span> calculate_hscore(Refseq, GISAID_Freq, N)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(Input_df)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> Position Frequency Percentage Entropy H-score
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 1 1590 0.007088 1.505823 1.047783
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2 1007 0.004489 1.494709 0.740711
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 3 975 0.004347 1.476319 0.715176
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 4 1741 0.007761 1.401635 1.062019
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 5 1314 0.005858 1.462576 0.892773
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29898 29899 174 0.000776 1.408897 0.149631
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29899 29900 154 0.000687 1.295297 0.122905
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29900 29901 66 0.000294 1.575992 0.065393
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29901 29902 64 0.000285 1.580312 0.063624
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>29902 29903 149 0.000664 1.236853 0.113909
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[29903 rows x 5 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-save">
 4. Save
 &lt;a class="anchor" href="#4-save">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Input_df&lt;span style="color:#f92672">.&lt;/span>to_pickle(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>indir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">GISAID_total.pickle&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#3 밀도 기반 클러스터링</title><link>https://yshghid.github.io/docs/study/tech/tech29/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech29/</guid><description>&lt;h1 id="3-밀도-기반-클러스터링">
 #3 밀도 기반 클러스터링
 &lt;a class="anchor" href="#3-%eb%b0%80%eb%8f%84-%ea%b8%b0%eb%b0%98-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-find-ccms">
 2. Find CCMs
 &lt;a class="anchor" href="#2-find-ccms">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>input_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Path(outdir)&lt;span style="color:#f92672">.&lt;/span>mkdir(parents&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, exist_ok&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#f92672">=&lt;/span> set_env(input &lt;span style="color:#f92672">=&lt;/span> input_path, output &lt;span style="color:#f92672">=&lt;/span> outdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input_df &lt;span style="color:#f92672">=&lt;/span> readPickle(input_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>init(Input_df, info)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo, ccms &lt;span style="color:#f92672">=&lt;/span> get_candidate_core_mutations(Input_df, info, tag, i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>--- Configurations ---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Input data: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Input/GISAID_total.pickle&amp;#39; (29903, 5)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Output dir: &amp;#39;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_test1/&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parameters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min Eps=5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Max Eps=1000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min per_sum=0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Eps scaling factor=10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expansion diminishing factor=3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Min cluster length=10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Searching candidate core mutations...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 CCMs found.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>sample_ccm &lt;span style="color:#f92672">=&lt;/span> ccms[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo[sample_ccm]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>{&amp;#39;index&amp;#39;: 11,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Position&amp;#39;: 277,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Frequency&amp;#39;: 86,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Percentage&amp;#39;: 0.00038338430264178534,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;Entropy&amp;#39;: 0.6078847228873923,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score&amp;#39;: 0.03323669788067187,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;length&amp;#39;: 12,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;freq_sum&amp;#39;: 1476,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;freq_avr&amp;#39;: 123.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;per_sum&amp;#39;: 0.0065799445430148274,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;per_avr&amp;#39;: 0.0005483287119179023,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;ent_sum&amp;#39;: 6.254087818941727,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;ent_avr&amp;#39;: 0.5211739849118106,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score_sum&amp;#39;: 0.15877807556629392,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;H-score_avr&amp;#39;: 0.01323150629719116,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;eps_scaler&amp;#39;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;left_distance&amp;#39;: 5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;right_distance&amp;#39;: 5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;l_pos&amp;#39;: 272,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;r_pos&amp;#39;: 282,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;mut_n&amp;#39;: 11}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-perform-clustering">
 3. Perform clustering
 &lt;a class="anchor" href="#3-perform-clustering">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> dynaclust(mutInfo, ccms, info, tag, i)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>Performing dynamic clustering...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1990 clusters found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merging clusters...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Merged clusters: 477
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(hotspots)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> left_position right_position length \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 272 290 19 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 332 347 16 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 358 392 35 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 433 448 16 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 482 495 14 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.. ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>472 29568 29577 10 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>473 29581 29599 19 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>474 29613 29633 21 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>475 29640 29651 12 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>476 29654 29671 18 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mut_positions 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 272,273,274,275,277,278,279,280,281,282,283,28... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 332,334,335,336,337,338,341,343,344,345,346,347 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 358,360,361,362,363,364,365,366,367,368,369,37... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 433,435,436,437,438,439,440,441,442,443,444,44... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 482,483,485,487,488,489,490,491,493,495 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.. ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>472 29568,29570,29571,29572,29573,29574,29575,29577 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>473 29581,29583,29584,29585,29586,29587,29588,2958... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>474 29613,29615,29616,29617,29618,29619,29620,2962... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>475 29640,29641,29643,29645,29647,29648,29649,2965... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>476 29654,29655,29656,29657,29659,29660,29661,2966... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[477 rows x 4 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>#4 결과 검증: 임상 결과와의 연관성</title><link>https://yshghid.github.io/docs/study/tech/tech31/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech31/</guid><description>&lt;h1 id="4-결과-검증-임상-결과와의-연관성">
 #4 결과 검증: 임상 결과와의 연관성
 &lt;a class="anchor" href="#4-%ea%b2%b0%ea%b3%bc-%ea%b2%80%ec%a6%9d-%ec%9e%84%ec%83%81-%ea%b2%b0%ea%b3%bc%ec%99%80%ec%9d%98-%ec%97%b0%ea%b4%80%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust&amp;#34;&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.Utils.utils &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.arg_parser &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Bin.mlib &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-covid19-data">
 2. Load COVID19 data
 &lt;a class="anchor" href="#2-load-covid19-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2407/Mutclust/Testdata/Output/GISAID_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>covid19_dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data3/projects/2020_MUTCLUST/Data/Projects/COVID19/Sequence/Preprocessed/Nucleotide/Mutationinfo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meta_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2506/data/meta.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hotspots &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>resdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">clusters_&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>tag&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.txt&amp;#34;&lt;/span>,sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metaData &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(meta_path, index_col&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutInfo &lt;span style="color:#f92672">=&lt;/span> make_mutInfo_covid19(covid19_dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mutSignature &lt;span style="color:#f92672">=&lt;/span> make_mutSignature(mutInfo, hotspots, metaData)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(mutSignature)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> COV-CCO-001 COV-CCO-002 COV-CCO-003 COV-CCO-004 COV-CCO-006 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c0 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c1 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c2 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c3 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c4 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c472 0 1 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c473 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c474 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c475 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c476 0 0 0 0 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COV-CCO-008 COV-CCO-009 COV-CCO-010 COV-CCO-011 COV-CCO-013 ... \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c0 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c1 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c2 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c3 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c4 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c472 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c473 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c474 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c475 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c476 0 0 0 0 0 ... 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[477 rows x 387 columns]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-select-severity-related-hotspots">
 3. Select severity related hotspots
 &lt;a class="anchor" href="#3-select-severity-related-hotspots">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>sig_hotspots, significance &lt;span style="color:#f92672">=&lt;/span> select_sig_hotspots(mutSignature, metaData, hotspots)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>significance
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span> Hotspot p-value FDR Significant
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 c22 1.882327e-07 4.489349e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 c90 1.158366e-03 2.051443e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 c118 9.750940e-15 1.162800e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 c123 8.587634e-14 6.827169e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 c124 1.051981e-03 2.007179e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 c198 2.827480e-10 1.123923e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 c239 5.739929e-16 2.737946e-13 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7 c258 1.489502e-08 4.301825e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8 c292 6.617715e-07 1.372457e-05 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9 c298 1.205966e-04 2.396858e-03 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10 c309 2.746212e-08 7.277461e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11 c315 7.603734e-08 1.908937e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>12 c319 5.323421e-07 1.154215e-05 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>13 c334 4.989612e-10 1.830804e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>14 c337 8.625002e-12 4.114126e-10 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>15 c350 4.178970e-07 9.492232e-06 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>16 c364 9.750940e-15 1.162800e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>17 c385 4.112387e-13 2.802298e-11 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>18 c390 1.161194e-03 2.051443e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>19 c412 5.946573e-12 3.151684e-10 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>20 c429 3.073511e-09 9.773764e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>21 c431 7.755493e-14 6.827169e-12 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>22 c438 1.929048e-09 6.572544e-08 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23 c442 5.644954e-13 3.365804e-11 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>24 c444 1.362927e-15 3.250582e-13 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>25 c455 1.928137e-03 3.171454e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>26 c460 1.723333e-03 2.935821e-02 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>27 c462 1.533145e-08 4.301825e-07 True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>28 c468 1.169796e-11 5.072662e-10 True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;result/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_hotspots&lt;span style="color:#f92672">.&lt;/span>to_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>outdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">sig_hotspots.csv&amp;#34;&lt;/span>, index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>만든건 저장하기.&lt;/p></description></item><item><title>6월 18-20일</title><link>https://yshghid.github.io/docs/study/luck/luck16/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck16/</guid><description>&lt;h1 id="6월-18-20일">
 6월 18-20일
 &lt;a class="anchor" href="#6%ec%9b%94-18-20%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-20&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/c29a1de5-266d-481c-bcd7-cad35be7c193" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f070f1fa-935d-4d8f-a031-a7770aea8311" alt="image" />&lt;/p>
&lt;p>오늘은먼가또!!!!! 불안이 몰려오는데 그럼 할일을했냐?하면 리비전작업은 가시화된 결과물이 없고 인적성공부를 안했고 코테는 오전에좀공부했지만 많이는못했다. 인성검사공부는 오늘시작했는데 막막하고어렵다. 운동도안갔다. 그럼 할일을안해놨으니 우울한게 당연함!! 심지어 이번주는 잠도 좀 부족했다.&lt;/p>
&lt;p>우울하지 않으려면 아무리 바빠도 인적성/코테 공부를 11시-12시에는 꼭 하자. (오전 집중시간애 리비전을 안하는게 불안하니깐 무리해서 오전에 할필요는없음) 그리고 8시-9시 운동은 꼭 가자.&lt;/p>
&lt;p>생각을넘많이하지말구 주변에 건강하게 의지하면서 할일을 하자&lt;/p></description></item><item><title>#5 Revision</title><link>https://yshghid.github.io/docs/study/tech/tech28/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech28/</guid><description>&lt;h1 id="5-revision">
 #5 Revision
 &lt;a class="anchor" href="#5-revision">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-19&lt;/p>
&lt;hr>
&lt;h3 id="reviewer-1---comment-1">
 Reviewer 1 - Comment 1
 &lt;a class="anchor" href="#reviewer-1---comment-1">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>&amp;ldquo;In the introduction section, the authors note that most computational methods focus on the frequency of mutation occurrences rather than mutation diversity. This point should be more thoroughly discussed, with a clear explanation of the advantages and potential insights offered by analyzing mutation diversity.&amp;rdquo;&lt;/p>
&lt;p>“서론에서 저자들은 대부분의 계산 방법들이 돌연변이 발생 빈도에 집중하고 있으며, 돌연변이 다양성(mutation diversity)을 간과한다고 언급하였습니다. 돌연변이 다양성을 분석하는 것의 장점과 잠재적인 통찰에 대해 보다 명확하게 논의해 주시기 바랍니다.”&lt;/p></description></item><item><title>SK AX 인성검사 준비</title><link>https://yshghid.github.io/docs/study/career/career1/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/career/career1/</guid><description>&lt;h1 id="sk-ax-인성검사-준비">
 SK AX 인성검사 준비
 &lt;a class="anchor" href="#sk-ax-%ec%9d%b8%ec%84%b1%ea%b2%80%ec%82%ac-%ec%a4%80%eb%b9%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-19&lt;/p>
&lt;hr>
&lt;h3 id="1-서류-전형">
 1. 서류 전형
 &lt;a class="anchor" href="#1-%ec%84%9c%eb%a5%98-%ec%a0%84%ed%98%95">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ff50a671-a5bd-43fb-86af-398729df1487" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5b50079b-07ce-40ef-8be4-deb929623c52" alt="image" />&lt;/p>
&lt;p>서류가 적부심사였는지.. 붙어버려서 생애첫 인성검사 준비를 하게되었다&lt;/p>
&lt;h3 id="2-skct-인성검사">
 2. SKCT 인성검사
 &lt;a class="anchor" href="#2-skct-%ec%9d%b8%ec%84%b1%ea%b2%80%ec%82%ac">#&lt;/a>
&lt;/h3>
&lt;p>SK 인재상은 패기, 실행력, 협업, 윤리의식이구&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://92bn.tistory.com/8">이 블로그 글&lt;/a>을 보니깐 솔직하게 하되 인재상에 맞추는것두 어느정도 필요하다는거같아서&lt;/li>
&lt;li>잡플래닛에서 유료 검사랑 이런저런 무료 검사도 해보겟지만
&lt;ul>
&lt;li>일단 챗지피티에 돌려서 예시문제 100개 뽑음.
&lt;ul>
&lt;li>노션에 문제만 붙여넣기 해서 좀 외운담에 실제 인성검사연습을 해볼려고한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://open-trust-407.notion.site/SKCT-215766ec530e808f83bdda093d0bc5b7?source=copy_link">SKCT 인성검사 이론 정리 및 예시 문항&lt;/a>&lt;/p></description></item><item><title>6월 18일</title><link>https://yshghid.github.io/docs/study/luck/luck15/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck15/</guid><description>&lt;h1 id="6월-18일">
 6월 18일
 &lt;a class="anchor" href="#6%ec%9b%94-18%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;p>오늘할일&lt;/p>
&lt;ul>
&lt;li>인적성 1회&lt;/li>
&lt;li>코테 1문제&lt;/li>
&lt;li>리비전작업&lt;/li>
&lt;/ul></description></item><item><title>Related Study #3 Density-based approach</title><link>https://yshghid.github.io/docs/study/tech/tech24/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech24/</guid><description>&lt;h1 id="related-study-3-density-based-approach">
 Related Study #3 Density-based approach
 &lt;a class="anchor" href="#related-study-3-density-based-approach">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-density-based-approach가-잘-적용되는-데이터의-특성">
 1. Density based approach가 잘 적용되는 데이터의 특성
 &lt;a class="anchor" href="#1-density-based-approach%ea%b0%80-%ec%9e%98-%ec%a0%81%ec%9a%a9%eb%90%98%eb%8a%94-%eb%8d%b0%ec%9d%b4%ed%84%b0%ec%9d%98-%ed%8a%b9%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;p>(에 mutation 데이터 끼워맞추면)?&lt;/p>
&lt;ul>
&lt;li>비정규적 분포 (non-uniform): 돌연변이는 일정 위치에 집중되는 hotspot 현상을 보인다. ex) spike 단백질 특정 영역에 몰림.&lt;/li>
&lt;li>클러스터 수 미정: 몇 개의 변이 집단(hotspot)이 존재하는지 사전 지식이 없다.&lt;/li>
&lt;li>군집의 불규칙한 모양과 크기: hotspot의 길이, 모양(밀도, 거리)이 다양하다.&lt;/li>
&lt;li>노이즈 존재: 무작위적 돌연변이, 측정 오류 등으로 인해 의미 없는 변이들(outlier)가 섞여 있다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-왜-density-based-clustering이-적절한가">
 2. 왜 Density-based clustering이 적절한가?
 &lt;a class="anchor" href="#2-%ec%99%9c-density-based-clustering%ec%9d%b4-%ec%a0%81%ec%a0%88%ed%95%9c%ea%b0%80">#&lt;/a>
&lt;/h3>
&lt;p>Density based clustering의 대표적인 알고리즘은 DBSCAN.&lt;/p></description></item><item><title>Related Study #4 Clustering 알고리즘의 parametric test</title><link>https://yshghid.github.io/docs/study/tech/tech25/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech25/</guid><description>&lt;h1 id="related-study-4-clustering-알고리즘의-parametric-test">
 Related Study #4 Clustering 알고리즘의 parametric test
 &lt;a class="anchor" href="#related-study-4-clustering-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98%ec%9d%98-parametric-test">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;p>&lt;mark>Parametric test&lt;/mark>&lt;/p>
&lt;p>정답 label이 없는 unsupervised learning인 clustering은 supervised learning과 달리 정확도, AUC curve 등으로 성능 평가 불가.&lt;/p>
&lt;p>&lt;mark>정량적 평가 지표?&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>Intra-cluster genetic distance (클러스터 내 유전 거리): 작을수록 내부 군집 응집도가 좋음&lt;/li>
&lt;li>Silhouette score, SSE, BIC 등의 지표 사용&lt;/li>
&lt;/ul>
&lt;p>&lt;mark>그 외 방법?&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>방향성이 같은 또는 같지 않아야 하는 비교 feature를 선택하고 비교 ex) 계통학적 구조가 지리적 패턴과 일치함&lt;/li>
&lt;li>t‑SNE 시각화 등 시각적 확인
&lt;ul>
&lt;li>t‑SNE로 축소된 2D scatter plot 위에 DBSCAN으로 얻은 cluster를 색상별로 표시해서&lt;/li>
&lt;li>군집 간의 명확한 경계, 군집 내 응집성이 시각적으로 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech20/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech20/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-data">
 Check data
 &lt;a class="anchor" href="#check-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>raw_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/res/sev_dict_filtered.pkl&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(raw_path, &lt;span style="color:#e6db74">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> raw_data &lt;span style="color:#f92672">=&lt;/span> pickle&lt;span style="color:#f92672">.&lt;/span>load(f)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keys &lt;span style="color:#f92672">=&lt;/span> list(raw_data&lt;span style="color:#f92672">.&lt;/span>keys())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(keys))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(keys[&lt;span style="color:#ae81ff">0&lt;/span>], &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, raw_data[keys[&lt;span style="color:#ae81ff">0&lt;/span>]])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4515
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>74374 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date NEWS med_cnt med_list \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 4 2 Trizele;Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 4 2 Trizele;Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 12 2 Pospenem;Pospenem_2 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 9 3 Pospenem;Meropen;Vanco Kit 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 12 2 Vanco Kit;Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 8 2 Vanco Kit;Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 9 0 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strain 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 [] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 [Enterobacter cloacae ssp cloacae] 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4515명 환자 데이터이고&lt;/p></description></item><item><title>#1 입력 데이터 생성</title><link>https://yshghid.github.io/docs/study/tech/tech27/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech27/</guid><description>&lt;h1 id="1-입력-데이터-생성">
 #1 입력 데이터 생성
 &lt;a class="anchor" href="#1-%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-raw-data">
 2. Load raw data
 &lt;a class="anchor" href="#2-load-raw-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>datadir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/PreprocessedData/TimecourseData&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;res&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pids &lt;span style="color:#f92672">=&lt;/span>[d &lt;span style="color:#66d9ef">for&lt;/span> d &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(datadir) &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>isdir(os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(datadir, d))]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>len(pids)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>4589
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>datadir에 4589명 환자의 의료 데이터가 존재한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>cur_pid &lt;span style="color:#f92672">=&lt;/span> pids[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sev &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/SeverityScore.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lab &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Laboratory_processed.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>med &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_csv(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>datadir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>cur_pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/Medication.csv&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(cur_pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), sev&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist()), lab&lt;span style="color:#f92672">.&lt;/span>columns&lt;span style="color:#f92672">.&lt;/span>tolist())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(med)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>74374
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6, [&amp;#39;Date&amp;#39;, &amp;#39;NEWS&amp;#39;, &amp;#39;WHO&amp;#39;, &amp;#39;SOFA&amp;#39;, &amp;#39;PBS&amp;#39;, &amp;#39;qPitt&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>23, [&amp;#39;Date&amp;#39;, &amp;#39;ALT (U/L)&amp;#39;, &amp;#39;AST (U/L)&amp;#39;, &amp;#39;BUN (mg/dL)&amp;#39;, &amp;#39;Creatinine (mg/dL)&amp;#39;, &amp;#39;D-Dimer (ug/mL )&amp;#39;, &amp;#39;Ferritin (ng/mL)&amp;#39;, &amp;#39;HCO3 (mmol/L)&amp;#39;, &amp;#39;Hemoglobin (g/dL)&amp;#39;, &amp;#39;LDH (U/L)&amp;#39;, &amp;#39;Lymphocytes (%)&amp;#39;, &amp;#39;MDRD eGFR (mL/min/BSA)&amp;#39;, &amp;#39;Neutrophils (%)&amp;#39;, &amp;#39;O2 saturation (%)&amp;#39;, &amp;#39;PCO2 (mmHg)&amp;#39;, &amp;#39;PO2 (mmHg)&amp;#39;, &amp;#39;Platelet count (10^3/uL)&amp;#39;, &amp;#39;Potassium (mmol/L)&amp;#39;, &amp;#39;Sodium (mmol/L)&amp;#39;, &amp;#39;WBC count (10^3/uL)&amp;#39;, &amp;#39;hs-CRP (mg/dL)&amp;#39;, &amp;#39;pH ()&amp;#39;, &amp;#39;total CO2, calculated (mmol/L)&amp;#39;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Date antimicrobials antimicrobials_dose antimicrobials_2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2020-10-30 Trizele 500.0mg/2 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2020-10-31 Trizele 500.0mg/3 Cefotaxime 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 2020-11-01 Pospenem 1.0g/1 Pospenem 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 2020-11-02 Pospenem 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 2020-11-03 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 2020-11-04 Vanco Kit 1.0g/1 Meropen 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 2020-11-05 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> antimicrobials_2_dose antimicrobials_3 antimicrobials_3_dose 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0 2.0mg/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1 2.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 1.0g/2 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 500.0mg/2 Vanco Kit 1.0g/1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 500.0mg/3 NaN NaN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 NaN NaN NaN 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>환자 &amp;lsquo;74374&amp;rsquo;의 데이터를 예시로 확인해보면&lt;/p></description></item><item><title>#2 베스트앨범</title><link>https://yshghid.github.io/docs/study/tech/algo2/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo2/</guid><description>&lt;h1 id="2-베스트앨범">
 #2 베스트앨범
 &lt;a class="anchor" href="#2-%eb%b2%a0%ec%8a%a4%ed%8a%b8%ec%95%a8%eb%b2%94">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h2 id="문제">
 문제
 &lt;a class="anchor" href="#%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h2>
&lt;p>#문제 설명&lt;/p>
&lt;p>스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은 다음과 같습니다.&lt;/p>
&lt;ol>
&lt;li>속한 노래가 많이 재생된 장르를 먼저 수록합니다.&lt;/li>
&lt;li>장르 내에서 많이 재생된 노래를 먼저 수록합니다.&lt;/li>
&lt;li>장르 내에서 재생 횟수가 같은 노래 중에서는 고유 번호가 낮은 노래를 먼저 수록합니다.&lt;/li>
&lt;/ol>
&lt;p>노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열 plays가 주어질 때, 베스트 앨범에 들어갈 노래의 고유 번호를 순서대로 return 하도록 solution 함수를 완성하세요.&lt;/p></description></item><item><title>#2 입력 feature 생성</title><link>https://yshghid.github.io/docs/study/tech/tech21/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech21/</guid><description>&lt;h1 id="2-입력-feature-생성">
 #2 입력 feature 생성
 &lt;a class="anchor" href="#2-%ec%9e%85%eb%a0%a5-feature-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>load_ext autoreload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">%&lt;/span>autoreload &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pickle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> matplotlib.backends.backend_pdf &lt;span style="color:#f92672">import&lt;/span> PdfPages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH/bin&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sc &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(&lt;span style="color:#e6db74">&amp;#39;/data3/projects/2025_Antibiotics/YSH&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-previous">
 2. Previous
 &lt;a class="anchor" href="#2-previous">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>seqdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;data/res_dict&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>seq_list &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>listdir(seqdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(len(seq_list))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>169
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>항생제 169종에 대해서 size 10 sequence를 생성했었는데&lt;/p>
&lt;ul>
&lt;li>모델 입력 feature로 다음을 제외하는대신
&lt;ol>
&lt;li>antibiotics 리스트&lt;/li>
&lt;li>strain 리스트&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>저 2개 feature를 반영하는 새로운 feature를 2개 생성하려고 한다:
&lt;ol>
&lt;li>현재 antibiotics가 현재 strain 환자의 NEWS를 감소시킨 이력이 있는지? (binary: 0/1)&lt;/li>
&lt;li>현재 antibiotics가 NEWS를 감소시키는데 소요 기간은? (범주형: short/mid/long)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-create-feature1">
 3. Create feature1
 &lt;a class="anchor" href="#3-create-feature1">#&lt;/a>
&lt;/h3>
&lt;p>먼저 feature1을 생성하기 위해&lt;/p></description></item><item><title>#3 네트워크</title><link>https://yshghid.github.io/docs/study/tech/algo7/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo7/</guid><description>&lt;h1 id="3-네트워크">
 #3 네트워크
 &lt;a class="anchor" href="#3-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h2 id="문제">
 문제
 &lt;a class="anchor" href="#%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h2>
&lt;p>#문제 설명&lt;/p>
&lt;p>네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.&lt;/p>
&lt;p>컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.&lt;/p></description></item><item><title>#4 모델 학습</title><link>https://yshghid.github.io/docs/study/tech/tech26/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech26/</guid><description>&lt;h1 id="4-모델-학습">
 #4 모델 학습
 &lt;a class="anchor" href="#4-%eb%aa%a8%eb%8d%b8-%ed%95%99%ec%8a%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-18&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warnings&lt;span style="color:#f92672">.&lt;/span>filterwarnings(&lt;span style="color:#e6db74">&amp;#34;ignore&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lightning.pytorch &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.callbacks &lt;span style="color:#f92672">import&lt;/span> EarlyStopping, LearningRateMonitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> lightning.pytorch.loggers &lt;span style="color:#f92672">import&lt;/span> TensorBoardLogger
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting &lt;span style="color:#f92672">import&lt;/span> Baseline, TemporalFusionTransformer, TimeSeriesDataSet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.data &lt;span style="color:#f92672">import&lt;/span> GroupNormalizer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.metrics &lt;span style="color:#f92672">import&lt;/span> MAE, SMAPE, PoissonLoss, QuantileLoss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pytorch_forecasting.models.temporal_fusion_transformer.tuning &lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> optimize_hyperparameters,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-check-version">
 2. Check version
 &lt;a class="anchor" href="#2-check-version">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_forecasting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> torch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pytorch_lightning &lt;span style="color:#66d9ef">as&lt;/span> pl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Forecasting:&amp;#34;&lt;/span>, pytorch_forecasting&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch:&amp;#34;&lt;/span>, torch&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;PyTorch Lightning:&amp;#34;&lt;/span>, pl&lt;span style="color:#f92672">.&lt;/span>__version__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>PyTorch Forecasting: 0.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch: 1.13.1+cu117
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyTorch Lightning: 1.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-load-data">
 3. Load data
 &lt;a class="anchor" href="#3-load-data">#&lt;/a>
&lt;/h3></description></item><item><title>#4 완전범죄</title><link>https://yshghid.github.io/docs/study/tech/algo3/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo3/</guid><description>&lt;h1 id="4-완전범죄">
 #4 완전범죄
 &lt;a class="anchor" href="#4-%ec%99%84%ec%a0%84%eb%b2%94%ec%a3%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-19&lt;/p>
&lt;hr>
&lt;h3 id="1-문제">
 1. 문제
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;p>#문제 설명&lt;/p>
&lt;p>A도둑과 B도둑이 팀을 이루어 모든 물건을 훔치려고 합니다. 단, 각 도둑이 물건을 훔칠 때 남기는 흔적이 누적되면 경찰에 붙잡히기 때문에, 두 도둑 중 누구도 경찰에 붙잡히지 않도록 흔적을 최소화해야 합니다.&lt;/p>
&lt;p>물건을 훔칠 때 조건은 아래와 같습니다.&lt;/p>
&lt;ul>
&lt;li>물건 i를 훔칠 때,
&lt;ul>
&lt;li>A도둑이 훔치면 &lt;code>info[i][0]&lt;/code>개의 A에 대한 흔적을 남깁니다.&lt;/li>
&lt;li>B도둑이 훔치면 &lt;code>info[i][1]&lt;/code>개의 B에 대한 흔적을 남깁니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>각 물건에 대해 A도둑과 B도둑이 남기는 흔적의 개수는 1 이상 3 이하입니다.&lt;/li>
&lt;/ul>
&lt;p>경찰에 붙잡히는 조건은 아래와 같습니다.&lt;/p></description></item><item><title>6월 17일</title><link>https://yshghid.github.io/docs/study/luck/luck13/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck13/</guid><description>&lt;h1 id="6월-17일">
 6월 17일
 &lt;a class="anchor" href="#6%ec%9b%94-17%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;p>오늘할일&lt;/p>
&lt;ul>
&lt;li>인적성 1회&lt;/li>
&lt;li>코테 1문제&lt;/li>
&lt;li>리비전작업&lt;/li>
&lt;li>컴활강의듣기&lt;/li>
&lt;/ul>
&lt;h3 id="1-인적성">
 1. 인적성
 &lt;a class="anchor" href="#1-%ec%9d%b8%ec%a0%81%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;p>풀이문항&lt;/p>
&lt;ul>
&lt;li>언어 - 4/4, 3/4 추리 - 5/5, 4/5 추리 - 5/5, 5/5 공간지각 - 1/4, 1/1&lt;/li>
&lt;/ul>
&lt;p>총평&lt;/p>
&lt;ul>
&lt;li>오늘 kt 모고를 풀었는데 공간지각빼고는 풀만햇다 공간지각은 규칙찾긴햇는데 넘늦게찾음&amp;hellip; 담에다시풀어보기.&lt;/li>
&lt;/ul>
&lt;h3 id="2-코테">
 2. 코테
 &lt;a class="anchor" href="#2-%ec%bd%94%ed%85%8c">#&lt;/a>
&lt;/h3>
&lt;p>문제: 연결 요소의 개수 구하기 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/43162">https://school.programmers.co.kr/learn/courses/30/lessons/43162&lt;/a>&lt;/p>
&lt;p>정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(n, computers):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#66d9ef">False&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">dfs&lt;/span>(node):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> visited[node] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> next_node &lt;span style="color:#f92672">in&lt;/span> range(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> computers[node][next_node] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#f92672">not&lt;/span> visited[next_node]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(next_node)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network_count &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> visited[i]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network_count &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> network_count
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>정답풀이&lt;/p></description></item><item><title>Project 2: Shap based RF model</title><link>https://yshghid.github.io/docs/study/tech/tech18/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech18/</guid><description>&lt;h1 id="project-2-shap-based-rf-model">
 Project 2: Shap based RF model
 &lt;a class="anchor" href="#project-2-shap-based-rf-model">#&lt;/a>
&lt;/h1>
&lt;h2 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h2>
&lt;h2 id="연구">
 연구
 &lt;a class="anchor" href="#%ec%97%b0%ea%b5%ac">#&lt;/a>
&lt;/h2>
&lt;p>#0 연구 설계&lt;/p></description></item><item><title>Project 3: Antibiotics TFT model</title><link>https://yshghid.github.io/docs/study/tech/tech19/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech19/</guid><description>&lt;h1 id="project-3-antibiotics-tft-model">
 Project 3: Antibiotics TFT model
 &lt;a class="anchor" href="#project-3-antibiotics-tft-model">#&lt;/a>
&lt;/h1>
&lt;h2 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h2>
&lt;h2 id="연구">
 연구
 &lt;a class="anchor" href="#%ec%97%b0%ea%b5%ac">#&lt;/a>
&lt;/h2>
&lt;p>#0 연구 설계&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech32/">#1 입력 데이터 생성&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech21/">#2 입력 feature 생성&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech33/">#3 모델 구축&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="heading">
 🗒️
 &lt;a class="anchor" href="#heading">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech14/">#TFT 연구 방향&lt;/a>&lt;/p></description></item><item><title>Related Study #1 샤넌 엔트로피</title><link>https://yshghid.github.io/docs/study/tech/tech22/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech22/</guid><description>&lt;h1 id="related-study-1-샤넌-엔트로피">
 Related Study #1 샤넌 엔트로피
 &lt;a class="anchor" href="#related-study-1-%ec%83%a4%eb%84%8c-%ec%97%94%ed%8a%b8%eb%a1%9c%ed%94%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>샤넌 엔트로피?&lt;mark>&lt;/p>
&lt;ul>
&lt;li>단백질 서열 상 특정 위치에 다양한 아미노산이 얼마나 골고루 존재하는지를 나타내는 지표&lt;/li>
&lt;li>어떤 위치에 여러 아미노산이 비슷한 비율로 존재한다면 엔트로피가 높고, 하나의 아미노산이 압도적으로 우세하다면 엔트로피가 낮다.&lt;/li>
&lt;/ul>
&lt;p>&lt;mark>돌연변이 데이터에서 샤넌 엔트로피&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>전통적인 샤논 엔트로피에 대한 해석은 논코딩 영역의 식별.&lt;/p>
&lt;ul>
&lt;li>염기의 돌연변이에 따른 아미노산의 결실 및 변동은 개체에 대부분은 부정적인 영향을 줌으로써 돌연변이를 가진 개체가 태어날 수 없게 할 확률이 높기 때문.&lt;/li>
&lt;li>하지만 일부 돌연변이는 개체의 발생에 영향을 주지 않고&lt;/li>
&lt;li>극히 일부는 &amp;lsquo;살아남는 데 그치지 않고&amp;rsquo; 각기 다양한 방식으로 개체의 생존력을 높임으로써 &amp;lsquo;진화&amp;rsquo;의 원인이 되기도 한다. [1]&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이에 샤넌 엔트로피가 높은 위치 즉 &amp;lsquo;살아남은 염기 다양성&amp;rsquo;에 대한 분석은 흥미로운 결과를 낼 수 있다.&lt;/p></description></item><item><title>Related Study #2 Cluster detection algorithm</title><link>https://yshghid.github.io/docs/study/tech/tech23/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech23/</guid><description>&lt;h1 id="related-study-2-cluster-detection-algorithm">
 Related Study #2 Cluster detection algorithm
 &lt;a class="anchor" href="#related-study-2-cluster-detection-algorithm">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-17&lt;/p>
&lt;hr>
&lt;p>돌연변이는 무작위로 발생하지만 실제 분포를 확인해보면 그렇지 않다.&lt;/p>
&lt;ul>
&lt;li>엄연히 군집을 형성하고 있으며&lt;/li>
&lt;li>이는 해당 돌연변이의 &amp;lsquo;생존&amp;rsquo;에 관여한 외부 요인의 존재를 보여준다.&lt;/li>
&lt;/ul>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;p>논문 &amp;ldquo;Computational methods for detecting cancer hotspots&amp;rdquo;&lt;/p>
&lt;ul>
&lt;li>
&lt;p>암에서 반복적으로 관찰되는 돌연변이 즉 핫스팟(hotspot)을 식별하기 위한 계산적 방법 40여개에 대한 리뷰 논문.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>암에서 Hotspot mutation은 여러 환자에서 동일한 위치에 반복적으로 나타나는 돌연변이로써 우연히 발생할 가능성이 낮기 때문에 기능적 역할을 할 가능성이 높다고 간주됨에 따라 무의미한 hotspot을 거르고 중요한 hotspot 식별을 위한 여러 알고리즘이 고안되었다. [1]&lt;/p></description></item><item><title>밀도 기반 클러스터링 연구</title><link>https://yshghid.github.io/docs/study/tech/tech17/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech17/</guid><description>&lt;h1 id="밀도-기반-클러스터링-연구">
 밀도 기반 클러스터링 연구
 &lt;a class="anchor" href="#%eb%b0%80%eb%8f%84-%ea%b8%b0%eb%b0%98-%ed%81%b4%eb%9f%ac%ec%8a%a4%ed%84%b0%eb%a7%81-%ec%97%b0%ea%b5%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech22/">#1 Entropy 기반 mutation 분석&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech23/">#2 Mutation hotspot 발굴 알고리즘&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech24/">#3 Density based clustering 알고리즘 - DBSCAN&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech25/">#4 Clustering 알고리즘의 parametric test&lt;/a>&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h2 id="연구">
 연구
 &lt;a class="anchor" href="#%ec%97%b0%ea%b5%ac">#&lt;/a>
&lt;/h2>
&lt;p>#0 연구 설계&lt;/p>
&lt;p>#1 GISAID 데이터베이스 - sequence 다운로드&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech30/">#2 중요도 지표 계산&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech29/">#3 밀도 기반 클러스터링&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech36/">﹂슈도코드&lt;/a>&lt;/p>
&lt;p>#4 결과 검증&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech31/">﹂임상 결과와의 연관성&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech35/">﹂계통 결정 돌연변이와 연관성&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/study/tech/tech37/">﹂HLA 결합력 변화 비교&lt;/a>&lt;/p>
&lt;p>#5 알고리즘 성능 평가&lt;/p></description></item><item><title>#1 완주하지 못한 선수</title><link>https://yshghid.github.io/docs/study/tech/algo1/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/algo1/</guid><description>&lt;h1 id="1-완주하지-못한-선수">
 #1 완주하지 못한 선수
 &lt;a class="anchor" href="#1-%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-16&lt;/p>
&lt;hr>
&lt;p>#문제 설명&lt;/p>
&lt;p>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.&lt;/p>
&lt;p>마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.&lt;/p>
&lt;p>#제한사항&lt;/p>
&lt;ul>
&lt;li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.&lt;/li>
&lt;li>completion의 길이는 participant의 길이보다 1 작습니다.&lt;/li>
&lt;li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.&lt;/li>
&lt;li>참가자 중에는 동명이인이 있을 수 있습니다.&lt;/li>
&lt;/ul>
&lt;p>#입출력 예&lt;/p></description></item><item><title>6월 16일</title><link>https://yshghid.github.io/docs/study/luck/luck12/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck12/</guid><description>&lt;h1 id="6월-16일">
 6월 16일
 &lt;a class="anchor" href="#6%ec%9b%94-16%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-16&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>오늘할일&lt;/p>
&lt;ul>
&lt;li>인적성 1회&lt;/li>
&lt;li>코테 1문제&lt;/li>
&lt;li>리비전작업&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>#인적성&lt;/p>
&lt;p>##풀이문항&lt;/p>
&lt;p>언어 - 14/15, 12/14 수리 - 11/15, 5/11 추리 - 14/15, 10/14 공간지각 - 6/10, 3/6&lt;/p>
&lt;p>##총평&lt;/p>
&lt;p>첫날보단 익숙해진듯.. 수리 넘급하게풀지말자&lt;/p>
&lt;p>#코테&lt;/p>
&lt;p>문제: 지게차와 크레인 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/388353">https://school.programmers.co.kr/learn/courses/30/lessons/388353&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>storage = [&amp;#34;AZWQY&amp;#34;, &amp;#34;CAABX&amp;#34;, &amp;#34;BBDDA&amp;#34;, &amp;#34;ACACA&amp;#34;]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>requests = [&amp;#34;A&amp;#34;, &amp;#34;BB&amp;#34;, &amp;#34;A&amp;#34;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result = 11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##풀이&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>myarray = [[False, False, False, False, False],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [False, False, False, False, False],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [False, False, False, False, False],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [False, False, False, False, False]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myarray = [[True, True, True, True, True],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [True, False, False, False, True],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [True, False, False, False, True],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [True, True, True, True, True]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storage_array = [A Z W Q Y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> C A A B X
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> B B D D A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A C A C A]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rows = 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>columns = 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>left = rows*columns = 20
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>오늘한일&lt;/p></description></item><item><title>취준기록</title><link>https://yshghid.github.io/docs/study/luck/luck14/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck14/</guid><description>&lt;h1 id="취준기록">
 취준기록
 &lt;a class="anchor" href="#%ec%b7%a8%ec%a4%80%ea%b8%b0%eb%a1%9d">#&lt;/a>
&lt;/h1>
&lt;p>&lt;em>06-20&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck16/">6월 18-20일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-17&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck13/">6월 17일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-16&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck12/">6월 16일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-15&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck10/">6월 15일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-14&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck8/">6월 14일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-11&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck7/">6월 11일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck6/">6월 10일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck5/">6월 9일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-08&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck4/">6월 8일 (+스트레스 받을 이유가 없는이유)&lt;/a>&lt;/p>
&lt;p>&lt;em>06-07&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck3/">6월 7일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-06&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck2/">6월 6일&lt;/a>&lt;/p>
&lt;p>&lt;em>06-05&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/luck/luck1/">6월 5일 (특이점:외부에쫌많이 흔들림)&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/d8feb9c9-67ff-4bb1-ab95-2f0c7ebdcf48" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d86060b2-d61f-48e5-9e7a-010c89e0c79b" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5131516f-9435-4756-a45f-9e2fee78e543" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4d3ef428-0d1f-489f-bcf0-9ebfd9907601" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/73b3b6f8-bcb4-411b-a12e-8c3ea7d42db2" alt="image" />&lt;/p></description></item><item><title>6월 15일</title><link>https://yshghid.github.io/docs/study/luck/luck10/</link><pubDate>Sun, 15 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck10/</guid><description>&lt;h1 id="6월-15일">
 6월 15일
 &lt;a class="anchor" href="#6%ec%9b%94-15%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-15&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>오늘할일&lt;/p>
&lt;ul>
&lt;li>인적성 1회 - 언어: p.66-80 / 수리: p.153-166 / 추리: p.234-241 / 공간지각: p.322-329&lt;/li>
&lt;li>코테 1문제&lt;/li>
&lt;li>리비전작업&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>#인적성&lt;/p>
&lt;p>##풀이문항&lt;/p>
&lt;p>언어 - 15/15, 12/15&lt;/p>
&lt;p>수리 - 7/15, 3/7&lt;/p>
&lt;p>추리 - 12/15, 8/12&lt;/p>
&lt;p>공간지각 - 6/10, 3/6&lt;/p>
&lt;p>##간단리뷰&lt;/p>
&lt;p>언어 - 11번: 기반식 고인돌이랑 개석식 고인돌 비교해야대는데 탁자식이랑 기반식을 비교하는 실수를함 / 16번: 근거를 안찾고 느낌으로 배열했는데 다시읽어보니까 &amp;ldquo;여러 학자&amp;quot;를 받는단어가없으니 (가)가 1번이 안됨 근데 빨리읽어서 그거까지 안봣다 / 20번: (나)랑 (라)는좀 헷갈릴만한듯 다시풀기&lt;/p></description></item><item><title>원서정리</title><link>https://yshghid.github.io/docs/study/luck/luck11/</link><pubDate>Sun, 15 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck11/</guid><description>&lt;h1 id="원서정리">
 원서정리
 &lt;a class="anchor" href="#%ec%9b%90%ec%84%9c%ec%a0%95%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>4.20 삼양라운드스퀘어&lt;/p>
&lt;p>﹂직무: OMICS AI Engineer (연구원)&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>4.21 한국산업기술기획평가원&lt;/p>
&lt;p>﹂직무: 일반직 &amp;gt; R&amp;amp;D 기획평가 &amp;gt; 바이오생명&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>5.20 네이버클라우드&lt;/p>
&lt;p>﹂직무: 환자향 진료기록 생성 모델 개발 (체험형 인턴)&lt;/p>
&lt;p>﹂원서확인 &lt;a href="https://recruit.navercorp.com/my/aplcnt.do#none">https://recruit.navercorp.com/my/aplcnt.do#none&lt;/a>&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;p>6.11 SK AX&lt;/p>
&lt;p>﹂직무: 채용연계형 AI 서비스 개발 과정 (채용연계형 인턴)&lt;/p>
&lt;p>﹂정보 &lt;a href="http://linkareer.com/activity/245743">http://linkareer.com/activity/245743&lt;/a>&lt;/p>
&lt;p>﹂전형: 지원접수 &amp;gt; 서류 검토 &amp;gt; SKCT(인성검사) 응시 및 AI 면접 &amp;gt; 면접 &amp;gt; 결과 안내&lt;/p>
&lt;p>﹂&lt;a href="https://claremont.tistory.com/entry/SKALA-1%EA%B8%B0-SK-CC-%EC%B1%84%EC%9A%A9%EC%97%B0%EA%B3%84%ED%98%95-AI-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B0%9C%EB%B0%9C-%EA%B3%BC%EC%A0%95-%ED%95%A9%EA%B2%A9-%ED%9B%84%EA%B8%B0?utm_source=chatgpt.com#google_vignette">SKALA 1기 후기&lt;/a> / &lt;a href="https://92bn.tistory.com/8">SK 그룹 인적성 SKCT TIP&lt;/a>&lt;/p></description></item><item><title>6월 14일</title><link>https://yshghid.github.io/docs/study/luck/luck8/</link><pubDate>Sat, 14 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck8/</guid><description>&lt;h1 id="6월-14일">
 6월 14일
 &lt;a class="anchor" href="#6%ec%9b%94-14%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-14&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>오늘한일&lt;/p>
&lt;ul>
&lt;li>코테 공책 정리&lt;/li>
&lt;li>SK AX 원서&lt;/li>
&lt;li>운동&lt;/li>
&lt;li>코테 3개&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>#코테&lt;/p>
&lt;p>문제: 같은 숫자는 싫어 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/12906">https://school.programmers.co.kr/learn/courses/30/lessons/12906&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>arr = [1,1,3,3,0,1,1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>answer = [1,3,0,1]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(arr):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> [arr[&lt;span style="color:#ae81ff">0&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> arr:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> i &lt;span style="color:#f92672">!=&lt;/span> answer[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer&lt;span style="color:#f92672">.&lt;/span>append(i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>문제: 기능개발 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42586">https://school.programmers.co.kr/learn/courses/30/lessons/42586&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>progresses = [95, 90, 99, 99, 80, 99]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speeds = [1, 1, 1, 1, 1, 1]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>return = [1, 3, 2]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>n=1 -&amp;gt; [96, 91, 100, 100, 81, 100]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n=5 -&amp;gt; [100, 95, 100, 100, 85, 100] -&amp;gt; 배포 -&amp;gt; [100, 95, 100, 100, 85, 100].pop(0) -&amp;gt; [95, 100, 100, 85, 100]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n=10 -&amp;gt; [100, 100, 100, 90, 100] -&amp;gt; 배포 -&amp;gt; [90, 100]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n=20 -&amp;gt; [100, 100] -&amp;gt; 배포 -&amp;gt; []
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(progresses, speeds):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(progresses)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses[i] &lt;span style="color:#f92672">+=&lt;/span> speeds[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses &lt;span style="color:#f92672">and&lt;/span> progresses[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speeds&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> count &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer&lt;span style="color:#f92672">.&lt;/span>append(count)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>문제: 올바른 괄호 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/12909">https://school.programmers.co.kr/learn/courses/30/lessons/12909&lt;/a>&lt;/p></description></item><item><title>시험일정정리</title><link>https://yshghid.github.io/docs/study/luck/luck9/</link><pubDate>Sat, 14 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck9/</guid><description>&lt;h1 id="시험정리">
 시험정리
 &lt;a class="anchor" href="#%ec%8b%9c%ed%97%98%ec%a0%95%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>6.21(토) 컴퓨터활용능력&lt;/p>
&lt;ul>
&lt;li>접수내역 확인 &lt;a href="https://license.korcham.net/mp/jubsuList.do">https://license.korcham.net/mp/jubsuList.do&lt;/a>&lt;/li>
&lt;li>해야하는것: 접수증 출력, 수험표 출력&lt;/li>
&lt;/ul>
&lt;p>6.28(토) AICE&lt;/p>
&lt;ul>
&lt;li>신청내역 확인 &lt;a href="https://aice.study/mypage/receipt">https://aice.study/mypage/receipt&lt;/a>&lt;/li>
&lt;li>16:00-17:30 / 온라인 / 해야하는것: 사전점검&lt;/li>
&lt;/ul>
&lt;p>7.19(토) SAS&lt;/p>
&lt;ul>
&lt;li>응시환경 설정 &lt;a href="https://wsr.pearsonvue.com/testtaker/checkout/OrderSummaryPage/SAS?conversationId=1496932">https://wsr.pearsonvue.com/testtaker/checkout/OrderSummaryPage/SAS?conversationId=1496932&lt;/a>&lt;/li>
&lt;li>9:30-12:00 / 온라인 / 신분증 지참&lt;/li>
&lt;/ul>
&lt;p>8.8(토) SQLD&lt;/p>
&lt;ul>
&lt;li>신청 7.21&lt;/li>
&lt;/ul></description></item><item><title>6월 11일</title><link>https://yshghid.github.io/docs/study/luck/luck7/</link><pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck7/</guid><description>&lt;h1 id="6월-11일">
 6월 11일
 &lt;a class="anchor" href="#6%ec%9b%94-11%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-11&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>오늘 할일&lt;/p>
&lt;ul>
&lt;li>미팅 ppt 만들기&lt;/li>
&lt;li>epitope 자료보내기&lt;/li>
&lt;li>4:00에 미팅하기&lt;/li>
&lt;li>컴활공부 멀로할지 찾기 (21일 시험..)&lt;/li>
&lt;/ul>&lt;/blockquote></description></item><item><title>6월 10일</title><link>https://yshghid.github.io/docs/study/luck/luck6/</link><pubDate>Tue, 10 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck6/</guid><description>&lt;h1 id="6월-10일">
 6월 10일
 &lt;a class="anchor" href="#6%ec%9b%94-10%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-10&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>오늘 한일&lt;/p>
&lt;ul>
&lt;li>내일 미팅 ppt 만들기&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;blockquote>
&lt;p>오늘은 어제 운동을 안가서그런지 몸도부은거같구 쳐지는날이었당 저녁에 운동가긴했는데 하기싫어서 15분하고 도망나옴. ㅋㅋ&lt;/p>&lt;/blockquote></description></item><item><title>6월 9일</title><link>https://yshghid.github.io/docs/study/luck/luck5/</link><pubDate>Mon, 09 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck5/</guid><description>&lt;h1 id="6월-9일">
 6월 9일
 &lt;a class="anchor" href="#6%ec%9b%94-9%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-09&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>5:45-6:15 코테&lt;/p>
&lt;p>6:15-6:45 SAS, AICA 시험 확인&lt;/p>&lt;/blockquote>
&lt;p>#코딩테스트&lt;/p>
&lt;p>문제: 가장 큰 수 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42746">https://school.programmers.co.kr/learn/courses/30/lessons/42746&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>numbers = [3, 30, 34, 5, 9]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>return = &amp;#39;9534330&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>numbers.sort() -&amp;gt; [3, 5, 9, 30, 34]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>numbers = [str(i] for i in numbers] -&amp;gt; numbers.sort() = [3, 30, 34, 5, 9] -&amp;gt; 원하는 모양 = [30, 3, 34, 5, 9]인데 길이가 3자리 이하임을 이용하기.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>numbers = [i*3 for i in numbers -&amp;gt; [333, 555, 999, 303030, 343434]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>numbers.sort() = [303030, 333, 343434, 555, 999]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>answer = 9534330
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(numbers):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> numbers &lt;span style="color:#f92672">=&lt;/span> list(map(str, numbers))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> numbers&lt;span style="color:#f92672">.&lt;/span>sort(key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> x: x&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>, reverse&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> str(int(&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(numbers)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>문제: H-index &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42747">https://school.programmers.co.kr/learn/courses/30/lessons/42747&lt;/a>&lt;/p></description></item><item><title>6월 8일 (+스트레스 받을 이유가 없는이유)</title><link>https://yshghid.github.io/docs/study/luck/luck4/</link><pubDate>Sun, 08 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck4/</guid><description>&lt;h1 id="6월-8일-스트레스-받을-이유가-없는이유">
 6월 8일 (+스트레스 받을 이유가 없는이유)
 &lt;a class="anchor" href="#6%ec%9b%94-8%ec%9d%bc-%ec%8a%a4%ed%8a%b8%eb%a0%88%ec%8a%a4-%eb%b0%9b%ec%9d%84-%ec%9d%b4%ec%9c%a0%ea%b0%80-%ec%97%86%eb%8a%94%ec%9d%b4%ec%9c%a0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-08&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>10:10-10:40 코테&lt;/p>
&lt;p>10:40-11:00 공기업 서칭&lt;/p>&lt;/blockquote>
&lt;p>#코테&lt;/p>
&lt;p>문제: 베스트앨범 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42579">https://school.programmers.co.kr/learn/courses/30/lessons/42579&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>genres = [&amp;#34;classic&amp;#34;, &amp;#34;pop&amp;#34;, &amp;#34;classic&amp;#34;, &amp;#34;classic&amp;#34;, &amp;#34;pop&amp;#34;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plays = [500, 600, 150, 800, 2500]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>return = [4, 1, 3, 0]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(genres, plays):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_total &lt;span style="color:#f92672">=&lt;/span> {} &lt;span style="color:#75715e"># 장르별 총 재생 수&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_songs &lt;span style="color:#f92672">=&lt;/span> {} &lt;span style="color:#75715e"># 장르별 (고유 번호, 재생 수) 리스트&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(genres)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre &lt;span style="color:#f92672">=&lt;/span> genres[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> play &lt;span style="color:#f92672">=&lt;/span> plays[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 1. 총 재생 수 누적&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> genre &lt;span style="color:#f92672">in&lt;/span> genre_total:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_total[genre] &lt;span style="color:#f92672">+=&lt;/span> play
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_total[genre] &lt;span style="color:#f92672">=&lt;/span> play
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 2. 장르별 노래 정보 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> genre &lt;span style="color:#f92672">in&lt;/span> genre_songs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_songs[genre]&lt;span style="color:#f92672">.&lt;/span>append((play, i))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> genre_songs[genre] &lt;span style="color:#f92672">=&lt;/span> [(play, i)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 3. 장르를 총 재생 수 기준으로 정렬&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sorted_genres &lt;span style="color:#f92672">=&lt;/span> sorted(genre_total&lt;span style="color:#f92672">.&lt;/span>items(), key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> x: x[&lt;span style="color:#ae81ff">1&lt;/span>], reverse&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> genre, _ &lt;span style="color:#f92672">in&lt;/span> sorted_genres:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 4. 각 장르 내에서 노래를 재생 수 기준 내림차순, 고유번호 오름차순 정렬&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> songs &lt;span style="color:#f92672">=&lt;/span> sorted(genre_songs[genre], key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> x: (&lt;span style="color:#f92672">-&lt;/span>x[&lt;span style="color:#ae81ff">0&lt;/span>], x[&lt;span style="color:#ae81ff">1&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 5. 최대 두 개까지 수록&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> song &lt;span style="color:#f92672">in&lt;/span> songs[:&lt;span style="color:#ae81ff">2&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#f92672">.&lt;/span>append(song[&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##개념&lt;/p></description></item><item><title>여름경주🍡🌿</title><link>https://yshghid.github.io/docs/hobby/daily/daily15/</link><pubDate>Sun, 08 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily15/</guid><description>&lt;h1 id="여름경주">
 여름경주🍡🌿
 &lt;a class="anchor" href="#%ec%97%ac%eb%a6%84%ea%b2%bd%ec%a3%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-08&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e5071568-8852-4d99-b07f-585fda3992c8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/113b32aa-027a-4b17-b024-865d211818d4" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/dfa99727-330e-4ad4-bd03-aa1316194342" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/74b64da7-20d8-495f-a46d-b999b71aac48" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4093d0f8-e4ee-4168-920b-23ea2664324a" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4dfd6e86-1dee-477b-b8b2-34eb89fdaa00" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/fcb6098c-a3e7-4f0e-be04-e9a2460b3636" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/20118ad2-e151-4ddb-980f-7064d99f60d9" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/aef92c58-1abe-45af-bb9f-6f85a65e3173" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/255ddd23-7ac1-47d9-bb4c-903b3120242b" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a952e658-1b17-4d68-9cce-e175117f656c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/16790211-841d-46de-8610-7f6d9443e5d2" alt="image" />&lt;/p>
&lt;p>주말이순삭됐지만 재밌었다 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/b134d72e-ca0f-436c-914f-7d684cef0e6e" alt="image" />&lt;/p>
&lt;p>행운/대박/합격 이런것만 보면 저항없이 사는 사람 ㅠ&lt;/p></description></item><item><title>6월 7일</title><link>https://yshghid.github.io/docs/study/luck/luck3/</link><pubDate>Sat, 07 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck3/</guid><description>&lt;h1 id="6월-7일">
 6월 7일
 &lt;a class="anchor" href="#6%ec%9b%94-7%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-07&lt;/p>
&lt;hr>
&lt;p>#백신연구 진행상황&lt;/p>
&lt;p>##1&lt;/p>
&lt;p>목적이 개인의 면역 환경을 대표하고 면역 반응을 예측하는 feature를 찾는 것이라고 할때.&lt;/p>
&lt;ul>
&lt;li>개인의 면역 환경을 대표하는 feature를 찾는 것은 쉽다. 단일 시점 clustering을 하고 군집의 feature를 찾으면 됨.&lt;/li>
&lt;li>다만 이중에 &amp;lsquo;면역 반응&amp;rsquo;을 예측하는데 유용한 feature를 골라내는게 어렵다.
&lt;ul>
&lt;li>&amp;lsquo;면역 반응&amp;rsquo;을 type1 2 3등으로 정의하는게 필요하고&lt;/li>
&lt;li>그 반응을 대표하는 feature를 찾는게 필요하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>목적이 &amp;lsquo;면역 반응&amp;rsquo;이 비슷한 환자를 군집화하는것일때.&lt;/p>
&lt;ul>
&lt;li>&amp;lsquo;면역 반응&amp;rsquo;을 유전자 발현량 패턴이라고 정의하면&lt;/li>
&lt;li>(단일 시점 clustering과) spherical kmeans는 편향이 최소화된 비지도학습 방법이지만 feature 선택이 어렵다.&lt;/li>
&lt;/ul>
&lt;p>어떤 feature가 비슷해야 면역 반응이 비슷한것인가?&lt;/p></description></item><item><title>6월 6일</title><link>https://yshghid.github.io/docs/study/luck/luck2/</link><pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck2/</guid><description>&lt;h1 id="6월-6일">
 6월 6일
 &lt;a class="anchor" href="#6%ec%9b%94-6%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-06&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>9:30-10:00 코테
10:00-10:30: 인적성&lt;/p>&lt;/blockquote>
&lt;p>#코딩테스트&lt;/p>
&lt;p>문제: 폰켓몬 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/1845">https://school.programmers.co.kr/learn/courses/30/lessons/1845&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>nums &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>nums = [3,1,2,3] -&amp;gt; list(set(nums)) = [3,1,2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>N/2 = 2인데 X길이가 2보다 길면 2, 2보다 짧으면 리스트 길이가 정답.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(nums):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nums_list &lt;span style="color:#f92672">=&lt;/span> list(set(nums))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> N &lt;span style="color:#f92672">=&lt;/span> len(nums)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> min(N&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>, len(nums_list))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>문제: 전화번호 목록&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>phone_book &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;119&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;97674223&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;1195524421&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##개념&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>phone_book = [&amp;#34;119&amp;#34;, &amp;#34;97674223&amp;#34;, &amp;#34;1195524421&amp;#34;] -&amp;gt; phone_book.sort() = [&amp;#34;119&amp;#34;, &amp;#34;1195524421&amp;#34;, &amp;#34;97674223&amp;#34;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;#34;1195524421&amp;#34;.startwith(&amp;#34;119&amp;#34;)이면 false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p></description></item><item><title>6월 5일 (특이점:외부에쫌많이 흔들림)</title><link>https://yshghid.github.io/docs/study/luck/luck1/</link><pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/luck/luck1/</guid><description>&lt;h1 id="6월-5일-특이점외부에쫌많이-흔들림">
 6월 5일 (특이점:외부에쫌많이 흔들림)
 &lt;a class="anchor" href="#6%ec%9b%94-5%ec%9d%bc-%ed%8a%b9%ec%9d%b4%ec%a0%90%ec%99%b8%eb%b6%80%ec%97%90%ec%ab%8c%eb%a7%8e%ec%9d%b4-%ed%9d%94%eb%93%a4%eb%a6%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-05&lt;/p>
&lt;hr>
&lt;p>#코딩테스트&lt;/p>
&lt;p>문제: 완주하지 못한 선수 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42576?language=python3">https://school.programmers.co.kr/learn/courses/30/lessons/42576?language=python3&lt;/a>&lt;/p>
&lt;p>##입출력 예&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>participant &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completion &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##개념&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kiki&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eden&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&lt;/span> Counter([&lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>} (key별로 value를 빼서 &lt;span style="color:#ae81ff">0&lt;/span>이나 음수되면 제거)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>##정답&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>i) Counter(participant) -&amp;gt; {&amp;#39;leo&amp;#39;:1, &amp;#39;kiki&amp;#39;:1, &amp;#39;eden&amp;#39;:1}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ii) Counter(participant) - Counter(completion) -&amp;gt; {&amp;#39;leo&amp;#39;:1}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iii) 답은? 위를 X로 봣을때 list(X.keys())[0]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> Counter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> Counter(participant) &lt;span style="color:#f92672">-&lt;/span> Counter(completion)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list(answer&lt;span style="color:#f92672">.&lt;/span>keys())[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>오늘한일&lt;/p>
&lt;ol>
&lt;li>빅분기, sqld, 정처기, 컴활 시험일정 확인&lt;/li>
&lt;li>항생제 작업&lt;/li>
&lt;li>코테-인적성-NCS 1회&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;p>오늘회고&lt;/p></description></item><item><title>ADsP 45회</title><link>https://yshghid.github.io/docs/study/tech/tech15/</link><pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech15/</guid><description>&lt;h1 id="adsp-45회-응시결과">
 ADsP 45회 응시결과
 &lt;a class="anchor" href="#adsp-45%ed%9a%8c-%ec%9d%91%ec%8b%9c%ea%b2%b0%ea%b3%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-05&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e55320a8-12f1-4883-8214-1794f55f830f" alt="image" />&lt;/p>
&lt;p>ㅎㅎ 붙었다!!&lt;/p></description></item><item><title>빅데이터분석기사 / 정보처리기사 / SQLD 시험일정</title><link>https://yshghid.github.io/docs/study/tech/tech16/</link><pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech16/</guid><description>&lt;h1 id="빅데이터분석기사--정보처리기사--sqld-시험일정">
 빅데이터분석기사 / 정보처리기사 / SQLD 시험일정
 &lt;a class="anchor" href="#%eb%b9%85%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b6%84%ec%84%9d%ea%b8%b0%ec%82%ac--%ec%a0%95%eb%b3%b4%ec%b2%98%eb%a6%ac%ea%b8%b0%ec%82%ac--sqld-%ec%8b%9c%ed%97%98%ec%9d%bc%ec%a0%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-05&lt;/p>
&lt;hr>
&lt;p>#빅데이터분석기사(필기-9.6)&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/450acee9-14d3-45ed-837b-65da11a3190b" alt="image" />&lt;/p>
&lt;p>#정보처리기사(필기-9.10)&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/bb87e662-b3ee-4a0e-b807-87cb31878766" alt="image" />&lt;/p>
&lt;p>#SQLD(8.23)&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e3e6be17-6082-4756-ae49-fa904423854a" alt="image" />&lt;/p></description></item><item><title>불행 속 우아함</title><link>https://yshghid.github.io/docs/hobby/book/book39/</link><pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book39/</guid><description>&lt;h1 id="불행-속-우아함">
 불행 속 우아함
 &lt;a class="anchor" href="#%eb%b6%88%ed%96%89-%ec%86%8d-%ec%9a%b0%ec%95%84%ed%95%a8">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-02&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>해소되지 않은 기분은 성격이 된다.&lt;/p>
&lt;p>작은 짜증으로 시작된 기분은 일상에 대한 분노로 이어지고 속속들이 헤쳐 모여 결국 더러운 성격으로 완성된다. 어떤 성격으로 살고 싶은지는 빼곡히 적은 새해 다짐이 아니라 일상을 어떻게 다루는지에 달려 있었다.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>사람의 진짜 우아함은 무너졌을 때 드러난다고 한다.&lt;/p>
&lt;p>윗사람에게 깨진 날 후배를 대하는 태도나 안 좋은 일이 넘친 날 웃응며 인사할 줄 아는 여유에서 우린 그 사람의 깊이를 느낄 수 있다. 그러니까 우아함이란 다시 말해 이렇게 정의할 수 있을 것이다. 마음이 두 조각 난 날에도 평소처럼 인사하고 웃고 공들여 사과할 수 있는 태도.&lt;/p></description></item><item><title>힘들때만 책보는 가짜독서인,,</title><link>https://yshghid.github.io/docs/hobby/daily/daily14/</link><pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily14/</guid><description>&lt;h1 id="힘들때만-책보는-가짜독서인">
 힘들때만 책보는 가짜독서인,,
 &lt;a class="anchor" href="#%ed%9e%98%eb%93%a4%eb%95%8c%eb%a7%8c-%ec%b1%85%eb%b3%b4%eb%8a%94-%ea%b0%80%ec%a7%9c%eb%8f%85%ec%84%9c%ec%9d%b8">#&lt;/a>
&lt;/h1>
&lt;p>#2025-06-02&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/394bcdb6-0fd6-4645-924b-d1b9237bb621" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f0bce6ae-f033-40ac-8796-280a7220d67d" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/ba2d1c66-3ff4-4a87-9f63-9f3be2a0b466" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/135888c3-db26-4259-baa6-dcb55045ad2b" alt="image" />&lt;/p>
&lt;p>아니!! 응원하던 커플이 진짜커플이댓더라고&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/16c613a5-e943-483f-9f2c-b30e28e4e2ef" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e37c805c-0212-47e8-8c89-e2384f2f33a3" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d2f6e960-719c-4c41-80d5-c2fd60823d95" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/865c7967-0d75-4031-847f-b6c016fcc5d6" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1ada5286-6b7f-4db2-bdbf-e20d1a091e3e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/01018eac-bf34-45af-be02-5f1283a2efac" alt="image" />&lt;/p>
&lt;p>좋은기억이라고 해도되나? 좋은일이 없었지만 진심이남은 공간이된 핸즈커피&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/9bee541d-979d-4ac7-9c42-fe9eea4cdc4a" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/01ccb77d-efdb-4fb1-ace8-3415b1b66f63" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3aaa414e-b7cc-4218-ae24-02349154e5a5" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a4872c1c-d3cc-481d-8952-9b74da65a828" alt="image" />&lt;/p>
&lt;p>요즘좋아하는유튜버!! 못참고 인스타까지달려가 정주행완료 ㅎㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/3c651c3f-52fc-4587-aebb-bdd48115747e" alt="image" />&lt;/p>
&lt;p>ㅋㅋㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/5e8ae25a-e090-4905-9e7f-edce12bb87ff" alt="image" />&lt;/p>
&lt;p>우울할때만 책찾고 우울할때만 일기쓰고 ㅋㅋ 이가짜독서인에 가짜블로거야!!!!&lt;/p></description></item><item><title>TFT 연구 방향</title><link>https://yshghid.github.io/docs/study/tech/tech14/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech14/</guid><description>&lt;h1 id="tft-연구-방향">
 TFT 연구 방향
 &lt;a class="anchor" href="#tft-%ec%97%b0%ea%b5%ac-%eb%b0%a9%ed%96%a5">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>##사용하고자 하는 데이터는?&lt;/p>
&lt;p>feature&lt;/p>
&lt;ul>
&lt;li>Clinical feature (17, float): Creatinine, Hemoglobin, LDH, Lymphocytes, Neutrophils, Platelet count, WBC count, hs-CRP, D-Dimer, BDTEMP, BREATH, DBP, SBP, PULSE, SPO2, O2_APPLY&lt;/li>
&lt;li>Antibiotics feature (2, str)
&lt;ul>
&lt;li>Treatment (list, str): 투여한 항생제, 결측값일수도있고 2개 이상일수도 있음&lt;/li>
&lt;li>Strain (str): 환자가 감염된 균주, 1개&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NEWS (int): 중증도&lt;/li>
&lt;li>Code (int/str): 환자 등록번호&lt;/li>
&lt;/ul>
&lt;p>time-series&lt;/p>
&lt;ul>
&lt;li>10개 시점 (항생제 투여 기준 D-3 ~ D+6)&lt;/li>
&lt;/ul>
&lt;p>##TFT input 형식은?&lt;/p></description></item><item><title>TFT PyTorch Forecasting - Stallion 튜토리얼 #2</title><link>https://yshghid.github.io/docs/study/tech/tech13/</link><pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech13/</guid><description>&lt;h1 id="tft-pytorch-forecasting---stallion-튜토리얼-2">
 TFT PyTorch Forecasting - Stallion 튜토리얼 #2
 &lt;a class="anchor" href="#tft-pytorch-forecasting---stallion-%ed%8a%9c%ed%86%a0%eb%a6%ac%ec%96%bc-2">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-29&lt;/p>
&lt;hr>
&lt;p>#version check&lt;/p>
&lt;p>예제 코드에 맞는 패키지 버전&lt;/p>
&lt;ul>
&lt;li>CUDA: 11.7&lt;/li>
&lt;li>PyTorch: 1.13.1+cu117&lt;/li>
&lt;li>PyTorch Lightning: 1.9.0&lt;/li>
&lt;li>PyTorch Forecasting: 0.10.3&lt;/li>
&lt;/ul>
&lt;p>PyTorch Forecasting 0.10.3 선택 이유: 최신 버전은 아래 코드랑 호환 안됨&lt;/p>
&lt;ol>
&lt;li>&lt;code>Tuner().lr_find()&lt;/code> -&amp;gt; 학습률 탐색, lightning&amp;gt;=2.x에서는 내부 콜백 구조 변경됨&lt;/li>
&lt;li>&lt;code>trainer.checkpoint_callback.best_model_path&lt;/code> -&amp;gt; 베스트 모델 로드, trainer.checkpoint_callback 속성 제거됨&lt;/li>
&lt;li>&lt;code>optimizer=&amp;quot;ranger&amp;quot;&lt;/code> -&amp;gt; Ranger 옵티마이저 지정, 제거됨&lt;/li>
&lt;li>&lt;code>plot_prediction&lt;/code>, &lt;code>plot_interpretation&lt;/code>, &lt;code>plot_dependency&lt;/code> -&amp;gt; 시각화 함수, 제거되거나 구조 변경됨&lt;/li>
&lt;li>&lt;code>optimize_hyperparameters&lt;/code> -&amp;gt; Optuna 기반 튜닝, deprecated 또는 작동 오류&lt;/li>
&lt;/ol>
&lt;p>여기에 맞게 설치해주기.&lt;/p></description></item><item><title>TFT PyTorch Forecasting - Stallion 튜토리얼</title><link>https://yshghid.github.io/docs/study/tech/tech12/</link><pubDate>Wed, 28 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech12/</guid><description>&lt;h1 id="tft-pytorch-forecasting---stallion-튜토리얼">
 TFT PyTorch Forecasting - Stallion 튜토리얼
 &lt;a class="anchor" href="#tft-pytorch-forecasting---stallion-%ed%8a%9c%ed%86%a0%eb%a6%ac%ec%96%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-28&lt;/p>
&lt;hr>
&lt;p>#introduction&lt;/p>
&lt;ul>
&lt;li>데이터셋: &lt;a href="https://www.kaggle.com/datasets/utathya/future-volume-prediction">Kaggle - Stallion 데이터셋&lt;/a>&lt;/li>
&lt;li>목적: Temporal Fusion Transformer(TFT)를 활용하여 음료 판매량을 예측&lt;/li>
&lt;/ul>
&lt;p>#install&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>Wed May 28 14:00:07 2025 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| NVIDIA-SMI 545.23.08 Driver Version: 545.23.08 CUDA Version: 12.3 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|-----------------------------------------+----------------------+----------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| GPU Name Persistence-M | Bus-Id Disp.A | Volatile Uncorr. ECC |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Fan Temp Perf Pwr:Usage/Cap | Memory-Usage | GPU-Util Compute M. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| | | MIG M. |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|=========================================+======================+======================|
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 NVIDIA RTX A6000 Off | 00000000:3B:00.0 Off | Off |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 30% 59C P2 204W / 300W | 8339MiB / 49140MiB | 95% Default |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| | | N/A |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------------------+----------------------+----------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 1 NVIDIA RTX A6000 Off | 00000000:5E:00.0 Off | Off |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 30% 60C P2 213W / 300W | 6897MiB / 49140MiB | 94% Default |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| | | N/A |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------------------+----------------------+----------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 2 NVIDIA RTX A6000 Off | 00000000:B1:00.0 Off | Off |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 30% 60C P2 203W / 300W | 6799MiB / 49140MiB | 94% Default |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| | | N/A |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------------------+----------------------+----------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 3 NVIDIA RTX A6000 Off | 00000000:D9:00.0 Off | Off |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 32% 63C P2 212W / 300W | 6885MiB / 49140MiB | 96% Default |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| | | N/A |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------------------+----------------------+----------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Processes: |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| GPU GI CI PID Type Process name GPU Memory |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ID ID Usage |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|=======================================================================================|
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 N/A N/A 20199 C ...dg/miniconda3/envs/woodg/bin/python 664MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 N/A N/A 860801 C ...jyj/miniconda3/envs/TiCC/bin/python 338MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 N/A N/A 1201205 C ...u1098/anaconda3/envs/dna/bin/python 6198MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 N/A N/A 1216286 C ...jyj/miniconda3/envs/TiCC/bin/python 338MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 0 N/A N/A 1225349 C python 782MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 1 N/A N/A 1201206 C ...u1098/anaconda3/envs/dna/bin/python 6104MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 1 N/A N/A 1224607 C python 782MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 2 N/A N/A 1201207 C ...u1098/anaconda3/envs/dna/bin/python 6006MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 2 N/A N/A 1224848 C python 782MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 3 N/A N/A 1201208 C ...u1098/anaconda3/envs/dna/bin/python 6092MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 3 N/A N/A 1225121 C python 782MiB |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>NVIDIA 드라이버 버전: 545.23.08&lt;/p></description></item><item><title>연구실 bashrc 스크립트</title><link>https://yshghid.github.io/docs/study/tech/tech11/</link><pubDate>Wed, 28 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech11/</guid><description>&lt;h1 id="연구실-bashrc-스크립트">
 연구실 bashrc 스크립트
 &lt;a class="anchor" href="#%ec%97%b0%ea%b5%ac%ec%8b%a4-bashrc-%ec%8a%a4%ed%81%ac%eb%a6%bd%ed%8a%b8">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-28&lt;/p>
&lt;hr>
&lt;p>#1 local&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">#alias cobi2=&amp;#39;ssh -p 5290 ysh980101@155.230.28.211&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> alias cobi2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ssh -p 3160 ysh980101@155.230.110.91&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">3&lt;/span> alias cobi3&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ssh -p 7777 ysh980101@155.230.110.92&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4&lt;/span> alias cobi4&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ssh -p 4712 ysh980101@155.230.110.93&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#75715e"># &amp;gt;&amp;gt;&amp;gt; conda initialize &amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#75715e"># !! Contents within this block are managed by &amp;#39;conda init&amp;#39; !!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">7&lt;/span> __conda_setup&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/opt/anaconda3/bin/conda&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;shell.bash&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;hook&amp;#39;&lt;/span> 2&amp;gt; /dev/null &lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -eq &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">9&lt;/span> eval &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$__conda_setup&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f &lt;span style="color:#e6db74">&amp;#34;/opt/anaconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">12&lt;/span> . &lt;span style="color:#e6db74">&amp;#34;/opt/anaconda3/etc/profile.d/conda.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">13&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">14&lt;/span> export PATH&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/opt/anaconda3/bin:&lt;/span>$PATH&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">17&lt;/span> unset __conda_setup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">18&lt;/span> &lt;span style="color:#75715e"># &amp;lt;&amp;lt;&amp;lt; conda initialize &amp;lt;&amp;lt;&amp;lt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">19&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">20&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">21&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">22&lt;/span> source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">23&lt;/span> source /opt/homebrew/opt/chruby/share/chruby/auto.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">24&lt;/span> chruby ruby-3.1.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>#2 cobi2&lt;/p></description></item><item><title>초여름 부산˚‧｡🐋</title><link>https://yshghid.github.io/docs/hobby/daily/daily11/</link><pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily11/</guid><description>&lt;h1 id="초여름-부산">
 초여름 부산˚‧｡🐋
 &lt;a class="anchor" href="#%ec%b4%88%ec%97%ac%eb%a6%84-%eb%b6%80%ec%82%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-20&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/93fca964-3a49-4583-95d6-06fcd2b8b647" alt="image" />&lt;/p>
&lt;p>간단하게 일상으로만 쓸려다가,,, 넘좋앗어서 그냥 따로 뺐다 ㅎㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/45c2787d-5287-404c-891c-af902157f1ca" alt="image" />&lt;/p>
&lt;p>다대포 할매집!! 문어삼합 / 냄비라면 / 올빚베리막걸리 시켯는데 다맛있었당 특히 딸기막걸리는 집에오니깐 또생각나서 사올걸 후회해따&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/be04631d-dc3c-44e7-91f5-8fd9bf103064" alt="image" />&lt;/p>
&lt;p>넘이뻤던바닷가&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/34f3bc01-73dd-4ee7-8b7b-8bc1aaa42b6b" alt="image" />&lt;/p>
&lt;p>길이사왓는데 넘맛있어서 막퍼먹은 케이크 ㅋㅋ 멜트인멜로우 검색해보니까 다른디저트도 다마싯을거같아서 또사먹을듯&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/2fe0ff7b-b118-4c72-b6d8-e19c9f6574db" alt="image" />&lt;/p>
&lt;p>생레몬하이볼 첨먹어봣는데 주점에서파는하이볼 같음&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/a3ef2bcb-a475-4a73-a336-1d5dec4d5da3" alt="image" />&lt;/p>
&lt;p>다음날&amp;hellip; 지수집엔 마싯는게 많다 일리커피가 네스프레소보다 훨배 맛있는거같음 다크원두인데 쓴맛이없고 향이 엄청 좋다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/60d09c0e-d782-40f1-9831-86c96bd8f79b" alt="image" />&lt;/p></description></item><item><title>13일의화요일</title><link>https://yshghid.github.io/docs/hobby/daily/daily9/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily9/</guid><description>&lt;h1 id="13일의화요일">
 13일의화요일
 &lt;a class="anchor" href="#13%ec%9d%bc%ec%9d%98%ed%99%94%ec%9a%94%ec%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-13&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/027bed74-4748-453d-ad8e-11c9d4c565c5" alt="image" />&lt;/p>
&lt;p>넘이쁜 유튜버 찾아따&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/3fdb6043-b4d7-476e-9ce1-ae6a5400fa35" alt="image" />&lt;/p>
&lt;p>갑자기쇼핑도해줬고&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/2fd72457-b6da-4c6b-bb89-6213a31ba9be" alt="image" />&lt;/p>
&lt;p>아침엔또행복을 수혈해줬다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/830de183-6b22-436a-b83a-b6a9da43d4ad" alt="image" />&lt;/p>
&lt;p>운동을하면 저녁시간이잘간다 밥챙겨먹고 운동가고 잠잘자고 남은시간에는 유튜브보고 해야할일을하고..&lt;/p>
&lt;p>일상이 유지돼서 내마음이단단하면 쫌덜흔들릴수있으니깐 뇌에힘을주자!!!! 너무욕심내지말고 너무포기하지말자 그리구잘잊자&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/e61032aa-2bd6-4fd8-83ff-30dfd759940e" alt="image" />&lt;/p></description></item><item><title>열시미충전하는 연휴</title><link>https://yshghid.github.io/docs/hobby/daily/daily8/</link><pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily8/</guid><description>&lt;h1 id="열시미충전하는-연휴">
 열시미충전하는 연휴
 &lt;a class="anchor" href="#%ec%97%b4%ec%8b%9c%eb%af%b8%ec%b6%a9%ec%a0%84%ed%95%98%eb%8a%94-%ec%97%b0%ed%9c%b4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-05-06&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8d444465-bdaf-4339-aa1f-ce35a2dad11e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f75acbff-435c-44b2-8f1a-4b0352a83451" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5809f614-7f7b-45e7-bedd-6e115691c467" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/18f9db95-c363-46bb-9960-58cfafac4e14" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/80df1686-f2bc-4eee-ab4c-5b98691ebf97" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1c058c52-20bb-482b-9e51-93545502296e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d99da498-7961-4b4c-8798-c2f88f5d5ea1" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/29d1a06f-28f4-4c8a-83ad-1516b4b22a85" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/93c9b425-6b92-4811-bae1-6dfb0bb084d2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b1ac6fc1-dfdc-4189-b16c-a66032f82f18" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f48b566d-5f83-4384-9ce3-078972ed728f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/4d277fbc-2d1f-4c9b-b48c-892030f030b0" alt="image" />&lt;/p></description></item><item><title>스페이스임원</title><link>https://yshghid.github.io/docs/hobby/daily/daily7/</link><pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily7/</guid><description>&lt;h1 id="스페이스임원">
 스페이스임원
 &lt;a class="anchor" href="#%ec%8a%a4%ed%8e%98%ec%9d%b4%ec%8a%a4%ec%9e%84%ec%9b%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-28&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/db52439d-dda7-41db-b712-5ce7d298c1be" alt="image" />&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/102c1388-6193-4bc1-85f1-57e01c3863a5" alt="image" />&lt;/p>
&lt;p>전체적으로 초록초록한 분위기가 넘 예뻤던 스페이스임원!!&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/843c6cc7-c242-417d-9c72-8abb24148a55" alt="image" />&lt;/p>
&lt;p>브런치 종류가 많았는데 쉬림프 감자 타르틴 / 샥슈카 / 스페이스 치아바타 샌드위치를 시켰다.&lt;/p>
&lt;p>셋다 마싰었지만 치아바타 샌드위치가 내스탈이었다 ㅎㅎㅎ 쉬림프 감자 타르틴은 엄마가 맛있다고 했는데 평소에 감자 사라다 st 그렇게 좋아하지 않는데두 내 입에도 괜찮았당&lt;/p>
&lt;p>샥슈카는 일반적인 라구소스맛 브런치들에 비해 고기맛이랑 짠맛이 적게 나고 토마토맛이 많이 나서 맛있게 먹었다!&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/c9fc8080-6cc8-4a57-8173-854406afec9d" alt="image" />&lt;/p>
&lt;p>두명이서 오면 2층 테라스 자리에 앉아도 좋을것같음. 나오면서 트러플 에그 갈레트랑 라구 오픈 샌드위치를 다음에 먹을 메뉴로 찜해뒀다 ㅎㅎ&lt;/p></description></item><item><title>DBeaver 환경설정, SELECT문</title><link>https://yshghid.github.io/docs/study/tech/tech7/</link><pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech7/</guid><description>&lt;h1 id="dbeaver-환경설정-select문">
 DBeaver 환경설정, SELECT문
 &lt;a class="anchor" href="#dbeaver-%ed%99%98%ea%b2%bd%ec%84%a4%ec%a0%95-select%eb%ac%b8">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-04-22&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech7/#%ec%84%b9%ec%85%98-1-sqld-%ec%8b%9c%ed%97%98-%ea%b0%9c%ec%9a%94-%ea%b0%95%ec%9d%98-%ec%86%8c%ea%b0%9c-%ec%8b%a4%ec%8a%b5-%ed%99%98%ea%b2%bd-%ec%84%a4%ec%a0%95">섹션 1. SQLD 시험 개요, 강의 소개, 실습 환경 설정&lt;/a>&lt;/p>
&lt;p>&lt;em>2025-04-22&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech7/#%ec%84%b9%ec%85%98-3-select-%eb%ac%b8">섹션 3. SELECT 문&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="섹션-1-sqld-시험-개요-강의-소개-실습-환경-설정">
 섹션 1. SQLD 시험 개요, 강의 소개, 실습 환경 설정
 &lt;a class="anchor" href="#%ec%84%b9%ec%85%98-1-sqld-%ec%8b%9c%ed%97%98-%ea%b0%9c%ec%9a%94-%ea%b0%95%ec%9d%98-%ec%86%8c%ea%b0%9c-%ec%8b%a4%ec%8a%b5-%ed%99%98%ea%b2%bd-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-실습환경-설정">
 1. 실습환경 설정
 &lt;a class="anchor" href="#1-%ec%8b%a4%ec%8a%b5%ed%99%98%ea%b2%bd-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>DBeaver Community 설치 &lt;a href="https://dbeaver.io/download/]%28https://dbeaver.io/download/%29">https://dbeaver.io/download/](https://dbeaver.io/download/)&lt;/a>&lt;/li>
&lt;li>Wallet 다운로드&lt;/li>
&lt;li>JDBC Driver 다운로드 &lt;a href="https://www.oracle.com/kr/database/technologies/appdev/jdbc-downloads.html">https://www.oracle.com/kr/database/technologies/appdev/jdbc-downloads.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/yshmbid/oracle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wallet_SQLD		ojdbc8-full
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wallet_SQLD.zip		ojdbc8-full.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>/Users/yshmbid/oracle&lt;/code> 위치에 잘 넣어줬다&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DBeaver 열기&lt;/p>
&lt;ul>
&lt;li>JDBC URL Template, Username, Password 입력&lt;/li>
&lt;li>Driver setting &amp;gt; Libraries &amp;gt; /Users/yshmbid/oracle/ojdbc8-full 넣어줌&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Test Connection했을때 아래처럼 뜨면 정상!&lt;/p></description></item><item><title>문자형/숫자형/날짜형/기타 함수</title><link>https://yshghid.github.io/docs/study/tech/tech9/</link><pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech9/</guid><description>&lt;h1 id="문자형숫자형날짜형기타-함수">
 문자형/숫자형/날짜형/기타 함수
 &lt;a class="anchor" href="#%eb%ac%b8%ec%9e%90%ed%98%95%ec%88%ab%ec%9e%90%ed%98%95%eb%82%a0%ec%a7%9c%ed%98%95%ea%b8%b0%ed%83%80-%ed%95%a8%ec%88%98">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-04-22&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech9/#%ec%84%b9%ec%85%98-4-%ed%95%a8%ec%88%98">섹션 4. 함수&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="섹션-4-함수">
 섹션 4. 함수
 &lt;a class="anchor" href="#%ec%84%b9%ec%85%98-4-%ed%95%a8%ec%88%98">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-문자형-함수">
 1. 문자형 함수
 &lt;a class="anchor" href="#1-%eb%ac%b8%ec%9e%90%ed%98%95-%ed%95%a8%ec%88%98">#&lt;/a>
&lt;/h3>
&lt;p>#1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">lower&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;SQL Expert&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">upper&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;SQL Expert&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ascii(&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	chr(&lt;span style="color:#ae81ff">65&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	concat(&lt;span style="color:#e6db74">&amp;#39;SQL&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39; Expert&amp;#39;&lt;/span>), &lt;span style="color:#75715e">-- 2개까지만
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">length&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;SQL Expert&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> dual;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/f6382c39-6f5e-4bfa-ac09-be164274db09" alt="image" />&lt;/p>
&lt;ul>
&lt;li>각각 이렇게 나온다.
&lt;ul>
&lt;li>oracle은 concat 2개까지만, sql server는 3개도 됨.&lt;/li>
&lt;li>oracle은 length이고 sql은 len이다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ltrim(&lt;span style="color:#e6db74">&amp;#39;xxxYYYZZxYZ&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;x&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ltrim(&lt;span style="color:#e6db74">&amp;#39;xxxYYYZZxYZ&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;xY&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ltrim(&lt;span style="color:#e6db74">&amp;#39;xxxYYYZZxYZ&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;xYZ&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ltrim(&lt;span style="color:#e6db74">&amp;#39; xxxx&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	rtrim(&lt;span style="color:#e6db74">&amp;#39;xxxYYYZZxYZ&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ZY&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	rtrim(&lt;span style="color:#e6db74">&amp;#39;xxxx &amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">trim&lt;/span>(&lt;span style="color:#e6db74">&amp;#39; xxxx &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> dual;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/968759ed-2a71-4568-b321-a49843197f43" alt="image" />&lt;/p></description></item><item><title>Bismark: WGBS 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi6/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi6/</guid><description>&lt;h1 id="bismark-wgbs-전처리">
 Bismark: WGBS 전처리
 &lt;a class="anchor" href="#bismark-wgbs-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-build-index">
 1. Build Index
 &lt;a class="anchor" href="#1-build-index">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ bowtie2-build Homo_sapiens.GRCh38.dna.toplevel.fa GRCh38 -p &lt;span style="color:#ae81ff">40&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-bam-sorting--indexing">
 2. Bam Sorting &amp;amp; Indexing
 &lt;a class="anchor" href="#2-bam-sorting--indexing">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ samtools sort KEB01_1_bismark_bt2_pe.bam -o KEB01_1_bismark_bt2_pe.sorted.bam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ samtools index KEB01_1_bismark_bt2_pe.sorted.bam
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-methylation-extraction">
 3. Methylation Extraction
 &lt;a class="anchor" href="#3-methylation-extraction">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ bismark_methylation_extractor --gzip --bedGraph --buffer_size 10G --cytosine_report --genome_folder /data3/PUBLIC_DATA/ref_genomes/homo_sapiens/GRCh37_hg19/Homo_sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta KEB01_1_bismark_bt2_pe.sorted.bam
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ChIP-seq 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi5/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi5/</guid><description>&lt;h1 id="chip-seq-전처리">
 ChIP-seq 전처리
 &lt;a class="anchor" href="#chip-seq-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-trimming">
 1. Trimming
 &lt;a class="anchor" href="#1-trimming">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>chipseq_trimming.sh&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># setting envs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export bdir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/projects/2022_KNU_EBV&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export hg38_bowtieidx&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/homo_sapiens/hg38/hg38_bowtie_idx/hg38.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export hg38_bwaidx&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/homo_sapiens/hg38/hg38_bwa_index/hg38.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export ebv_bowtie2idx&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/EBV_bowtie2_idx/NC_007605.1.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export ebv_bwaidx&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/EBV_bwa_index/NC_007605.1.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### SET Path ###&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /data3/RAW_DATA/2023_KNU_EBV/ChIP-seq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### TRIMMING data ###&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p trimmed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sampdir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/data3/RAW_DATA/2023_KNU_EBV/ChIP-seq&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>samplist&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Input&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;p65&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;RIgG&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TRIMMOMATIC&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/packages/trimmomatic/Trimmomatic-0.39/trimmomatic-0.39.jar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> sampname in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>samplist[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mkdir -p &lt;span style="color:#e6db74">&amp;#34;trimmed/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> java -jar $TRIMMOMATIC PE -threads &lt;span style="color:#ae81ff">40&lt;/span> -trimlog log1.txt $sampdir/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_1.fastq/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_1.fastq $sampdir/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_2.fastq/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_2.fastq $sampdir/trimmed/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_1.trimmed.fastq $sampdir/trimmed/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_1.up.trimmed.fastq $sampdir/trimmed/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_2.trimmed.fastq $sampdir/trimmed/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>sampname&lt;span style="color:#e6db74">}&lt;/span>_2.up.trimmed.fastq ILLUMINACLIP:/data1/packages/trimmomatic/Trimmomatic-0.39/adapters/TruSeq3-PE.fa:2:30:10:2:True LEADING:3 TRAILING:3 MINLEN:36
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-alignment">
 2. Alignment
 &lt;a class="anchor" href="#2-alignment">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>chipseq_alignment.sh&lt;/mark>&lt;/p></description></item><item><title>gProfiler/ggplot2: Enrichment 분석, 버블 플롯</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi3/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi3/</guid><description>&lt;h1 id="gprofilerggplot2-enrichment-분석-버블-플롯">
 gProfiler/ggplot2: Enrichment 분석, 버블 플롯
 &lt;a class="anchor" href="#gprofilerggplot2-enrichment-%eb%b6%84%ec%84%9d-%eb%b2%84%eb%b8%94-%ed%94%8c%eb%a1%af">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package">
 1. Load Package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(ggplot2)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-set-path">
 2. Set Path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data-blog/bi3&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data-blog/bi3&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-functional-enrichment-bubble-plot">
 3. Functional Enrichment Bubble Plot
 &lt;a class="anchor" href="#3-functional-enrichment-bubble-plot">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>condition &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;150_con&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gpsource &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;GO:BP&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#gpsource &amp;lt;- &amp;#39;REAC&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.csv&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./sleuth_ward/gprofiler/gProfiler_&amp;#34;&lt;/span>,condition,&lt;span style="color:#e6db74">&amp;#34;_termsize.csv&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.csv&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gProfiler_&amp;#34;&lt;/span>,condition,&lt;span style="color:#e6db74">&amp;#34;_c2_padj0.1.csv&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> df_c1[df_c1&lt;span style="color:#f92672">$&lt;/span>source &lt;span style="color:#f92672">==&lt;/span> gpsource, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> df_c2[df_c2&lt;span style="color:#f92672">$&lt;/span>source &lt;span style="color:#f92672">==&lt;/span> gpsource, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1&lt;span style="color:#f92672">$&lt;/span>reg_type &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;down&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2&lt;span style="color:#f92672">$&lt;/span>reg_type &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;up&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1&lt;span style="color:#f92672">$&lt;/span>nlog &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">abs&lt;/span>(df_c1&lt;span style="color:#f92672">$&lt;/span>negative_log10_of_adjusted_p_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2&lt;span style="color:#f92672">$&lt;/span>nlog &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">abs&lt;/span>(df_c2&lt;span style="color:#f92672">$&lt;/span>negative_log10_of_adjusted_p_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c1 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> df_c1&lt;span style="color:#a6e22e">[order&lt;/span>(df_c1&lt;span style="color:#f92672">$&lt;/span>negative_log10_of_adjusted_p_value), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df_c2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> df_c2&lt;span style="color:#a6e22e">[order&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>df_c2&lt;span style="color:#f92672">$&lt;/span>negative_log10_of_adjusted_p_value), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">rbind&lt;/span>(df_c1, df_c2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ggplot&lt;/span>(df, &lt;span style="color:#a6e22e">aes&lt;/span>(x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">reorder&lt;/span>(term_name, nlog), y &lt;span style="color:#f92672">=&lt;/span> negative_log10_of_adjusted_p_value, size &lt;span style="color:#f92672">=&lt;/span> intersection_size, color &lt;span style="color:#f92672">=&lt;/span> nlog)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">geom_point&lt;/span>(alpha &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.6&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">theme&lt;/span>(axis.text.y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">element_text&lt;/span>(angle &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, vjust &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>, hjust&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">labs&lt;/span>(title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Bubble Plot - GO:BP / 150_con&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Term&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-log10(p-adj)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Intersection Size&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-log10(p-adj)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">scale_size&lt;/span>(range &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">10&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">scale_color_gradient2&lt;/span>(low &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;blue&amp;#34;&lt;/span>, mid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;white&amp;#34;&lt;/span>, high &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;red&amp;#34;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">coord_flip&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ggsave&lt;/span>(filename &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;./bubble_plot_150_con.png&amp;#34;&lt;/span>, width &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>, height &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/6c08353b-e0b1-4f29-999a-7ca9fe4ec2fd" alt="image" />&lt;/p></description></item><item><title>Kallisto Pseudoalignment 작업</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi4/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi4/</guid><description>&lt;h1 id="kallisto-pseudoalignment-작업">
 Kallisto Pseudoalignment 작업
 &lt;a class="anchor" href="#kallisto-pseudoalignment-%ec%9e%91%ec%97%85">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-build-index">
 1. Build Index
 &lt;a class="anchor" href="#1-build-index">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kallisto index -i transcripts_cDNA.idx Homo_sapiens.GRCh38.cdna.all.fa.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-pseudoalign">
 2. Pseudoalign
 &lt;a class="anchor" href="#2-pseudoalign">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ kallisto quant -i transcripts_cDNA.idx -o output_150-1 -t &lt;span style="color:#ae81ff">40&lt;/span> ../2306_tophat/data/Bowtie2Index/5-AZA_150-1_1_edited.fastq ../2306_tophat/data/Bowtie2Index/5-AZA_150-1_2_edited.fastq
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>3개 파일 생성
&lt;ul>
&lt;li>abundance.h5 - HDF5 binary file containing run info, abundance esimates, bootstrap estimates, and transcript length information length. This file can be read in by sleuth&lt;/li>
&lt;li>abundance.tsv - plaintext file of the abundance estimates. It does not contains bootstrap estimates. Please use the &amp;ndash;plaintext mode to output plaintext abundance estimates. Alternatively, kallisto h5dump can be used to output an HDF5 file to plaintext. The first line contains a header for each column, including estimated counts, TPM, effective length.&lt;/li>
&lt;li>run_info.json - json file containing information about the run&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-downstream-분석">
 3. Downstream 분석
 &lt;a class="anchor" href="#3-downstream-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Kallisto는 일반적인 Alignment 도구와 달리 bam 파일을 output으로 생성하지 않기 때문에 HTSeq-count를 쓰는 대신 abundance.tsv 또는 .h5 파일을 Sleuth에서 직접 불러와서 통계 분석을 수행하는 것이 표준 워크플로우.&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>Rsubread, edgeR: RNA-seq 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi8/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi8/</guid><description>&lt;h1 id="rsubread-edger-rna-seq-전처리">
 Rsubread, edgeR: RNA-seq 전처리
 &lt;a class="anchor" href="#rsubread-edger-rna-seq-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;p>가장 오류 적게나는 조합!&lt;/p>
&lt;h3 id="1-align-rna-seq">
 1. Align RNA-seq
 &lt;a class="anchor" href="#1-align-rna-seq">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>Load Packages&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(Rsubread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(org.Mm.eg.db)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(gridExtra)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(reshape2)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Set Path&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>indir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2504/mirna/data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>outdir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2504/mirna/data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>refpath &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2406/data-gne/mm39.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(indir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data/home/ysh980101/2504/mirna/data&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Build Index&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">buildindex&lt;/span>(basename &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;mm39&amp;#34;&lt;/span>, reference &lt;span style="color:#f92672">=&lt;/span> refpath)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Read Alignment&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>files &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">list.files&lt;/span>(pattern&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;\\.fastq\\.gz$&amp;#34;&lt;/span>, full.names&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bams &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sub&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;\\.fastq\\.gz$&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;.bam&amp;#34;&lt;/span>, files)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>samples &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">gsub&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;^\\.\\/|\\.fastq\\.gz$&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, files)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>targets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.delim&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;target.txt&amp;#34;&lt;/span>, header&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">align&lt;/span>(index&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mm39&amp;#34;&lt;/span>, readfile1&lt;span style="color:#f92672">=&lt;/span>files, input_format&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;gzFASTQ&amp;#34;&lt;/span>, output_file&lt;span style="color:#f92672">=&lt;/span>bams, nthreads&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">50&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Quantification&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>fc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">featureCounts&lt;/span>(bams, isGTFAnnotationFile&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">TRUE&lt;/span>, GTF.featureType&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;exon&amp;#34;&lt;/span>, GTF.attrType&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;gene_id&amp;#34;&lt;/span>, isPairedEnd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">FALSE&lt;/span>, annot.ext&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mm39.knownGene.gtf&amp;#34;&lt;/span>, useMetaFeatures&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">FALSE&lt;/span>, allowMultiOverlap&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">TRUE&lt;/span>, nthreads&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">50&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Save Countdata&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">colnames&lt;/span>(fc&lt;span style="color:#f92672">$&lt;/span>counts) &lt;span style="color:#f92672">&amp;lt;-&lt;/span> samples
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">DGEList&lt;/span>(fc&lt;span style="color:#f92672">$&lt;/span>counts, group&lt;span style="color:#f92672">=&lt;/span>group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">write.csv&lt;/span>(&lt;span style="color:#a6e22e">as.data.frame&lt;/span>(y&lt;span style="color:#f92672">$&lt;/span>counts), file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">paste0&lt;/span>(outdir,&lt;span style="color:#e6db74">&amp;#34;/count.csv&amp;#34;&lt;/span>, row.names &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-gene-id-annotation">
 2. Gene ID Annotation
 &lt;a class="anchor" href="#2-gene-id-annotation">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>Load Packages&lt;/mark>&lt;/p></description></item><item><title>Sleuth 작업</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi2/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi2/</guid><description>&lt;h1 id="sleuth-작업">
 Sleuth 작업
 &lt;a class="anchor" href="#sleuth-%ec%9e%91%ec%97%85">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-load-package-run-sleuth">
 1. Load Package, Run Sleuth
 &lt;a class="anchor" href="#1-load-package-run-sleuth">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;sleuth&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">packageVersion&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;sleuth&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gridExtra&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cowplot&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;biomaRt&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(readr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2307_kallisto&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">dir&lt;/span>(&lt;span style="color:#a6e22e">file.path&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">grep&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;^output_(150|con)&amp;#34;&lt;/span>, sample_id, value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">substring&lt;/span>(sample_id, &lt;span style="color:#ae81ff">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kal_dirs &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">file.path&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./output_&amp;#34;&lt;/span>, sample_id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.table&lt;/span>(&lt;span style="color:#a6e22e">file.path&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./kallisto_demo_150_con.tsv&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> header &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stringsAsFactors &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sep &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\t&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c &lt;span style="color:#f92672">&amp;lt;-&lt;/span> dplyr&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">mutate&lt;/span>(s2c, path &lt;span style="color:#f92672">=&lt;/span> kal_dirs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>marts &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">listMarts&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ensembl &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">useMart&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ensembl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">listDatasets&lt;/span>(ensembl)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filtered_datasets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> datasets&lt;span style="color:#a6e22e">[grepl&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hsapiens&amp;#34;&lt;/span>, datasets&lt;span style="color:#f92672">$&lt;/span>dataset), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hsapiens_mart &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">useMart&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ensembl&amp;#34;&lt;/span>,dataset&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hsapiens_gene_ensembl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">listDatasets&lt;/span>(hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filtered_datasets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> datasets&lt;span style="color:#a6e22e">[grepl&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hsapiens&amp;#34;&lt;/span>, datasets&lt;span style="color:#f92672">$&lt;/span>dataset), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hsapiens_mart &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">useMart&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ensembl&amp;#34;&lt;/span>,dataset&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hsapiens_gene_ensembl&amp;#34;&lt;/span>,host&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ensembl.org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasets &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">listDatasets&lt;/span>(hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>t2g &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">getBM&lt;/span>(attributes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ensembl_transcript_id_version&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ensembl_gene_id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;description&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;external_gene_name&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mart &lt;span style="color:#f92672">=&lt;/span> hsapiens_mart)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">head&lt;/span>(t2g)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ttg &lt;span style="color:#f92672">&amp;lt;-&lt;/span> dplyr&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">rename&lt;/span>(t2g, target_id&lt;span style="color:#f92672">=&lt;/span> ensembl_transcript_id_version, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ens_gene &lt;span style="color:#f92672">=&lt;/span> ensembl_gene_id, ext_gene &lt;span style="color:#f92672">=&lt;/span> external_gene_name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ttg &lt;span style="color:#f92672">&amp;lt;-&lt;/span> dplyr&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">select&lt;/span>(ttg, &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;target_id&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ens_gene&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ext_gene&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">head&lt;/span>(ttg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c&lt;span style="color:#f92672">$&lt;/span>condition &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">as.factor&lt;/span>(s2c&lt;span style="color:#f92672">$&lt;/span>condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s2c&lt;span style="color:#f92672">$&lt;/span>condition &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">relevel&lt;/span>(s2c&lt;span style="color:#f92672">$&lt;/span>condition, ref &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;con&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sleuth_prep&lt;/span>(s2c, target_mapping &lt;span style="color:#f92672">=&lt;/span> ttg,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aggregation_column &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;ens_gene&amp;#39;&lt;/span>, extra_bootstrap_summary &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sleuth_fit&lt;/span>(so, &lt;span style="color:#f92672">~&lt;/span>condition, &lt;span style="color:#e6db74">&amp;#39;full&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sleuth_fit&lt;/span>(so, &lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;reduced&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>so &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sleuth_lrt&lt;/span>(so, &lt;span style="color:#e6db74">&amp;#39;reduced&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;full&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleuth_table_gene &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">sleuth_results&lt;/span>(so, &lt;span style="color:#e6db74">&amp;#39;reduced:full&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;lrt&amp;#39;&lt;/span>, show_all &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sleuth_save&lt;/span>(so, &lt;span style="color:#e6db74">&amp;#39;./sleuth_ward/150_con_so.sleuth&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">write_csv&lt;/span>(sleuth_table_gene, &lt;span style="color:#e6db74">&amp;#39;./sleuth_ward/150_con.csv&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>자꾸 커널이 죽어서 ㅠㅠ r script 통으로 돌림&lt;/li>
&lt;li>생애첫 rscript작성이었어서 기억에남는다 ㅋㅋㅎ&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>TopHat, SAMtools, HTSeq: RNA-seq 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi7/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi7/</guid><description>&lt;h1 id="tophat-samtools-htseq-rna-seq-전처리">
 TopHat, SAMtools, HTSeq: RNA-seq 전처리
 &lt;a class="anchor" href="#tophat-samtools-htseq-rna-seq-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-tophat-실행">
 1. TopHat 실행
 &lt;a class="anchor" href="#1-tophat-%ec%8b%a4%ed%96%89">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tophatpy -o tophat_out_33-1 --no-mixed -p &lt;span style="color:#ae81ff">40&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>$ /data3/PUBLIC_DATA/ref_genomes/homo_sapiens/GRCh38/Homo_sapiens.GRCh38.dna.toplevel &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>$ /data/home/ysh980101/2306_tophat/data/Bowtie2Index/5-AZA_33-1_1.fastq &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>$ /data/home/ysh980101/2306_tophat/data/Bowtie2Index/5-AZA_33-1_2.fastq
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>tophatpy&lt;/code>: tophat2 안먹어서 커스텀한 명령어 (정식 명령어는 tophat2)&lt;/li>
&lt;li>&lt;code>-o tophat_out_33-1&lt;/code>: 출력 디렉토리 설정&lt;/li>
&lt;li>&lt;code>--no-mixed&lt;/code>: 페어 중 하나만 매핑되면 제외&lt;/li>
&lt;li>&lt;code>-p 40&lt;/code>: 멀티스레딩, 40개 스레드 사용&lt;/li>
&lt;li>&lt;code>/data3/PUBLIC_DATA/...dna.toplevel&lt;/code>: reference genome FASTA (Bowtie2 인덱스가 이와 동일한 경로로 있어야 함)&lt;/li>
&lt;li>2개의 paired-end read 입력&lt;/li>
&lt;/ul>
&lt;p>cf) tophat alias 확인&lt;/p></description></item><item><title>TopHat2, HTSeq, Rsubread: RNA-seq 전처리 파이프라인 비교</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi9/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi9/</guid><description>&lt;h1 id="tophat2-htseq-rsubread-rna-seq-전처리-파이프라인-비교">
 TopHat2, HTSeq, Rsubread: RNA-seq 전처리 파이프라인 비교
 &lt;a class="anchor" href="#tophat2-htseq-rsubread-rna-seq-%ec%a0%84%ec%b2%98%eb%a6%ac-%ed%8c%8c%ec%9d%b4%ed%94%84%eb%9d%bc%ec%9d%b8-%eb%b9%84%ea%b5%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;h3 id="1-methods">
 1. Methods
 &lt;a class="anchor" href="#1-methods">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8cab1315-1ed9-4046-85c8-28ddbb813166" alt="image" />&lt;/p>
&lt;p>&lt;mark>비교 의의&lt;/mark>&lt;/p>
&lt;ul>
&lt;li>Traditional 방법은 TopHat2+HTseq 조합이지만 오류도 넘 많이나고 Rsubread를 쓰면 빠르고 깔끔한데 왜 써야하지..? 싶어서 동일한 데이터(pair-end fastq)로 돌려봄.&lt;/li>
&lt;li>HTseq에서 아래 코드를 수행할때 파라미터가 많은데 뭐가 다르게나오는지 모르겠어서 실험해봄.&lt;/li>
&lt;/ul>
&lt;p>&lt;mark>Cases&lt;/mark>&lt;/p>
&lt;ol>
&lt;li>Rsubread 사용&lt;/li>
&lt;li>HTSeq 사용, &lt;code>-i gene_id --additional-attr=gene_name&lt;/code> (exon 기준 count)&lt;/li>
&lt;li>HTSeq 사용, &lt;code>-i transcript_id --additional-attr=gene_id --additional-attr=gene_name&lt;/code> (transcript 기준 count)&lt;/li>
&lt;li>HTSeq 사용, &lt;code>-i transcript_id --additional-attr=gene_id --additional-attr=gene_name --nonunique=all&lt;/code> (여러 transcript에 매핑된 read는 모두 count)&lt;/li>
&lt;/ol>
&lt;h3 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h3>
&lt;h3 id="2-result">
 2. Result
 &lt;a class="anchor" href="#2-result">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/85251a62-07d9-41c0-bd0c-f6e44507c262" alt="image" />&lt;/p></description></item><item><title>목표를 이루는 확실한 방법</title><link>https://yshghid.github.io/docs/hobby/book/book15/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book15/</guid><description>&lt;h1 id="목표를-이루는-확실한-방법">
 목표를 이루는 확실한 방법
 &lt;a class="anchor" href="#%eb%aa%a9%ed%91%9c%eb%a5%bc-%ec%9d%b4%eb%a3%a8%eb%8a%94-%ed%99%95%ec%8b%a4%ed%95%9c-%eb%b0%a9%eb%b2%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-21&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>오늘의 세상 모습이 어떻든, 무엇이 당연해 보이든,&lt;/p>
&lt;p>내일이 되면 그 누구도 생각하지 못한 작은 우연 때문에 모든 게 달라질 수 있다. 돈과 마찬가지로 사건도 복리 효과를 낸다. 그리고 복리 효과의 가장 주요한 특징은 미약하게 시작된 뭔가가 나중에 얼마나 거대해질 수 있는지를 처음에는 직관적으로 느낄 수가 없다는 사실이다.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>세상은 정보로 넘쳐난다.&lt;/p>
&lt;p>사람들은 그 모든 정보를 꼼꼼하고 차분하게 살펴보면서 가장 합리적의고 옳은 답을 찾기 어렵다. 완벽한 세상에서라면 정보의 중요성이 그 정보 전달자의 스토리텔링 능력에 의존하지 않는다. 그러나 우리가 살고 있는 이 세상 사람들은 쉽게 지루함을 느끼고, 인내심이 부족하며, 감정에 쉽게 지배당하고, 복잡한 정보가 마치 스토리의 한 장면처럼 이해하기 쉬워지기를 원한다.&lt;/p></description></item><item><title>사회생활은 너모어렵다</title><link>https://yshghid.github.io/docs/hobby/daily/daily6/</link><pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily6/</guid><description>&lt;h1 id="사회생활은-너모어렵다">
 사회생활은 너모어렵다
 &lt;a class="anchor" href="#%ec%82%ac%ed%9a%8c%ec%83%9d%ed%99%9c%ec%9d%80-%eb%84%88%eb%aa%a8%ec%96%b4%eb%a0%b5%eb%8b%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-17&lt;/p>
&lt;hr>
&lt;p>제일 어려운부분은 솔직한 느낌을 주면서 매우 솔직하면 안된다는것이다 나의 모든것을 함께한다는 느낌을 주면서도 남들이 듣고싶지 않아하거나 뒤에서 욕할만할 일들은 필터링하고 솔직해야 하는것이다.&lt;/p>
&lt;p>근데 내입장에서만 쓰니까 괴랄한것처럼 느껴지는데 남들입장에서 쓰자면 그냥 &amp;lsquo;일원으로서 잘 지내는것&amp;rsquo;을 바라는것뿐이다. 이게 숨쉬듯이 안되는 사람은 하나하나 통제해야하는데, 처음에는 통제후 사람들이 살가워지고 반응이 바뀌는걸 보는게 즐거워서, 이런저런 방식으로 내보일 모습을 바꿔보고 &amp;lsquo;이정도는 괜찮다!&amp;rsquo; &amp;lsquo;이런건 싫어하구나!&amp;lsquo;하고 나만의 커스텀을 거치는 것에 열심히 임했다.
나중에 회사가거나 다른 집단에 속할때두 훈련돼있으면 크게 힘안들이고 살수있을거같아서 충분히 공들일 가치가 있는것 같아서 더 열심히 했던거같다.&lt;/p></description></item><item><title>하찮은감정</title><link>https://yshghid.github.io/docs/hobby/daily/daily5/</link><pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily5/</guid><description>&lt;h1 id="하찮은감정">
 하찮은감정
 &lt;a class="anchor" href="#%ed%95%98%ec%b0%ae%ec%9d%80%ea%b0%90%ec%a0%95">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-15&lt;/p>
&lt;hr>
&lt;p>취준시작하고 첫분기는 혼란그자체였다. 잡코리아에 생물정보학 쳐서 나오는곳 아무데나 내고 가면 되는줄알았는데 대기업들은 훨씬 덜 세부적인(?) 직무를 뽑고있었고 분야별 큰그림을 봣을땐 내가 햇던 연구가 어디에도 속하지 않는 느낌을 받았다. 보다보니까 내가 뭘 한건지도 잘 모르겠었다 바이오 공정기술도 내고 반도체 양산관리도 내고 AI도 내고 사업개발도 내고 dx 직무도 냈는데 전부 서탈했다. 공기업은 건축 토목이 메인같기도 하고 공기업/사기업 둘중에 하나 고정해서 하는게 좋다고 하길래 일치감치 포기했다.&lt;/p>
&lt;p>1월 중순부터 3월 중순까지 두달정도 미친듯이 취준생각만 했는데, 마냥 달리다보니까 방향성도 못잡겠고 낼곳도 하나도없는것같고 관심없는 기업에대해서 관심을 글로 적고 미래를 생각하는게 너무 어려워서 초단기 번아웃으로 몸도 마음도 드러누워버렸다. 2주 소강상태로 쉬고나니까 뿔났던 마음도 가라앉고 조금은 이성적으로 된거같다 ㅋㅋ&lt;/p></description></item><item><title>추세매매전략, AI 주가예측전략</title><link>https://yshghid.github.io/docs/study/tech/tech6/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech6/</guid><description>&lt;h1 id="추세매매전략-ai-주가예측전략">
 추세매매전략, AI 주가예측전략
 &lt;a class="anchor" href="#%ec%b6%94%ec%84%b8%eb%a7%a4%eb%a7%a4%ec%a0%84%eb%9e%b5-ai-%ec%a3%bc%ea%b0%80%ec%98%88%ec%b8%a1%ec%a0%84%eb%9e%b5">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-04-14&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech5/#%eb%b3%b4%ec%a1%b0%ec%a7%80%ed%91%9c%eb%a1%9c-%eb%a7%8c%eb%93%9c%eb%8a%94-%ec%b6%94%ec%84%b8%eb%a7%a4%eb%a7%a4%ec%a0%84%eb%9e%b5">보조지표로 만드는 추세매매전략&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="보조지표로-만드는-추세매매전략">
 보조지표로 만드는 추세매매전략
 &lt;a class="anchor" href="#%eb%b3%b4%ec%a1%b0%ec%a7%80%ed%91%9c%eb%a1%9c-%eb%a7%8c%eb%93%9c%eb%8a%94-%ec%b6%94%ec%84%b8%eb%a7%a4%eb%a7%a4%ec%a0%84%eb%9e%b5">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-개념">
 1. 개념
 &lt;a class="anchor" href="#1-%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>RSI: 과열 여부 기반 매매&lt;/p>
&lt;ul>
&lt;li>주식의 가격이 &amp;lsquo;너무&amp;rsquo;오를 때 팔고, &amp;lsquo;너무&amp;rsquo; 내릴 때 사는 전략&lt;/li>
&lt;li>&amp;lsquo;너무&amp;rsquo;의 정의는? 과매도/과매수를 판별하는 기술적 지표(Technical Indicator)를 통해 데이터를 통한 매매.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Technical Indicator&lt;/p>
&lt;ul>
&lt;li>Trend-Following: 가격 움직임의 추세 및 방향 e.g. Simple Moving Average (SMA)&lt;/li>
&lt;li>Momentum: 가격 움직임의 강도 e.g. Relative Strength Index (RSI)&lt;/li>
&lt;li>Volatility: 가격 움직임 및 시장의 변동성 e.g. Bollinger Bands (BB)&lt;/li>
&lt;li>Volume: 체결 수량과 관련 e.g. Money Flow Index (MFI)&lt;/li>
&lt;li>etc: &amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>RSI (상대 강도 지수)&lt;/p></description></item><item><title>Hugo 블로그 scss 커스텀하기 (visited 링크 글자색 수정)</title><link>https://yshghid.github.io/docs/study/tech/tech5/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech5/</guid><description>&lt;h1 id="hugo-블로그-scss-커스텀하기-visited-링크-글자색-수정">
 Hugo 블로그 scss 커스텀하기 (visited 링크 글자색 수정)
 &lt;a class="anchor" href="#hugo-%eb%b8%94%eb%a1%9c%ea%b7%b8-scss-%ec%bb%a4%ec%8a%a4%ed%85%80%ed%95%98%ea%b8%b0-visited-%eb%a7%81%ed%81%ac-%ea%b8%80%ec%9e%90%ec%83%89-%ec%88%98%ec%a0%95">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/9da1fb5b-77a7-4367-838f-640f4567b07b" alt="image" />&lt;/p>
&lt;p>기존 화면에서 방문하지않은 하이퍼링크는 파란색, 방문한 링크는 보라색으로 표시됐는데, 뭔가 링크를 누르는 느낌보다는 글을 누르는 느낌이 났으면 좋겠어서 + 근데 링크인건 인지돼야해서 적절한 색깔로 바꿔주고 싶었다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/488cc4e5-44a4-46d9-9674-2cbec8e46711" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://github.com/alex-shpak/hugo-book/tree/master">Hugo Book Theme 깃히브&lt;/a>를 확인해보면 assets 디렉토리에 _variables.scss 파일을 생성해주면 되는듯해서 아래와 같이 넣어줬다.&lt;/p>
&lt;pre tabindex="0">&lt;code>// Themes
@mixin theme-light {
 --gray-100: #f8f9fa;
 --gray-200: #e9ecef;
 --gray-500: #adb5bd;

 --color-link: #0f5294;//#2619c1;//#0055bb;
 --color-visited-link: #0f5294;//#2619c1;//#0055bb;//#8440f1;

 --body-background: white;
 --body-font-color: black;

 --icon-filter: none;

 --hint-color-info: #6bf;
 --hint-color-warning: #fd6;
 --hint-color-danger: #f66;
}
&lt;/code>&lt;/pre>&lt;p>여러 색깔을 시도한 흔적.. ㅋㅋ&lt;/p></description></item><item><title>사실내가 하고싶은것</title><link>https://yshghid.github.io/docs/hobby/daily/daily4/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily4/</guid><description>&lt;h1 id="사실내가-하고싶은것">
 사실내가 하고싶은것
 &lt;a class="anchor" href="#%ec%82%ac%ec%8b%a4%eb%82%b4%ea%b0%80-%ed%95%98%ea%b3%a0%ec%8b%b6%ec%9d%80%ea%b2%83">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-13&lt;/p>
&lt;hr>
&lt;p>컴학에서 3년동안 인턴+석사를 하면서 즐겁고 몰입되고 재밌는 순간도 꽤 많았는데 진로를 정하자니까 고민된다.&lt;/p>
&lt;ol>
&lt;li>공부&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>나는 공부를 좋아함&lt;/li>
&lt;li>나보다 공부를 좋아하거나 공부를 잘하는 사람은 대학원에 많음&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>좋아하는것&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>읽고 이해하는거&lt;/li>
&lt;li>영화보거나 책보거나 영상보고 생각정리하는거&lt;/li>
&lt;li>일기쓰기&lt;/li>
&lt;li>쇼핑하기&lt;/li>
&lt;li>좋아하는 사람들이랑 이야기하기 맛있는거 먹으러가기&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>했을때 즐거웠던것&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>카페알바 했을때&lt;/li>
&lt;li>연구 (방법론을 찾고 수행해서 결과물 내기)&lt;/li>
&lt;li>베이킹&lt;/li>
&lt;/ul>
&lt;p>남들 눈 신경쓰지 않고 이기적인 선택을 하자면, 내가 하고싶은일은 프랜차이즈 카페에서 알바하고 여가시간에는 책읽고 영화보고 좋아하는사람 만나고, 트레이딩 알고리즘 공부하면서 재태크도 하고. 이런 삶을 살고싶다.&lt;/p></description></item><item><title>백테스팅 #1 (2025년 4월 11일 삼성전자)</title><link>https://yshghid.github.io/docs/study/tech/tech4/</link><pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech4/</guid><description>&lt;h1 id="백테스팅-1-2025년-4월-11일-삼성전자">
 백테스팅 #1 (2025년 4월 11일 삼성전자)
 &lt;a class="anchor" href="#%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-1-2025%eb%85%84-4%ec%9b%94-11%ec%9d%bc-%ec%82%bc%ec%84%b1%ec%a0%84%ec%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-13&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;ul>
&lt;li>복습삼아!! 주가 데이터를 FinanceDataReader로 가져와서 돌려보았다.&lt;/li>
&lt;li>환경은 jupyter notebook이고 python version 3.8이다.&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>python &lt;span style="color:#f92672">--&lt;/span>version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>Python 3.8.19
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1-install-packages">
 1. Install Packages
 &lt;a class="anchor" href="#1-install-packages">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>pip install plotly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>pip install finance&lt;span style="color:#f92672">-&lt;/span>datareader
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-load-data">
 2. Load Data
 &lt;a class="anchor" href="#2-load-data">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> FinanceDataReader &lt;span style="color:#66d9ef">as&lt;/span> fdr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> fdr&lt;span style="color:#f92672">.&lt;/span>DataReader(&lt;span style="color:#e6db74">&amp;#39;005930&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;2010&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;timestamp&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>index&lt;span style="color:#f92672">.&lt;/span>tolist()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>reset_index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d&lt;span style="color:#f92672">.&lt;/span>columns &lt;span style="color:#f92672">=&lt;/span> [col&lt;span style="color:#f92672">.&lt;/span>lower() &lt;span style="color:#66d9ef">for&lt;/span> col &lt;span style="color:#f92672">in&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>columns]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;ticker&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;005930&amp;#39;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> d[[&lt;span style="color:#e6db74">&amp;#39;timestamp&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ticker&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;open&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;high&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;low&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;volume&amp;#39;&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/1e05f50b-ceb8-4396-a769-6570e8b816c2" alt="image" />&lt;/p></description></item><item><title>오퐁드부아 이터리</title><link>https://yshghid.github.io/docs/hobby/daily/daily3/</link><pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily3/</guid><description>&lt;h1 id="오퐁드부아-이터리">
 오퐁드부아 이터리
 &lt;a class="anchor" href="#%ec%98%a4%ed%90%81%eb%93%9c%eb%b6%80%ec%95%84-%ec%9d%b4%ed%84%b0%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-12&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/dbcf11f7-a359-4ac4-b4be-9f7fab5fcb75" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5e8ea986-8056-4a1b-85b3-5c374a46e33f" alt="image" />&lt;/p>
&lt;p>오퐁드부아 카페는 2번인가 가봤었는데 이터리는 처음이었다!&lt;/p>
&lt;p>내부는 테이블이 크고 간격이 넓어서 좁은느낌은 아니었지만 그래두 카페가 더 초록초록(?)하고 넓고 이쁜거같긴하다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/badc0b71-029b-4ddd-9ac0-28e60f0eedce" alt="image" />&lt;/p>
&lt;p>감자베이컨스프와 빵 / 사워도우와 3가지버터 / 구운로메인샐러드 시켰는데 셋다 엄청 맛있었다..♥&lt;/p>
&lt;p>버터는 트러플/레몬딜/다시마인데 레몬딜이 젤 좋았고 커피는 산미없는데 쓴맛도없는 다크원두여서 딱 좋아하는 맛이었다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/6268377a-cda8-4bd4-b73e-421853dd5c00" alt="image" />&lt;/p>
&lt;p>추가로 치아바타와 올리브오일브레드딥도 시켰는데 요녀석이 찐이었음 식빵을 강화한맛!!&lt;/p>
&lt;p>담에 오면 1. 치아바타와 올리브오일브레드딥 2. 구운로메인샐러드 일케 두개 먹을듯.&lt;/p></description></item><item><title>가혹한 현실과 확고한 믿음</title><link>https://yshghid.github.io/docs/hobby/book/book16/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book16/</guid><description>&lt;h1 id="가혹한-현실과-확고한-믿음">
 가혹한 현실과 확고한 믿음
 &lt;a class="anchor" href="#%ea%b0%80%ed%98%b9%ed%95%9c-%ed%98%84%ec%8b%a4%ea%b3%bc-%ed%99%95%ea%b3%a0%ed%95%9c-%eb%af%bf%ec%9d%8c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-10&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&amp;ldquo;크리스마스에는 집에 돌아갈 거야&amp;quot;라고 입버릇처럼 말하는 사람은,&lt;/p>
&lt;p>크리스마스가 왔다 지나가면 정신적으로 완전히 무너지곤 했다. 스톡데일의 말에 따르면 &amp;ldquo;그들은 죽을 만큼 괴로워했다&amp;quot;고 한다.&lt;/p>
&lt;p>스톡데일은 상황이 나아지고 성공할 것이라는 확고한 믿음을 지니는 동시에 가혹한 현실을 받아들여아 한다고 말했다. &amp;lsquo;결국 상황은 나아질 것이다. 그러나 우리는 크리스마스 때까지 나가지는 못할 것이다.&amp;rsquo;&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>심리학자 로런 앨로이와 린 이본 에이브럼슨은 &amp;lsquo;우울한 현실주의&amp;rsquo;라는 인상적인 개념을 소개했다.&lt;/p>
&lt;p>이는 우울한 사람이 삶이 얼마나 위험하고 위태로운지에 관해 더 현실적인 감각을 지니기 때문에 세상을 더 정확하게 바라본다는 것을 의미한다.&lt;/p></description></item><item><title>Github #2 Ubuntu 20.04 brownout 오류</title><link>https://yshghid.github.io/docs/study/tech/study1/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/study1/</guid><description>&lt;h1 id="github-2-ubuntu-2004-brownout-오류">
 Github #2 Ubuntu 20.04 brownout 오류
 &lt;a class="anchor" href="#github-2-ubuntu-2004-brownout-%ec%98%a4%eb%a5%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-04-09&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/43de5741-43f6-41ec-a76b-8a79fd8fba51" alt="image" />&lt;/p>
&lt;p>블로그 수정하는데 갑자기 처음보는 오류가 발생,,&lt;/p>
&lt;p>찾아보니 ubuntu-20.04 GitHub Actions runner가 2025년 4월 15일에 지원 종료함에 따라 workflow에서 runs-on: ubuntu-20.04를 사용중이라면 runs-on: ubuntu-22.04로 수정하라는 내용이었다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-22.04&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>gh-pages.yml&lt;/code>에 들어가서 runs-on: ubuntu-20.04를 runs-on: ubuntu-22.04로 바꿔주니까 다시 돌아간다!&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 스택/큐</title><link>https://yshghid.github.io/docs/study/tech/tech8/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech8/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---스택큐">
 프로그래머스 알고리즘 고득점 kit - 스택/큐
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ec%8a%a4%ed%83%9d%ed%81%90">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">[스택/큐] 기능개발&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%98%ac%eb%b0%94%eb%a5%b8-%ea%b4%84%ed%98%b8">[스택/큐] 올바른 괄호&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4">[스택/큐] 프로세스&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%8b%a4%eb%a6%ac%eb%a5%bc-%ec%a7%80%eb%82%98%eb%8a%94-%ed%8a%b8%eb%9f%ad">[스택/큐] 다리를 지나는 트럭&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="기능개발">
 기능개발
 &lt;a class="anchor" href="#%ea%b8%b0%eb%8a%a5%ea%b0%9c%eb%b0%9c">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">93&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">55&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">99&lt;/span>,&lt;span style="color:#ae81ff">97&lt;/span>] speeds &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>]이면
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">100&lt;/span>,&lt;span style="color:#ae81ff">98&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">99&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>, answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">100&lt;/span>] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> answer &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnt&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> progresses &lt;span style="color:#f92672">=&lt;/span> [] &lt;span style="color:#f92672">-&amp;gt;&lt;/span> 종료
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(progresses, speeds):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(progresses)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses[i] &lt;span style="color:#f92672">+=&lt;/span> speeds[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> progresses &lt;span style="color:#f92672">and&lt;/span> progresses[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> progresses&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> speeds&lt;span style="color:#f92672">.&lt;/span>pop(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> cnt&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer&lt;span style="color:#f92672">.&lt;/span>append(cnt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> answer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42586">https://school.programmers.co.kr/learn/courses/30/lessons/42586&lt;/a>&lt;/p></description></item><item><title>프로그래머스 알고리즘 고득점 kit - 해시, 정렬</title><link>https://yshghid.github.io/docs/study/tech/study2/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/study2/</guid><description>&lt;h1 id="프로그래머스-알고리즘-고득점-kit---해시-정렬">
 프로그래머스 알고리즘 고득점 kit - 해시, 정렬
 &lt;a class="anchor" href="#%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%a8%b8%ec%8a%a4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ea%b3%a0%eb%93%9d%ec%a0%90-kit---%ed%95%b4%ec%8b%9c-%ec%a0%95%eb%a0%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[해시] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%a0%84%ed%99%94%eb%b2%88%ed%98%b8-%eb%aa%a9%eb%a1%9d">[해시] 전화번호 목록&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%9d%98%ec%83%81">[해시] 의상&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">[정렬] 완주하지 못한 선수&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-09&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#h-index">[정렬] H-Index&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/study2/#%eb%b2%a0%ec%8a%a4%ed%8a%b8%ec%95%a8%eb%b2%94">[해시] 베스트앨범&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="완주하지-못한-선수">
 완주하지 못한 선수
 &lt;a class="anchor" href="#%ec%99%84%ec%a3%bc%ed%95%98%ec%a7%80-%eb%aa%bb%ed%95%9c-%ec%84%a0%ec%88%98">#&lt;/a>
&lt;/h2>
&lt;h3 id="입출력-예">
 입출력 예
 &lt;a class="anchor" href="#%ec%9e%85%ec%b6%9c%eb%a0%a5-%ec%98%88">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>participant &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completion &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>]	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="개념">
 개념
 &lt;a class="anchor" href="#%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kiki&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;eden&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Counter([&lt;span style="color:#e6db74">&amp;#34;leo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&lt;/span> Counter([&lt;span style="color:#e6db74">&amp;#34;kiki&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;eden&amp;#34;&lt;/span>]) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;leo&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>} (key별로 value를 빼서 &lt;span style="color:#ae81ff">0&lt;/span>이나 음수되면 제거)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드">
 코드
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> Counter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer &lt;span style="color:#f92672">=&lt;/span> Counter(participant) &lt;span style="color:#f92672">-&lt;/span> Counter(completion)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list(answer&lt;span style="color:#f92672">.&lt;/span>keys())[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="코드2">
 코드2
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">solution&lt;/span>(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> participant&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> completion&lt;span style="color:#f92672">.&lt;/span>sort()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> p,c &lt;span style="color:#f92672">in&lt;/span> zip(participant, completion):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> p &lt;span style="color:#f92672">!=&lt;/span> c:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> participant[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>문제 링크 &lt;a href="https://school.programmers.co.kr/learn/courses/30/lessons/42576">https://school.programmers.co.kr/learn/courses/30/lessons/42576&lt;/a>&lt;/p></description></item><item><title>전략 백테스팅</title><link>https://yshghid.github.io/docs/study/tech/tech1/</link><pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech1/</guid><description>&lt;h1 id="전략-백테스팅">
 전략 백테스팅
 &lt;a class="anchor" href="#%ec%a0%84%eb%9e%b5-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-03-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech1/#%ec%a0%84%eb%9e%b5-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-%eb%a7%a4%eb%a7%a4-%ec%8b%9c%ea%b7%b8%eb%84%90">전략 백테스팅, 매매 시그널&lt;/a>&lt;/p>
&lt;p>&lt;em>2025-03-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech1/#%ea%b8%b0%ec%b4%88-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-%eb%aa%a8%eb%8d%b8-%ea%b0%9c%eb%b0%9c">기초 백테스팅 모델 개발&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="전략-백테스팅-매매-시그널">
 전략 백테스팅, 매매 시그널
 &lt;a class="anchor" href="#%ec%a0%84%eb%9e%b5-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-%eb%a7%a4%eb%a7%a4-%ec%8b%9c%ea%b7%b8%eb%84%90">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-개념">
 1. 개념
 &lt;a class="anchor" href="#1-%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>백테스팅(Backtesting): 과거 데이터로부터 내 전략의 예상 수익과 리스크를 정량적으로 평가하는 테스트 방법. &lt;br>
&lt;img src="https://github.com/user-attachments/assets/a81db9db-92e9-4d24-a69a-e064ed94b383" alt="image" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>매매 시그널&lt;/p>
&lt;ul>
&lt;li>알고리즘으로 계산한 매수/매도 타점&lt;/li>
&lt;li>몇 주를 살지, 매매 가능한 시점인지(거래정지 등)도 고려&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>백테스팅과 매매 시그널의 관계&lt;/p>
&lt;ul>
&lt;li>매매 시그널대로 매매할 때, 각 시점별 수억률 그래프를 그려보는 것이 백테스팅&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-실습">
 2. 실습
 &lt;a class="anchor" href="#2-%ec%8b%a4%ec%8a%b5">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>매매 시그널 생성 실습
&lt;ul>
&lt;li>데이터: 삼성전자 일봉 데이터&lt;/li>
&lt;li>전략: 전일 종가가 최근 5일 종가 중 가장 낮다면 종가 매수, 마지막 매수 5일 후 전량 종가 매도.&lt;/li>
&lt;li>매수/매도 날짜, 가격을 계산하기.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pandas &lt;span style="color:#66d9ef">as&lt;/span> pd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dirpath &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/data/home/ysh980101/2504/Bin2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> pd&lt;span style="color:#f92672">.&lt;/span>read_parquet(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>dirpath&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/005930.parquet&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>	timestamp	ticker	open	high	low	close	volume
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0	20100104	005930	16060.0	16180.0	16000.0	16180.0	11963550.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1	20100105	005930	16520.0	16580.0	16300.0	16440.0	27960950.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2	20100106	005930	16580.0	16820.0	16520.0	16820.0	22987750.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3	20100107	005930	16820.0	16820.0	16260.0	16260.0	22161850.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4	20100108	005930	16400.0	16420.0	16120.0	16420.0	14789900.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...	...	...	...	...	...	...	...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3529	20240423	005930	76400.0	76800.0	75500.0	75500.0	18717699.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3530	20240424	005930	77500.0	78800.0	77200.0	78600.0	22166150.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3531	20240425	005930	77300.0	77500.0	76300.0	76300.0	15549134.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3532	20240426	005930	77800.0	77900.0	76500.0	76700.0	12755629.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3533	20240429	005930	77400.0	77600.0	76200.0	76700.0	14664474.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3534 rows × 7 columns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>컬럼: open(시가), high(고가), low(저가), close(종가), volume(물량)&lt;/li>
&lt;li>일별 데이터&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 오늘 포함 과거 5일 종가 중 최고값&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;5d_max&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>rolling(&lt;span style="color:#ae81ff">5&lt;/span>)[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>max()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 오늘 포함 과거 5일 종가 중 최저값&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;5d_min&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>rolling(&lt;span style="color:#ae81ff">5&lt;/span>)[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>min() 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 전일 종가&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;last_1d_close&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> d[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>shift(&lt;span style="color:#ae81ff">1&lt;/span>) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 20일 이동평균&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[&lt;span style="color:#e6db74">&amp;#39;20d_mean&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>rolling(&lt;span style="color:#ae81ff">20&lt;/span>)[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>mean()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>5d_max의 경우 앞의 5개가 없는 시점(첫 4일)은 NaN&lt;/li>
&lt;li>20d_mean의 경우 앞의 19개가 NaN&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 종가가 5일 최저가이고, 20일 이동평균보다 낮은 시점만 뽑기&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>buy &lt;span style="color:#f92672">=&lt;/span> d[(d[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> d[&lt;span style="color:#e6db74">&amp;#39;5d_min&amp;#39;&lt;/span>]) &lt;span style="color:#f92672">&amp;amp;&lt;/span> (d[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>] &lt;span style="color:#f92672">&amp;lt;&lt;/span> d[&lt;span style="color:#e6db74">&amp;#39;20d_mean&amp;#39;&lt;/span>])]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>buy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>	timestamp	ticker	open	high	low	close	volume	5d_max	5d_min	last_1d_close	20d_mean
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>19	20100129	005930	16000.0	16020.0	15600.0	15680.0	22864250.0	16840.0	15680.0	16160.0	16402.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>20	20100201	005930	15680.0	15700.0	15300.0	15540.0	25052100.0	16300.0	15540.0	15680.0	16370.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>21	20100202	005930	15800.0	15800.0	15400.0	15440.0	19690150.0	16160.0	15440.0	15540.0	16320.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>24	20100205	005930	15160.0	15220.0	14940.0	15000.0	25751700.0	15540.0	15000.0	15520.0	16148.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>25	20100208	005930	14940.0	15080.0	14820.0	14960.0	21980400.0	15540.0	14960.0	15000.0	16099.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...	...	...	...	...	...	...	...	...	...	...	...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3524	20240416	005930	81200.0	81300.0	79400.0	80000.0	31949845.0	84100.0	80000.0	82200.0	81400.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3525	20240417	005930	80700.0	80800.0	78900.0	78900.0	22611631.0	84100.0	78900.0	80000.0	81705.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3527	20240419	005930	78300.0	78700.0	76300.0	77600.0	31317563.0	82200.0	77600.0	79600.0	81755.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3528	20240422	005930	77400.0	77500.0	75100.0	76100.0	30469477.0	80000.0	76100.0	77600.0	81615.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3529	20240423	005930	76400.0	76800.0	75500.0	75500.0	18717699.0	79600.0	75500.0	76100.0	81480.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>723 rows × 11 columns
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>매매 시그널 뽑기: 오늘 종가가 최근 5일 종가의 최솟값보다 작으면서, 20일의 일평균보다 낮은 경우만 뽑기&lt;/li>
&lt;li>총 723개 시점&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># plt.plot을 활용해 주가 그래프 출력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>figure(figsize&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#ae81ff">15&lt;/span>,&lt;span style="color:#ae81ff">8&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plt&lt;span style="color:#f92672">.&lt;/span>plot(d[&lt;span style="color:#e6db74">&amp;#39;close&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/6960f4ab-5d93-4d51-b298-16924b814573" alt="image" />&lt;/p></description></item><item><title>정량적 백테스팅 성과 분석</title><link>https://yshghid.github.io/docs/study/tech/tech2/</link><pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech2/</guid><description>&lt;h1 id="정량적-백테스팅-성과-분석">
 정량적 백테스팅 성과 분석
 &lt;a class="anchor" href="#%ec%a0%95%eb%9f%89%ec%a0%81-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-%ec%84%b1%ea%b3%bc-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-03-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech2/#%ec%a0%84%eb%9e%b5-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85%ea%b3%bc-%ec%88%98%ec%9d%b5%eb%a5%a0-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0">전략 백테스팅과 수익률 그래프 그리기&lt;/a>&lt;/p>
&lt;p>&lt;em>2025-03-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech2/#%ec%a0%95%eb%9f%89%ec%a0%81-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85-%ec%84%b1%ea%b3%bc-%eb%b6%84%ec%84%9d-1">정량적 백테스팅 성과 분석&lt;/a>&lt;/p>
&lt;p>&lt;em>2025-03-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech2/#%ec%a0%84%eb%9e%b5%ea%b3%bc-%eb%b2%a4%ec%b9%98%eb%a7%88%ed%81%ac-%ec%84%b1%ea%b3%bc%ec%a7%80%ed%91%9c-%eb%b9%84%ea%b5%90">전략과 벤치마크 성과지표 비교&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="전략-백테스팅과-수익률-그래프-그리기">
 전략 백테스팅과 수익률 그래프 그리기
 &lt;a class="anchor" href="#%ec%a0%84%eb%9e%b5-%eb%b0%b1%ed%85%8c%ec%8a%a4%ed%8c%85%ea%b3%bc-%ec%88%98%ec%9d%b5%eb%a5%a0-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-개념">
 1. 개념
 &lt;a class="anchor" href="#1-%ea%b0%9c%eb%85%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>로직 설명&lt;/p>
&lt;ul>
&lt;li>삼성전자 일봉 사용&lt;/li>
&lt;li>최근 5일 종가 중 당일 종가 가격이 가장 낮고, 20일 이동평균보다 종가가 더 낮은 경우 매수 (여기까지만 있다면? 주가가 무한히 떨어지면 무한 매수하게되므로 실거래시에는 사용하기어려움. 그래서 아래 2개 추가)&lt;/li>
&lt;li>단, 현재 보유 종목이 있다면 추가매수 없음&lt;/li>
&lt;li>매수 3일차 종가에 매도&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>슬리피지 적용&lt;/p></description></item><item><title>Kaggle 타이타닉 EDA</title><link>https://yshghid.github.io/docs/study/tech/tech3/</link><pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/tech3/</guid><description>&lt;h1 id="kaggle-타이타닉-eda">
 Kaggle 타이타닉 EDA
 &lt;a class="anchor" href="#kaggle-%ed%83%80%ec%9d%b4%ed%83%80%eb%8b%89-eda">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2025-03-30&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/tech/tech3/#kaggle-api-%ec%82%ac%ec%9a%a9%eb%b2%95">Kaggle API 사용법&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="kaggle-api-사용법">
 Kaggle API 사용법
 &lt;a class="anchor" href="#kaggle-api-%ec%82%ac%ec%9a%a9%eb%b2%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-사전-설정">
 1. 사전 설정
 &lt;a class="anchor" href="#1-%ec%82%ac%ec%a0%84-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>pip install kaggle
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>Collecting kaggle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Downloading kaggle-1.7.4.2-py3-none-any.whl.metadata (16 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: bleach in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (6.1.0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: certifi&amp;gt;=14.05.14 in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (2024.7.4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: charset-normalizer in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (3.3.2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: idna in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (3.7)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Collecting protobuf (from kaggle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Downloading protobuf-5.29.4-cp38-abi3-macosx_10_9_universal2.whl.metadata (592 bytes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: python-dateutil&amp;gt;=2.5.3 in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (2.9.0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Collecting python-slugify (from kaggle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Downloading python_slugify-8.0.4-py2.py3-none-any.whl.metadata (8.5 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: requests in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (2.32.3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: setuptools&amp;gt;=21.0.0 in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (75.1.0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: six&amp;gt;=1.10 in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (1.16.0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Collecting text-unidecode (from kaggle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Downloading text_unidecode-1.3-py2.py3-none-any.whl.metadata (2.4 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Collecting tqdm (from kaggle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Downloading tqdm-4.67.1-py3-none-any.whl.metadata (57 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: urllib3&amp;gt;=1.15.1 in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (2.2.2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requirement already satisfied: webencodings in /opt/anaconda3/envs/workspace/lib/python3.8/site-packages (from kaggle) (0.5.1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading kaggle-1.7.4.2-py3-none-any.whl (173 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading protobuf-5.29.4-cp38-abi3-macosx_10_9_universal2.whl (417 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading python_slugify-8.0.4-py2.py3-none-any.whl (10 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading tqdm-4.67.1-py3-none-any.whl (78 kB)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Installing collected packages: text-unidecode, tqdm, python-slugify, protobuf, kaggle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Successfully installed kaggle-1.7.4.2 protobuf-5.29.4 python-slugify-8.0.4 text-unidecode-1.3 tqdm-4.67.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>캐글 설치&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir .kaggle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd .kaggle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv /Users/yshmbid/Desktop/kaggle.json .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">600&lt;/span> kaggle.json &lt;span style="color:#75715e"># 사용자 권한을 사용자 ID만 읽고 쓸수있게 하겠다는 의미&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Kaggle API 토큰 생성&lt;/li>
&lt;li>kaggle.json 파일을 위 경로에 넣기&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>kaggle competitions download &lt;span style="color:#f92672">-&lt;/span>c titanic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>titanic 데이터 다운로드.&lt;/li>
&lt;li>bash에서 확인해보면?&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/yshmbid/project/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1-kaggle.ipynb	titanic.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>titanic.zip이 생겼다!&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>강의 링크 &lt;a href="https://www.inflearn.com/course/%EC%B2%98%EC%9D%8C-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EC%9E%85%EB%AC%B8/dashboard">https://www.inflearn.com/course/%EC%B2%98%EC%9D%8C-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EC%9E%85%EB%AC%B8/dashboard&lt;/a>&lt;/p></description></item><item><title>취약성</title><link>https://yshghid.github.io/docs/hobby/book/book20/</link><pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book20/</guid><description>&lt;h1 id="취약성">
 취약성
 &lt;a class="anchor" href="#%ec%b7%a8%ec%95%bd%ec%84%b1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-03-29&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&amp;ldquo;기분이 최고로 좋았을 때를 10이라고 하면, 지금 기분은 1에서 10 중 몇 정도인가요?&amp;rdquo; 그녀는 조용히 내 답을 기다렸다.&lt;/p>
&lt;p>&amp;ldquo;6에서 7 정도요.&amp;rdquo;&lt;/p>
&lt;p>정말 답하기 어려운 질문이다. 나는 환자들에게 생각하지 말고 직감적으로 답하라고 요구한다. 하지만 &amp;lsquo;7&amp;rsquo;이란 건 내 솔직한 느낌이었을까, 아니면 일반 환자 대신 상담 시간을 차지한 내 행동을 합리화하려는 의도였을까?&lt;/p>
&lt;p>난 내 우울증의 원인을 오랫동안 탐구했다. 어떤 힘든 일이 닥치면 며칠도 안 되어 극심한 절망에 빠지는 이유가 뭘까. 정신역동치료는 과거의 인간관계가 현재에 미치는 영향을 통찰해보려는 쪽이다. 반면 인지행동치료는 현실을 자신에게 해로운 관점으로 보기 때문에 &amp;lsquo;지금 이곳에서&amp;rsquo; 우울해진다고 보고 그런 관점을 개선하려는 쪽이다.&lt;/p></description></item><item><title>카페 오딘</title><link>https://yshghid.github.io/docs/hobby/daily/daily12/</link><pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily12/</guid><description>&lt;h1 id="카페-오딘">
 카페 오딘
 &lt;a class="anchor" href="#%ec%b9%b4%ed%8e%98-%ec%98%a4%eb%94%98">#&lt;/a>
&lt;/h1>
&lt;p>#2025-03-29&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/38c46c83-b5b8-4ce6-8f02-2d58b7c77ef1" alt="image" />&lt;/p>
&lt;p>바다뷰가 넘 예뻤던 카페&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7adb3a81-b533-427a-83ef-8f1a386ffc80" alt="image" />&lt;/p>
&lt;p>저 크림들어간 크로와상이 완전 짱맛..! 샐러드두 맛있었당&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/20c7941c-b370-43e8-8190-f50f35f02004" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/45973a5b-a669-49ce-89f9-fbc8b5ee55d3" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/cb2b7aa8-7644-46ab-960d-9d6c82712ed6" alt="image" />&lt;/p>
&lt;p>바깥뷰도 이뻐서 나가서 걸어주기에좋다&lt;/p>
&lt;p>이날 기분이별로였어서 아쉽다 담에가면 더마싯게먹고 잘구경하고다닐텐데!!!! 아쉬움이남아서 다시가고싶다 ㅎ&lt;/p></description></item><item><title>수용</title><link>https://yshghid.github.io/docs/hobby/book/book19/</link><pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book19/</guid><description>&lt;h1 id="수용">
 수용
 &lt;a class="anchor" href="#%ec%88%98%ec%9a%a9">#&lt;/a>
&lt;/h1>
&lt;p>#2025-03-20&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>지금까지 의사로 일하면서, 인생 계획을 완벽하게 할 수 있다고 생각하는 사람들을 많이 보았다. 그런 사람은 자녀들 인생까지도 그런 식으로 계획하려고 한다. 그리 생각하는 게 무리가 아닐지도 모른다. 살면서 정말 나쁜 일을 당해본 적이 한 번도 없고 모든 일이 기대한 대로 풀린 사람이라면 그럴 수 있다. 그러다가 상실을 경험하게 되면 그것이 본인의 자아정체감이나 인생의 이정표와 관련이 클수록 받아들이기가 더 힘들어진다. 나는 시험에 떨어지면서 계획이 일시적으로 틀어졌다. 주도면밀하게 그려놓았던 인생 계획이 어그러졌다. 누가 만들어준 계획은 분명히 아니었다. 오로지 내 생각만으로 만든 계획이라고 믿었다. 나도 어쩌면 대니얼처럼, 아버지의 마음에 들려고 애쓰고 있는 건지도 모른다는 사실은 무시했다. 게다가 이미 돌아가시고 세상에 있지도 않은 아버지였으니. 지금 생각해보면 나는 그때, 아버지가 돌아가신 후로 계속 나타나고 있던 균열을 적당히 땜질만 하며 수습하고 있었다. 그때는 길을 잠깐 잃었다가 다시 찾았다고만 생각했고, 다른 생각은 하지 못했다. 하지만 내게 정말 필요했던 약은, 운명이라 생각했던 길에서 완전히 탈선하는 것이었을지도 모른다. 후에 깨달았지만, 삶이라는 열차가 탈선하여 내달리는 그 혼돈의 순간에는 때로 중요한 메시지가 담겨 있다. 앞으로 무엇을 바꾸면서 살아야 할지, 너무 늦기 전에 생각해보라는 메시지다. 그런 의문에 답할 수 있다면, 자신만의 목표를 향해 다시 앞으로 나아갈 수 있다. 자신이 스스로 정한 목표는 이룰 가능성도 더 높은 법이다.&lt;/p></description></item><item><title>예측</title><link>https://yshghid.github.io/docs/hobby/book/book22/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book22/</guid><description>&lt;h1 id="예측">
 예측
 &lt;a class="anchor" href="#%ec%98%88%ec%b8%a1">#&lt;/a>
&lt;/h1>
&lt;p>#2025-02-21&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>시간과 공간은 고정된 것도 아니고, 무한한 것도 아니며, 서로 독립적인 것도 아니다. 우주를 이해하려면 이들을 합쳐서 4차원, 즉 공간을 나타내는 세 축과 시간을 나타내는 한 축으로 시각화해야 한다.&lt;/p>
&lt;p>호킹 박사는 &amp;lsquo;시공(spacetime)&amp;rsquo; 이라는 개념을 시각화할 때 광원뿔(light cone) 이미지를 활용해 과거와 미래의 사건이 어떻게 연결되는지 보여주었다. 빛은 발산될 때 연못의 물결처럼 퍼져나가면서 원뿔 형태를 형성한다. 빛의 속도보다 빠른 것은 없으므로 (과거에) 기여하거나 (미래에서) 시작된 현재 순간의 모든 사건은 이 원뿔 안에서 빛의 속도나 그보다 느린 속도로 일어나야만 한다.&lt;/p></description></item><item><title>상자와 지도</title><link>https://yshghid.github.io/docs/hobby/book/book21/</link><pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book21/</guid><description>&lt;h1 id="상자와-지도">
 상자와 지도
 &lt;a class="anchor" href="#%ec%83%81%ec%9e%90%ec%99%80-%ec%a7%80%eb%8f%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-02-18&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>더 나은 의사 결정을 하기 위해, 정보에 접근하고 해석하는 방식을 더 체계화할 필요는 없다.
머신러닝이 우리를 그런 방향으로 이끌 것이라고 예상하게 되지만 사실 그 반대다. 알고리즘은 복잡성과 무작위성 속에서 역할을 수행하며, 환경의 변화에 효율적으로 반응하는 능력이 탁월하다. 단순한 패턴을 추구하는 경향은 아이러니하게도 인간의 사고방식에서 나타난다.&lt;/p>
&lt;p>기계는 복잡한 현실을 전체적인 데이터 집합의 또 다른 일부로 여겨 단순하게 접근하는 데 반해, 정작 그로부터 도피하는 것은 우리 인간이다. 단순하거나 직접적이지 않은 대상을 더 복잡한 방식으로 사고하는 통찰력과 자발성이 인간에게 필요한 것이다.&lt;/p></description></item><item><title/><link>https://yshghid.github.io/docs/hobby/book/book29/</link><pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book29/</guid><description>&lt;h1 id="혼돈과-관점">
 혼돈과 관점
 &lt;a class="anchor" href="#%ed%98%bc%eb%8f%88%ea%b3%bc-%ea%b4%80%ec%a0%90">#&lt;/a>
&lt;/h1>
&lt;p>#2025-01-30&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>나는 그에게 통쾌하게 반박해줄 말이 있었으면 싶었다. 우리는 중요하다고, 우리는 사실 아주 중요하다고 말해줄 방법. 그러나 주먹이 올라가는 게 느껴지자마자 내 뇌가 주먹을 다시 잡아당겼다. 왜냐하면 당연히, 우리는 중요하지 않기 때문이다. 이것이 우주의 냉엄한 진실이다. 정말 이상한 일이지만, 이 진실을 무시하는 것은 정확히 데이비드 스타 조던과 똑같이 행동하는 것이다.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>천천히 그것이 초점 속으로 들어왔다. 서로서로 가라앉지 않도록 띄워주는 이 사람들의 작은 그물망이, 이 모든 작은 주고받음-다정하게 흔들어주는 손, 연필로 그린 스케치, 나일론 실에 꿴 플라스틱 구슬들-이 밖에서 보는 사람들에게는 그리 대단치 않은 것일지도 모른다. 하지만 그 그물망이 받쳐주는 사람들에게는 어떨까? 그들에게 그것은 모든 것일 수 있고, 그들을 지구라는 이 행성에 단단히 붙잡아두는 힘 자체일 수도 있다.&lt;/p></description></item><item><title>운명의 형태</title><link>https://yshghid.github.io/docs/hobby/book/book27/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book27/</guid><description>&lt;h1 id="운명의-형태">
 운명의 형태
 &lt;a class="anchor" href="#%ec%9a%b4%eb%aa%85%ec%9d%98-%ed%98%95%ed%83%9c">#&lt;/a>
&lt;/h1>
&lt;p>#2025-01-28&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>“넌 중요하지 않아”라는 말은 아버지의 모든 걸음, 베어 무는 모든 것에 연료를 공급하는 것 같았다. “그러니 너 좋은 대로 살아.” 아버지는 수년 동안 오토바이를 몰고, 엄청난 양의 맥주를 마시고, 물에 들어가는 게 가능할 때마다 큰 배로 풍덩 수면을 치며 물속으로 뛰어들었다. 아버지는 언제나 게걸스러운 자신의 쾌락주의에 한계를 설정하는 자기만의 도덕률을 세우고 또 지키고자 자신에게 단 하나의 거짓말만을 허용했다. 그 도덕률은 “다른 사람들도 중요하지 않기는 매한가지지만, 그들에게는 그들이 중요한 것처럼 행동하며 살아가라”는 것이었다.&lt;/p></description></item><item><title>대학원생 면접대비캠프</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi12/</link><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi12/</guid><description>&lt;h1 id="대학원생-면접대비캠프">
 대학원생 면접대비캠프
 &lt;a class="anchor" href="#%eb%8c%80%ed%95%99%ec%9b%90%ec%83%9d-%eb%a9%b4%ec%a0%91%eb%8c%80%eb%b9%84%ec%ba%a0%ed%94%84">#&lt;/a>
&lt;/h1>
&lt;p>#2025-01-01&lt;/p>
&lt;hr>
&lt;p>대학원생 대상으로 면접대비 강의가 있길래 신청해봤다!&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/edc9aec6-56f9-4d51-b802-7351cf31183c" alt="image" />&lt;/p>
&lt;p>화수목은 5시부터 9시이구 금요일은 1시부터 6시반이라서 금요일은 일찍 퇴근할수있으면 퇴근하고 듣는게 좋을듯. 토요일은 10시부터 오프라인으로 한다.&lt;/p>
&lt;p>이번주 랩미팅이 목요일 2시에 있고 논문 미팅은 금요일 아침 9시라서 크게 겹치지는 않아 매우 다행이다!!&lt;/p>
&lt;p>cf)&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/20e3b74d-1879-4df3-8fef-d0451cd31544" alt="image" />&lt;/p>
&lt;p>원래 이런문자 다 무시하는데 ㅋㅋ 갑자기 눈에 들어와서 신청함..&lt;/p>
&lt;hr>
&lt;h2 id="1일차---면접-기초">
 1일차 - 면접 기초
 &lt;a class="anchor" href="#1%ec%9d%bc%ec%b0%a8---%eb%a9%b4%ec%a0%91-%ea%b8%b0%ec%b4%88">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>1.9 오후 7시에 질문 받음.&lt;/li>
&lt;li>1.10은 논문 기반 세미나 pt 면접 시뮬레이션. 목요일에 신청받는다.&lt;/li>
&lt;li>토요일 모의면접 일정(오늘 9시에 신청)
&lt;img src="https://github.com/user-attachments/assets/6917d9e1-f04c-4ae8-ae67-896a8c7cc39e" alt="image" />
-&amp;gt; 경북대학교 복지관 4층.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.onoffmix.com/event/315732">https://www.onoffmix.com/event/315732&lt;/a>&lt;/p></description></item><item><title>DESeq2 워크플로우</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi10/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi10/</guid><description>&lt;h1 id="코드-deseq2-워크플로우">
 [코드] DESeq2 워크플로우
 &lt;a class="anchor" href="#%ec%bd%94%eb%93%9c-deseq2-%ec%9b%8c%ed%81%ac%ed%94%8c%eb%a1%9c%ec%9a%b0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7084798e-4027-4b3f-9ed4-b5d815d05434" alt="image" />&lt;/p>
&lt;h2 id="load-package">
 Load package
 &lt;a class="anchor" href="#load-package">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span># Input: genome_positions = list of genomic loci with H-scores
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># H_scores = dict {position: H_score}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Parameters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># MinPts = 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># eps_scale = 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># diminish_factor = 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initialize hotspots = []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># STEP 1. Search Candidate Core Mutation (CCM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>for position in genome_positions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> H = H_scores[position]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Deps = eps_scale * H
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> neighborhood = get_neighbors_within_deps(position, Deps)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> avg_H = mean([H_scores[n] for n in neighborhood])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sum_H = sum([H_scores[n] for n in neighborhood])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num_mutants = len([n for n in neighborhood if H_scores[n] &amp;gt; 0])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if H &amp;gt; 0.03 and avg_H &amp;gt; 0.01 and sum_H &amp;gt; 0.05 and num_mutants &amp;gt;= MinPts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mark position as CCM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># STEP 2. Cluster Expansion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>for ccm in CCM_list:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster = [ccm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> current_Deps = eps_scale * H_scores[ccm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> for direction in [-1, 1]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> step = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> while True:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> next_pos = ccm + direction * step
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if next_pos not in genome_positions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> break
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dist_from_ccm = abs(next_pos - ccm)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> diminishing_Deps = max(1, int(current_Deps - (dist_from_ccm / diminish_factor)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if dist_from_ccm &amp;gt; diminishing_Deps:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> break
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if H_scores[next_pos] &amp;gt; 0:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cluster.append(next_pos)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> step += 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> if len(cluster) &amp;gt;= MinPts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hotspots.append(cluster)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Output: hotspots = list of identified mutation hotspot clusters
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>DESeq2: DE 분석</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi1/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi1/</guid><description>&lt;h1 id="deseq2-de-분석">
 DESeq2: DE 분석
 &lt;a class="anchor" href="#deseq2-de-%eb%b6%84%ec%84%9d">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;blockquote>
&lt;p>Tool&lt;/p>
&lt;p>Bioconductor - DESeq2 &lt;a href="https://bioconductor.org/packages/release/bioc/html/DESeq2.html">https://bioconductor.org/packages/release/bioc/html/DESeq2.html&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="1-load-package">
 1. Load package
 &lt;a class="anchor" href="#1-load-package">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">suppressMessages&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;DESeq2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(pheatmap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(withr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#library(tidyverse)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(RColorBrewer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(gplots)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">library&lt;/span>(dplyr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-set-path">
 2. Set path
 &lt;a class="anchor" href="#2-set-path">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data-blog/bi1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data-blog/bi1&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-run-deseq2">
 3. Run DESeq2
 &lt;a class="anchor" href="#3-run-deseq2">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>S1 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;33&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>S2 &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;150&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">read.csv&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;results.csv&amp;#34;&lt;/span>, header&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">TRUE&lt;/span>, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">colnames&lt;/span>(countdata) &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;GeneID&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-3&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-3&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-3&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &lt;span style="color:#f92672">&amp;lt;-&lt;/span> countdata[, &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;GeneID&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;150-3&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;33-3&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-1&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-2&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;con-3&amp;#39;&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selected_columns &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">paste&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;GeneID&amp;#39;&lt;/span>,&lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-1&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-2&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-3&amp;#34;&lt;/span>),&lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-1&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-2&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-3&amp;#34;&lt;/span>)), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &lt;span style="color:#f92672">&amp;lt;-&lt;/span> countdata[, selected_columns]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>countdata &lt;span style="color:#f92672">&amp;lt;-&lt;/span> countdata&lt;span style="color:#a6e22e">[rowSums&lt;/span>(countdata[, &lt;span style="color:#ae81ff">-1&lt;/span>]) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sample.names &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">paste&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-1&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-2&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S2,&lt;span style="color:#e6db74">&amp;#34;-3&amp;#34;&lt;/span>),&lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-1&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-2&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">paste0&lt;/span>(S1,&lt;span style="color:#e6db74">&amp;#34;-3&amp;#34;&lt;/span>)), sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>conditions &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">factor&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>(S2,S2,S2,S1,S1,S1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">data.frame&lt;/span>(Sample &lt;span style="color:#f92672">=&lt;/span> sample.names, group &lt;span style="color:#f92672">=&lt;/span> conditions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>N &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">dim&lt;/span>(countdata)[[2]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cData &lt;span style="color:#f92672">=&lt;/span> countdata[,&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>N]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GeneID &lt;span style="color:#f92672">=&lt;/span> countdata[,&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">rownames&lt;/span>(cData) &lt;span style="color:#f92672">=&lt;/span> GeneID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">DESeqDataSetFromMatrix&lt;/span>(countData &lt;span style="color:#f92672">=&lt;/span> cData,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> colData &lt;span style="color:#f92672">=&lt;/span> metadata,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> design &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">~&lt;/span>group)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds&lt;span style="color:#f92672">$&lt;/span>group &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">relevel&lt;/span>(dds&lt;span style="color:#f92672">$&lt;/span>group, ref &lt;span style="color:#f92672">=&lt;/span> S1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">colData&lt;/span>(dds)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dds &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">DESeq&lt;/span>(dds) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vsd &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">vst&lt;/span>(dds, blind&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rld &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">rlogTransformation&lt;/span>(dds, blind&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">FALSE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">results&lt;/span>(dds, contrast &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;group&amp;#34;&lt;/span>, S2, S1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">as.data.frame&lt;/span>(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl&lt;span style="color:#f92672">$&lt;/span>GeneID &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">rownames&lt;/span>(res_tbl)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_tbl &lt;span style="color:#f92672">&amp;lt;-&lt;/span> res_tbl&lt;span style="color:#a6e22e">[order&lt;/span>(res_tbl&lt;span style="color:#f92672">$&lt;/span>padj), ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NM_no_NA &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">na.omit&lt;/span>(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_cut &lt;span style="color:#f92672">&amp;lt;-&lt;/span> NM_no_NA[NM_no_NA&lt;span style="color:#f92672">$&lt;/span>padj&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">0.05&lt;/span>,]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res_cut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># padj&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>val_str &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#39;padj&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cutoff &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#ae81ff">0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cutoff_str &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">as.character&lt;/span>(cutoff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res &lt;span style="color:#f92672">&amp;lt;-&lt;/span> dplyr&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">filter&lt;/span>(res_tbl, padj &lt;span style="color:#f92672">&amp;lt;&lt;/span> cutoff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res &lt;span style="color:#f92672">&amp;lt;-&lt;/span> dplyr&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">arrange&lt;/span>(sig_res, padj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_res_file &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">paste0&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;res_&amp;#39;&lt;/span>, S2, &lt;span style="color:#e6db74">&amp;#39;_&amp;#39;&lt;/span>, S1, &lt;span style="color:#e6db74">&amp;#39;_&amp;#39;&lt;/span>, val_str, cutoff_str, &lt;span style="color:#e6db74">&amp;#39;.csv&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#write.csv(sig_res, file = sig_res_file)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#a6e22e">paste0&lt;/span>(S2, &lt;span style="color:#e6db74">&amp;#39; vs &amp;#39;&lt;/span>, S1, &lt;span style="color:#e6db74">&amp;#39; | &amp;#39;&lt;/span>, val_str, &lt;span style="color:#e6db74">&amp;#39;&amp;lt;&amp;#39;&lt;/span>, cutoff_str))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_idx &lt;span style="color:#f92672">&amp;lt;-&lt;/span> res&lt;span style="color:#f92672">$&lt;/span>padj &lt;span style="color:#f92672">&amp;lt;&lt;/span> cutoff &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">is.na&lt;/span>(res&lt;span style="color:#f92672">$&lt;/span>padj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig_dat &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">assay&lt;/span>(rld)[sig_idx, ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>annC &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">data.frame&lt;/span>(condition &lt;span style="color:#f92672">=&lt;/span> conditions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">rownames&lt;/span>(annC) &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">colnames&lt;/span>(sig_dat)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heat_colors &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">brewer.pal&lt;/span>(&lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;RdYlGn&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heat_colors_reversed &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">rev&lt;/span>(heat_colors)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ann_colors &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span>(condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">setNames&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;#F7819F&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;#58D3F7&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">c&lt;/span>(S2, S1)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>A data.frame: 6 x 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sample	group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;chr&amp;gt;	&amp;lt;fct&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-1	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-2	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-3	150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-1	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-2	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-3	33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DataFrame with 6 rows and 2 columns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sample group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;character&amp;gt; &amp;lt;factor&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-1 150-1 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-2 150-2 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>150-3 150-3 150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-1 33-1 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-2 33-2 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>33-3 33-3 33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>estimating size factors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>estimating dispersions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gene-wise dispersion estimates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mean-dispersion relationship
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>final dispersion estimates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fitting model and testing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log2 fold change (MLE): group 150 vs 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Wald test p-value: group 150 vs 33 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DataFrame with 205 rows and 6 columns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> baseMean log2FoldChange lfcSE stat pvalue padj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt; &amp;lt;numeric&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ABHD2 50.721 1.352060 0.431587 3.13276 1.73168e-03 4.00143e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADAM12 706.120 -0.571960 0.168494 -3.39454 6.87431e-04 2.03489e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADD2 1819.643 0.868228 0.148791 5.83521 5.37230e-09 9.73246e-07
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AIF1L 144.513 1.168923 0.283764 4.11935 3.79938e-05 2.07318e-03
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AKAP5 1042.005 -0.637445 0.202189 -3.15271 1.61761e-03 3.81572e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... ... ... ... ... ... ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF655 774.2459 -0.910286 0.198632 -4.58277 4.58855e-06 3.52229e-04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF682 59.7573 -1.382049 0.438336 -3.15295 1.61632e-03 3.81572e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZNF77 76.0271 -1.231188 0.388382 -3.17004 1.52417e-03 3.71126e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZRANB3 536.2301 -0.878732 0.179932 -4.88367 1.04128e-06 9.22422e-05
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZSCAN25 1257.3596 -0.460023 0.149161 -3.08408 2.04184e-03 4.57797e-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[1] &amp;#34;150 vs 33 | padj&amp;lt;0.05&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://github.com/user-attachments/assets/03bdf961-8b66-4321-89ce-9fa7f5c88849" alt="image" />&lt;/p></description></item><item><title>EBV RNA-seq 전처리</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi11/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi11/</guid><description>&lt;h1 id="ebv-rna-seq-전처리">
 EBV RNA-seq 전처리
 &lt;a class="anchor" href="#ebv-rna-seq-%ec%a0%84%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="0">
 0
 &lt;a class="anchor" href="#0">#&lt;/a>
&lt;/h3>
&lt;p>분석 목적&lt;/p>
&lt;ul>
&lt;li>제공받은 fastq를 human genome에 매핑해서 전처리, 분석 후 DE 결과 보냄&lt;/li>
&lt;li>DE 분석시에 EBV 유전자도 포함해달라는 요청&lt;/li>
&lt;/ul>
&lt;p>해야하는것&lt;/p>
&lt;ul>
&lt;li>fastq를 EBV genome에 매핑해서 전처리, EBV count 생성&lt;/li>
&lt;li>human count에 EBV count를 붙이기&lt;/li>
&lt;li>통합 count로 DE 분석 재수행&lt;/li>
&lt;/ul>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="1-alignment">
 1. Alignment
 &lt;a class="anchor" href="#1-alignment">#&lt;/a>
&lt;/h3>
&lt;p>&lt;mark>Load package, Set Path&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(edgeR)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(Rsubread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">library&lt;/span>(org.Hs.eg.db)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setwd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/data/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">getwd&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>&amp;#39;/data1/home/ysh980101/2311/RNA-seq_ebv/Rsubread&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Build Index&lt;/mark>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># build index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ref &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/NC_007605.1.fa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>output_basename &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#e6db74">&amp;#34;NC_007605.1_idx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">buildindex&lt;/span>(basename &lt;span style="color:#f92672">=&lt;/span> output_basename, reference &lt;span style="color:#f92672">=&lt;/span> ref)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;mark>Feature Count&lt;/mark>&lt;/p></description></item><item><title>EndNote 사용법</title><link>https://yshghid.github.io/docs/study/bioinformatics/bi16/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/bi16/</guid><description>&lt;h1 id="endnote-사용법">
 EndNote 사용법
 &lt;a class="anchor" href="#endnote-%ec%82%ac%ec%9a%a9%eb%b2%95">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1-endnote-설치-및-계정-설정">
 1. EndNote 설치 및 계정 설정
 &lt;a class="anchor" href="#1-endnote-%ec%84%a4%ec%b9%98-%eb%b0%8f-%ea%b3%84%ec%a0%95-%ec%84%a4%ec%a0%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>계정 설정: &lt;a href="https://endnote.com/?srsltid=AfmBOopL9WuN7IRp_CVgVcEHXZAd8eJWpK1YIMA9ZEccRbFk-2r-y9d4">공식 웹사이트&lt;/a>에서 End note 계정을 생성한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>설치: 나의 경우 &lt;a href="https://kudos.knu.ac.kr/pages/sub.htm?code=total&amp;amp;nav_code=kud1641346542&amp;amp;order_list=&amp;amp;list_scale=&amp;amp;view_cate=E&amp;amp;view_cate2=&amp;amp;view_cate3=&amp;amp;search_order=">여기&lt;/a>에서 다운로드해줬다.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/bb6b5ded-221c-479f-b221-afeb646a4812" alt="image" />&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="2-레퍼런스-추가-방법">
 2. 레퍼런스 추가 방법
 &lt;a class="anchor" href="#2-%eb%a0%88%ed%8d%bc%eb%9f%b0%ec%8a%a4-%ec%b6%94%ea%b0%80-%eb%b0%a9%eb%b2%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Google Scholar에 논문 제목을 검색해서 인용&amp;gt;EndNote를 클릭하면 .enw 파일이 다운로드된다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/2acc6d9e-df2b-4ac4-acab-01828fe64bde" alt="image" />&lt;/p>
&lt;h1 id="">
 
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h1>
&lt;h3 id="3-레퍼런스-관리">
 3. 레퍼런스 관리
 &lt;a class="anchor" href="#3-%eb%a0%88%ed%8d%bc%eb%9f%b0%ec%8a%a4-%ea%b4%80%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/3c8649ea-face-4c23-abad-a4bbf9609788" alt="image" />&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.myendnoteweb.com/EndNoteWeb.html?cat=myrefs&amp;amp;">Endnote&lt;/a>에 접속한다.&lt;/li>
&lt;li>Collect&amp;gt;Import References로 들어간다&lt;/li>
&lt;li>파일 선택&amp;gt;아까 저장한 .enw 파일을 선택해준다&lt;/li>
&lt;li>Import Option&amp;gt;EndNote Import를 선택해준다&lt;/li>
&lt;li>To&amp;gt;New Group을 하면 논문 주제별로 그룹을 생성하여 정리 가능. 생성한 그룹이 이미 있으면 원하는 그룹 선택해준다.&lt;/li>
&lt;li>Import 해준다&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/4f6a84ad-22aa-4214-9800-8f9210704a91" alt="image" />&lt;/p></description></item><item><title>Favicon 변경, Giscus 댓글창 추가</title><link>https://yshghid.github.io/docs/study/tech/cs2/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/cs2/</guid><description>&lt;h1 id="favicon-변경-giscus-댓글창-추가">
 Favicon 변경, Giscus 댓글창 추가
 &lt;a class="anchor" href="#favicon-%eb%b3%80%ea%b2%bd-giscus-%eb%8c%93%ea%b8%80%ec%b0%bd-%ec%b6%94%ea%b0%80">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1-favicon-변경">
 1. Favicon 변경 
 &lt;a class="anchor" href="#1-favicon-%eb%b3%80%ea%b2%bd">#&lt;/a>
&lt;/h3>
&lt;p>Hugo-book 테마의 github에서 README 파일을 읽어보면, logo와 favicon 이미지의 경로 정보를 찾을 수 있다.&lt;/p>
&lt;p>(logo 정보)
&lt;img src="https://github.com/user-attachments/assets/c704ebb2-2531-49b6-ae79-21c1036c1dbb" alt="image" />&lt;/p>
&lt;p>(favicon 정보)
&lt;img src="https://github.com/user-attachments/assets/a6e2a1c8-0386-40ac-ad19-d59806f5a6b2" alt="image" />&lt;/p>
&lt;p>확인 결과 &lt;code>static&lt;/code> 디렉토리에 각각 &lt;code>logo.png&lt;/code>, &lt;code>favicon.png&lt;/code>로 저장해두면 반영되는것 같다.&lt;/p>
&lt;p>참고로 Hugo-book 테마의 오리지널 웹사이트는 아래와 같이 디자인되어있고&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/4116ae69-80e0-44a0-a177-152b32609da2" alt="image" />&lt;/p>
&lt;p>최상단 탭에 들어가는 이미지가 &lt;code>logo.png&lt;/code>, 블로그 이름 옆에 들어가는 이미지가 &lt;code>favicon.png&lt;/code>이다.&lt;/p>
&lt;p>먼저 &lt;code>static&lt;/code> 디렉토리에 넣고 싶은 로고와 파비콘을 &lt;code>logo.png&lt;/code>, &lt;code>favicon.png&lt;/code> 로 저장해준다.&lt;/p></description></item><item><title>Github #1 There was an error committing your changes: File could not be edited 오류</title><link>https://yshghid.github.io/docs/study/tech/cs5/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/cs5/</guid><description>&lt;h1 id="github-1-there-was-an-error-committing-your-changes-file-could-not-be-edited-오류">
 Github #1 There was an error committing your changes: File could not be edited 오류
 &lt;a class="anchor" href="#github-1-there-was-an-error-committing-your-changes-file-could-not-be-edited-%ec%98%a4%eb%a5%98">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/d1125278-458a-41d0-af3e-aefe81c0f714" alt="image" />&lt;/p>
&lt;ol>
&lt;li>갑자기 모든 파일의 수정이 안되고 page deployment도 오류가 났다.&lt;/li>
&lt;li>브라우저 캐시 문제인가 해서 방문기록이랑 캐시를 모두 삭제해보았다. 그래도 오류가 났다.&lt;/li>
&lt;li>구글링하니까 &lt;a href="https://velog.io/@dazzlerozie/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%98%A4%EB%A5%98%EB%82%A0">내 경우랑 맞아떨어지는 한국인 블로그글&lt;/a>이 있어서 시키는대로 &lt;a href="https://www.githubstatus.com/">https://www.githubstatus.com/&lt;/a>에 들어가봤다.
&lt;img src="https://github.com/user-attachments/assets/1a6efb99-3f8f-4d62-923f-6ee2ee59ed4d" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/16a512c9-6d91-4822-800c-28dd795abcb8" alt="image" />
블로그 글이랑 같은 창이 떴는데 그냥 기다려야된다길래 그냥 기다림.&lt;/li>
&lt;li>2시간 뒤에 들어가니까 이 창으로 바뀌었다. 그리고 된다.
&lt;img src="https://github.com/user-attachments/assets/83f8f0f8-a009-42fa-bd64-abc9d6a9b785" alt="image" />&lt;/li>
&lt;/ol>
&lt;p>&lt;em>또 블로그 부셔진줄&amp;hellip; 다행이다&amp;hellip;.&lt;/em>&lt;/p></description></item><item><title>summer</title><link>https://yshghid.github.io/docs/hobby/book/book37/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book37/</guid><description>&lt;h1 id="summer">
 summer
 &lt;a class="anchor" href="#summer">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>그는 뭘 하면서 지내느냐고 물었다. 테니스. 수영. 밤에 시내로 놀러 나가기. 조깅. 편곡. 독서.&lt;/p>
&lt;p>#2&lt;/p>
&lt;p>모든 것이 올리버가 우리 집에 온 그 여름에 시작되었다. 그것들은 그해 여름에 유행한 곡과 그가 머무는 동안 그리고 떠난 후에 읽은 책들, 뜨거운 날의 로즈메리 냄새부터 오후의 요란한 매미 소리까지 모든 것에 새겨졌다. 여름마다 접해서 익숙해진 냄새와 소리들이 갑자기 나에게 달려들었고, 그 여름의 사건들로 영원히 다른 색조를 띠게 되었다.&lt;/p>
&lt;p>#3&lt;/p></description></item><item><title>결핍과 그에 대한 애도의 기간(라디오스타 김영철)</title><link>https://yshghid.github.io/docs/hobby/book/book23/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book23/</guid><description>&lt;h1 id="결핍과-그에-대한-애도의-기간라디오스타-김영철">
 결핍과 그에 대한 애도의 기간(라디오스타 김영철)
 &lt;a class="anchor" href="#%ea%b2%b0%ed%95%8d%ea%b3%bc-%ea%b7%b8%ec%97%90-%eb%8c%80%ed%95%9c-%ec%95%a0%eb%8f%84%ec%9d%98-%ea%b8%b0%ea%b0%84%eb%9d%bc%eb%94%94%ec%98%a4%ec%8a%a4%ed%83%80-%ea%b9%80%ec%98%81%ec%b2%a0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://youtu.be/Qa8zJkZlDF0">https://youtu.be/Qa8zJkZlDF0&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/c766ef96-00a6-4b81-a671-428ee1c3bc1f" alt="image" />&lt;/p>
&lt;p>은 참 생각지도 못한 순간에, 생각지 못한 계기로 끝나네&lt;/p>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;p>겨울 아침의 어스름 속에, 아빠 옆에 있는 빛바랜 파란색 소파에 놓인 무언가가 보인다. 엄마가 출근하기 전에 꺼내놓고 간 아빠 웃옷과 바지다. 아빠는 이상한 고집이 있다. 아무리 몸이 아파도 의사를 만나려면 꼭 옷을 제대로 챙겨 입고 가야 한다. 엄마가 출근하러 나갈 때까지만 해도 아빠는 침대에 누워 있었다. 지난주 내내 거의 누워 있었다. 어깨 뒤쪽에 통증이 워낙 심해 대로 숨 쉬기가 어려웠다. 하지만 의사에게는 그런 말을 하지 않았다. 의사는 여기저기 눌러보더니 심장병 이력이 있는 걸 알면서도 디스크일 거라고 했다. 의사가 쉬라고 해서 아빠는 일주일간 쉬었다. 그러다가 오늘은 겨우 일어나 병원에 진단서를 떼러 갈 참이다. 옷을 다 입고 나니, 마지막 차 한 잔을 탈 주전자 물이 끓고 있다.&lt;/p></description></item><item><title>결혼과 행복</title><link>https://yshghid.github.io/docs/hobby/book/book3/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book3/</guid><description>&lt;h1 id="결혼과-행복">
 결혼과 행복
 &lt;a class="anchor" href="#%ea%b2%b0%ed%98%bc%ea%b3%bc-%ed%96%89%eb%b3%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ebf2c687-08cb-4c0d-b8a0-9fc552640881" alt="image" />&lt;/p>
&lt;p>결혼은 안해도 되는데 한 사람들이 더 행복함.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8f8c1ff9-ccd8-4fea-a835-421ee407180e" alt="image" />&lt;/p>
&lt;p>사랑이 있든 없든 간에 정신적, 육체적으로 한 명의 남편 혹은 부인에게 초점을 맞추고 가족, 친구, 이웃, 나아가 잠깐 만나는 캐주얼한 섹스 파트너와 전남편 혹은 전 부인까지 양파 껍질처럼 차곡차곡 쌓인 울타리를 만듦으로써 우리 삶은 안정되고 행복해질 수 있다.&lt;/p>
&lt;h3 id="2">
 2
 &lt;a class="anchor" href="#2">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://youtu.be/vFN_DoqWAL4">https://youtu.be/vFN_DoqWAL4&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/31a0c458-a0cf-4984-bd63-b648c351a24d" alt="image" />&lt;/p>
&lt;p>우리는 종종 너무나 단순한 걸 놓치고 허우적대곤 하지만요.&lt;/p></description></item><item><title>공동창업자의 자격</title><link>https://yshghid.github.io/docs/hobby/book/book36/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book36/</guid><description>&lt;h1 id="공동창업자의-자격">
 공동창업자의 자격
 &lt;a class="anchor" href="#%ea%b3%b5%eb%8f%99%ec%b0%bd%ec%97%85%ec%9e%90%ec%9d%98-%ec%9e%90%ea%b2%a9">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>2002년 1월의 어느 일요일, 창고를 빌려 그 아마추어 엔진의 제작에 열중하던 중 가비가 뮬러에게 일론 머스크라는 인터넷 백만장자가 그를 만나고 싶어 한다고 말했다.&lt;/p>
&lt;p>머스크가 저스틴과 함께 도착했을 때, 뮬러는 줄에 매단 80파운드짜리 엔진을 어깨로 떠받친 채 프레임에 고정하기 위해 볼트를 조이고 있었다. 머스크는 다짜고짜 그에게 질문을 퍼붓기 시작했다. &amp;ldquo;그게 추력은 얼마나 되나요?&amp;rdquo; 뮬러는 1만 3,000파운드라고 답했다. &amp;ldquo;더 큰 것도 만들어본 적이 있나요?&amp;rdquo; 뮬러는 얼마 전부터 TRW에서 65만 파운드의 추력을 가진 TR-106의 제작에 참여하고 있다고 설명했다. &amp;ldquo;추진 연료로는 무엇을 쓰나요?&amp;rdquo; 머스크가 또 물었다. 뮬러는 머스크의 속사포 질문에 집중하기 위해 마침내 볼트 결합 작업을 일시 중단했다.&lt;/p></description></item><item><title>공부를 안해서 오는 스트레스는 사실 공부를 해야 없어진다.</title><link>https://yshghid.github.io/docs/hobby/book/book24/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book24/</guid><description>&lt;h1 id="공부를-안해서-오는-스트레스는-사실-공부를-해야-없어진다">
 공부를 안해서 오는 스트레스는 사실 공부를 해야 없어진다.
 &lt;a class="anchor" href="#%ea%b3%b5%eb%b6%80%eb%a5%bc-%ec%95%88%ed%95%b4%ec%84%9c-%ec%98%a4%eb%8a%94-%ec%8a%a4%ed%8a%b8%eb%a0%88%ec%8a%a4%eb%8a%94-%ec%82%ac%ec%8b%a4-%ea%b3%b5%eb%b6%80%eb%a5%bc-%ed%95%b4%ec%95%bc-%ec%97%86%ec%96%b4%ec%a7%84%eb%8b%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>카드 다섯 장을 쥐고 하는 포커판에서 나올 수 있는 카드패에는 2,598,960개 종류가 있다고 한다. 즉, 최고의 카드패를 쥘 사람은 약 260만명 중의 한 명이다. 하지만 포커에서 그런 카드패를 갖고 있지 않아도 당신은 이길 수 있다. 그저 포커 게임에 참석한 사람들보다 조금 더 좋은 패를 갖고 있으면 된다. 그러므로 최고의 카드를 받은 잘난 사람들은 무시해라. 그들의 포커판에는 비슷한 사람들이 몰려 있다.&lt;/p></description></item><item><title>구글 BERT의 정석 | BERT 입문</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs16/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs16/</guid><description>&lt;h1 id="딥러닝-구글-bert의-정석--bert-입문">
 [딥러닝] 구글 BERT의 정석 | BERT 입문
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%ec%a0%95%ec%84%9d--bert-%ec%9e%85%eb%ac%b8">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs16/#23-bert%ec%9d%98-%ea%b5%ac%ec%a1%b0">2.3 BERT의 구조&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs16/#24-bert-%ec%82%ac%ec%a0%84-%ed%95%99%ec%8a%b5">2.4 BERT 사전 학습&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="23-bert의-구조">
 2.3 BERT의 구조
 &lt;a class="anchor" href="#23-bert%ec%9d%98-%ea%b5%ac%ec%a1%b0">#&lt;/a>
&lt;/h2>
&lt;h3 id="bert의-전체-구조">
 BERT의 전체 구조
 &lt;a class="anchor" href="#bert%ec%9d%98-%ec%a0%84%ec%b2%b4-%ea%b5%ac%ec%a1%b0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>트랜스포머의 인코더(Encoder) 블록을 여러 개 쌓은 형태.
&lt;ul>
&lt;li>입력: 문장 (토큰화된 형태)&lt;/li>
&lt;li>내부 구조: N개의 Transformer Encoder Blocks (기본 모델은 12개, 큰 모델은 24개)&lt;/li>
&lt;li>출력: 각 토큰의 벡터 표현 (Contextual Embedding)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>cf) BERT의 대표적인 모델 크기&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>모델&lt;/th>
 &lt;th># 인코더 층&lt;/th>
 &lt;th>숨겨진 차원 (dmodel)&lt;/th>
 &lt;th>어텐션 헤드 수&lt;/th>
 &lt;th>파라미터 수&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>BERT-Base&lt;/td>
 &lt;td>12&lt;/td>
 &lt;td>768&lt;/td>
 &lt;td>12&lt;/td>
 &lt;td>110M&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BERT-Large&lt;/td>
 &lt;td>24&lt;/td>
 &lt;td>1024&lt;/td>
 &lt;td>16&lt;/td>
 &lt;td>340M&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>&lt;/blockquote>
&lt;h3 id="bert의-입력-처리">
 BERT의 입력 처리
 &lt;a class="anchor" href="#bert%ec%9d%98-%ec%9e%85%eb%a0%a5-%ec%b2%98%eb%a6%ac">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>입력 토큰 (Token Embedding)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>WordPiece Tokenization을 사용하며, 단어를 서브워드(subword) 단위로 분할하고 각 토큰은 고유한 임베딩 벡터로 변환된다.
ex) &amp;ldquo;playing&amp;rdquo; -&amp;gt; [&amp;ldquo;play&amp;rdquo;, &amp;ldquo;##ing&amp;rdquo;]&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>문장 구분 정보 (Segment Embedding)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>BERT는 두 개의 문장을 함께 입력할 수 있으며, 이때 각 문장이 어디에 속하는지를 구분하기 위해 Segment Embedding을 추가한다.
ex) 문장 A: 0 (Segment A) / 문장 B: 1 (Segment B)&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>위치 정보 (Position Embedding)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>트랜스포머는 순서를 고려하지 않는 구조이므로, 단어 순서를 반영하기 위해 위치 임베딩을 추가한다.&lt;/li>
&lt;li>BERT는 고정된 학습 가능한 위치 임베딩을 사용하며, 트랜스포머에서 사용되는 사인(sine) 및 코사인(cosine) 위치 임베딩을 사용하지 않음.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>최종 입력 형식&lt;/strong>&lt;/p></description></item><item><title>구글 BERT의 정석 | BERT의 파생 모델</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs17/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs17/</guid><description>&lt;h1 id="딥러닝-구글-bert의-정석--bert의-파생-모델-albert-roberta-electra-spanbert">
 [딥러닝] 구글 BERT의 정석 | BERT의 파생 모델: ALBERT, RoBERTa, ELECTRA, SpanBERT
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%ec%a0%95%ec%84%9d--bert%ec%9d%98-%ed%8c%8c%ec%83%9d-%eb%aa%a8%eb%8d%b8-albert-roberta-electra-spanbert">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs17/#41-albert">4.1 ALBERT&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs17/#43-roberta">4.3 RoBERTa&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs17/#44-electra">4.4 ELECTRA&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="41-albert">
 4.1 ALBERT
 &lt;a class="anchor" href="#41-albert">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>ALBERT (A Lite BERT)는 BERT 모델의 성능을 유지하면서도 파라미터 수를 줄이고, 더 효율적인 학습을 목표로 한 모델.&lt;/p>&lt;/blockquote>
&lt;h3 id="크로스-레이어-변수-공유">
 크로스 레이어 변수 공유
 &lt;a class="anchor" href="#%ed%81%ac%eb%a1%9c%ec%8a%a4-%eb%a0%88%ec%9d%b4%ec%96%b4-%eb%b3%80%ec%88%98-%ea%b3%b5%ec%9c%a0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>BERT는 각 Transformer 레이어마다 별도의 가중치와 바이어스를 갖는다.&lt;/li>
&lt;li>ALBERT는 동일한 파라미터 집합을 여러 레이어에 걸쳐 사용하여 모델의 파라미터 수를 크게 줄인다.&lt;/li>
&lt;/ul>
&lt;h3 id="펙토라이즈-임베딩-변수화">
 펙토라이즈 임베딩 변수화
 &lt;a class="anchor" href="#%ed%8e%99%ed%86%a0%eb%9d%bc%ec%9d%b4%ec%a6%88-%ec%9e%84%eb%b2%a0%eb%94%a9-%eb%b3%80%ec%88%98%ed%99%94">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>BERT는 vocab_size x hidden_size 크기의 임베딩 행렬을 사용하여, vocab_size와 hidden_size에 비례하는 수의 파라미터를 필요로 한다.&lt;/li>
&lt;li>ALBERT는 임베딩 행렬을 두 개의 더 작은 행렬로 분해하여, 파라미터 수를 줄인다(임베딩 팩토라이제이션).
&lt;ul>
&lt;li>행렬1: vocab_size x embedding_size&lt;/li>
&lt;li>행렬2: embedding_size x hidden_size&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="문장-순서-예측">
 문장 순서 예측
 &lt;a class="anchor" href="#%eb%ac%b8%ec%9e%a5-%ec%88%9c%ec%84%9c-%ec%98%88%ec%b8%a1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>BERT에서는 Masked Language Modeling (MLM)과 Next Sentence Prediction (NSP)을 사용.&lt;/p></description></item><item><title>구글 BERT의 정석 | 트랜스포머 입문</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs15/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs15/</guid><description>&lt;h1 id="딥러닝-구글-bert의-정석--트랜스포머-입문">
 [딥러닝] 구글 BERT의 정석 | 트랜스포머 입문
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%ec%a0%95%ec%84%9d--%ed%8a%b8%eb%9e%9c%ec%8a%a4%ed%8f%ac%eb%a8%b8-%ec%9e%85%eb%ac%b8">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs15/#%ed%8a%b8%eb%9e%9c%ec%8a%a4%ed%8f%ac%eb%a8%b8%ec%9d%98-%ec%9d%b8%ec%bd%94%eb%8d%94-%ec%9d%b4%ed%95%b4%ed%95%98%ea%b8%b0">1.2 트랜스포머의 인코더 이해하기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs15/#13-%ed%8a%b8%eb%9e%9c%ec%8a%a4%ed%8f%ac%eb%a8%b8%ec%9d%98-%eb%94%94%ec%bd%94%eb%8d%94-%ec%9d%b4%ed%95%b4%ed%95%98%ea%b8%b0">1.3 트랜스포머의 디코더 이해하기&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="12-트랜스포머의-인코더-이해하기">
 1.2 트랜스포머의 인코더 이해하기
 &lt;a class="anchor" href="#12-%ed%8a%b8%eb%9e%9c%ec%8a%a4%ed%8f%ac%eb%a8%b8%ec%9d%98-%ec%9d%b8%ec%bd%94%eb%8d%94-%ec%9d%b4%ed%95%b4%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h2>
&lt;h3 id="셀프-어텐션">
 셀프 어텐션
 &lt;a class="anchor" href="#%ec%85%80%ed%94%84-%ec%96%b4%ed%85%90%ec%85%98">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>셀프 어텐션은 문장 내 단어들이 서로 얼마나 중요한지를 계산하는 과정.&lt;/li>
&lt;li>트랜스포머는 이를 위해 입력 단어를 쿼리(Query), 키(Key), 밸류(Value) 세 가지 벡터로 변환하여 연관성을 구한다.&lt;/li>
&lt;/ul>
&lt;h3 id="어텐션-점수-계산-예제">
 어텐션 점수 계산 예제
 &lt;a class="anchor" href="#%ec%96%b4%ed%85%90%ec%85%98-%ec%a0%90%ec%88%98-%ea%b3%84%ec%82%b0-%ec%98%88%ec%a0%9c">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>&amp;ldquo;The cat sat on the mat.&amp;rdquo;&lt;/p>&lt;/blockquote>
&lt;ol>
&lt;li>각 단어 벡터(예: 512차원)를 가중치 행렬과 곱하여 쿼리(Q), 키(K), 밸류(V)벡터를 생성한다.&lt;/li>
&lt;li>어떤 단어가 다른 단어와 얼마나 연관되는지를 측정하기 위해, Q와 K벡터 간의 내적(dot product)을 계산한다.
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>단어&lt;/th>
 &lt;th>The&lt;/th>
 &lt;th>cat&lt;/th>
 &lt;th>sat&lt;/th>
 &lt;th>on&lt;/th>
 &lt;th>the&lt;/th>
 &lt;th>mat&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Query: &amp;ldquo;cat&amp;rdquo;&lt;/td>
 &lt;td>0.2&lt;/td>
 &lt;td>1.0&lt;/td>
 &lt;td>0.8&lt;/td>
 &lt;td>0.1&lt;/td>
 &lt;td>0.3&lt;/td>
 &lt;td>0.5&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&amp;ldquo;cat&amp;quot;의 쿼리 벡터와 모든 단어의 키 벡터를 곱해서 점수를 계산하는 경우.&lt;/li>
&lt;li>여기서 &amp;ldquo;cat&amp;quot;은 &amp;ldquo;sat&amp;quot;과 가장 연관이 높고(0.8), &amp;ldquo;on&amp;quot;과는 거의 연관이 없다(0.1).&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>소프트맥스 적용
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>단어&lt;/th>
 &lt;th>The&lt;/th>
 &lt;th>cat&lt;/th>
 &lt;th>sat&lt;/th>
 &lt;th>on&lt;/th>
 &lt;th>the&lt;/th>
 &lt;th>mat&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Softmax 값&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;td>0.4&lt;/td>
 &lt;td>0.35&lt;/td>
 &lt;td>0.02&lt;/td>
 &lt;td>0.08&lt;/td>
 &lt;td>0.1&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>위에서 구한 점수에 대해 소프트맥스를 적용하여 확률로 변환&lt;/li>
&lt;li>이제 &amp;ldquo;cat&amp;quot;은 &amp;ldquo;sat&amp;rdquo;(0.35)과 &amp;ldquo;cat&amp;rdquo; 자체(0.4)에 높은 가중치를 부여함.&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>각 단어의 밸류(V) 벡터를 위의 확률로 가중합하여 최종 어텐션 출력을 얻는다.&lt;/li>
&lt;/ol>
&lt;h3 id="멀티-헤드-어텐션">
 멀티 헤드 어텐션
 &lt;a class="anchor" href="#%eb%a9%80%ed%8b%b0-%ed%97%a4%eb%93%9c-%ec%96%b4%ed%85%90%ec%85%98">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>단어 간의 관계를 한 가지 방식으로만 학습하면, 문맥을 완전히 반영하지 못할 수 있음. 예를 들어, 단어 &amp;ldquo;cat&amp;quot;은 문장에서 다음과 같은 다양한 방식으로 다른 단어와 관계를 맺을 수 있다.&lt;/p></description></item><item><title>그릿을 획득하기 vs 진실로의 창을 열어놓기.</title><link>https://yshghid.github.io/docs/hobby/book/book28/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book28/</guid><description>&lt;h1 id="그릿을-획득하기-vs-진실로의-창을-열어놓기">
 그릿을 획득하기 vs 진실로의 창을 열어놓기.
 &lt;a class="anchor" href="#%ea%b7%b8%eb%a6%bf%ec%9d%84-%ed%9a%8d%eb%93%9d%ed%95%98%ea%b8%b0-vs-%ec%a7%84%ec%8b%a4%eb%a1%9c%ec%9d%98-%ec%b0%bd%ec%9d%84-%ec%97%b4%ec%96%b4%eb%86%93%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>나는 전문가들은 이 문제에 관해 뭐라고 이야기하는지 알아보기로 했다. 자기기만이 데이비드와 내 아버지가 경고한 것만큼 그렇게 위험한 것인가 하는 문제 말이다.&lt;/p>
&lt;p>20세기에는 의학 전문가들이 일치된 의견을 내놓았다. 지그문트 프로이트, 에이브러햄 매슬로, 에릭 에릭슨 같은 영향력 있는 심리학자들은 자기기만을 정신적 결함이자 시각에 생긴 문제여서 치료로 교정해야 한다고 보았다. 반면 정확한 시각은 &amp;ldquo;정신의 건강을 보여주는 표지&amp;quot;라고 여겼다.&lt;/p>
&lt;p>그러나 20세기가 기운차게 달려가는 동안, 임상심리학자들은 이상한 일들을 목격하기 시작했다. 그들이 볼 때 더 건강한 환자들, 인생을 더 쉽게 살아가는 사람들, 좌절을 겪은 뒤에도 재빨리 회복하는 사람들, 직업과 친구, 연인을 얻고 인생이라는 회전목마에서 황금기를 가지고 있는 사람들은 장밋빛 자기기만이라는 특징을 지니고 있는 것처럼 보였다.&lt;/p></description></item><item><title>당신의 특별한 우울 | 린다 개스크</title><link>https://yshghid.github.io/docs/hobby/book/book2/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book2/</guid><description>&lt;h1 id="당신의-특별한-우울--린다-개스크">
 당신의 특별한 우울 | 린다 개스크
 &lt;a class="anchor" href="#%eb%8b%b9%ec%8b%a0%ec%9d%98-%ed%8a%b9%eb%b3%84%ed%95%9c-%ec%9a%b0%ec%9a%b8--%eb%a6%b0%eb%8b%a4-%ea%b0%9c%ec%8a%a4%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#북마크&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book19/#%ec%95%a0%ed%86%b5%ed%95%b4%ed%95%a0-%ec%88%98-%ec%9e%88%ea%b2%8c-%eb%90%98%eb%a9%b4-%ec%9e%83%ec%96%b4%eb%b2%84%eb%a6%b0-%ec%82%ac%eb%9e%8c%ec%9d%84-%ea%b7%b8-%ec%82%ac%eb%9e%8c-%ea%b7%b8%eb%8c%80%eb%a1%9c-%ea%b8%b0%ec%96%b5%ed%95%a0-%ec%88%98-%ec%9e%88%ea%b2%8c-%eb%90%9c%eb%8b%a4">애통해할 수 있게 되면 잃어버린 사람을 그 사람 그대로 기억할 수 있게 된다.&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book20">불행한 것과 우울한 것.&lt;/a>&lt;/p>
&lt;p>#기타&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book23">결핍과 그에 대한 애도의 기간(라디오스타 김영철)&lt;/a>&lt;/p></description></item><item><title>딥러닝을 이용한 자연어 처리 입문 | BERT</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs14/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs14/</guid><description>&lt;h1 id="딥러닝-딥러닝을-이용한-자연어-처리-입문--bert">
 [딥러닝] 딥러닝을 이용한 자연어 처리 입문 | BERT
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%eb%94%a5%eb%9f%ac%eb%8b%9d%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9e%90%ec%97%b0%ec%96%b4-%ec%b2%98%eb%a6%ac-%ec%9e%85%eb%ac%b8--bert">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-03-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-03 구글 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-04-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%a7%88%ec%8a%a4%ed%81%ac%eb%93%9c-%ec%96%b8%ec%96%b4-%eb%aa%a8%eb%8d%b8">17-04 한국어 BERT의 마스크드 언어 모델&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-05-%ea%b5%ac%ea%b8%80-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-05 구글 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs14/#17-06-%ed%95%9c%ea%b5%ad%ec%96%b4-bert%ec%9d%98-%eb%8b%a4%ec%9d%8c-%eb%ac%b8%ec%9e%a5-%ec%98%88%ec%b8%a1">17-06 한국어 BERT의 다음 문장 예측&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-02-버트bidirectional-encoder-representations-from-transformers-bert">
 17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)
 &lt;a class="anchor" href="#17-02-%eb%b2%84%ed%8a%b8bidirectional-encoder-representations-from-transformers-bert">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>BERT?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>BERT는 문맥 정보를 반영한 임베딩(Contextual Embedding)을 사용함. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 모델이 학습하도록 설계된 방식.&lt;/li>
&lt;li>입/출력 구조
&lt;ul>
&lt;li>입력은 각 단어를 768차원의 임베딩 벡터로 변환한 것. ex) [CLS], I, love, you → 각각 768차원의 벡터로 변환.&lt;/li>
&lt;li>출력은 BERT의 내부 연산을 거쳐, 문맥을 반영한 768차원의 벡터로 변환된 것.&lt;/li>
&lt;li>문맥 반영? 입력된 단어의 벡터에 대한 출력 임베딩은 입력 문장의 모든 단어 정보를 반영한 벡터. [CLS] 벡터는 문장의 전체 정보를 요약한 벡터로 활용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>구조와 연산
&lt;ul>
&lt;li>BERT는 트랜스포머 인코더를 12층 쌓아 올린 구조.&lt;/li>
&lt;li>각 층에서 멀티헤드 셀프 어텐션(Multi-Head Self-Attention)**과 포지션 와이즈 피드포워드 네트워크(Position-wise Feed Forward Network) 연산을 수행해서 입력 단어가 다른 모든 단어와 상호작용하여 문맥 정보를 반영하도록 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>BERT의 서브워드 토크나이저: WordPiece&lt;/strong>&lt;/p></description></item><item><title>루틴의 힘 | 댄 애리얼리, 그레첸 루빈, 세스 고딘 외</title><link>https://yshghid.github.io/docs/hobby/book/book13/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book13/</guid><description>&lt;h1 id="루틴의-힘--댄-애리얼리-그레첸-루빈-세스-고딘-외">
 루틴의 힘 | 댄 애리얼리, 그레첸 루빈, 세스 고딘 외
 &lt;a class="anchor" href="#%eb%a3%a8%ed%8b%b4%ec%9d%98-%ed%9e%98--%eb%8c%84-%ec%95%a0%eb%a6%ac%ec%96%bc%eb%a6%ac-%ea%b7%b8%eb%a0%88%ec%b2%b8-%eb%a3%a8%eb%b9%88-%ec%84%b8%ec%8a%a4-%ea%b3%a0%eb%94%98-%ec%99%b8">#&lt;/a>
&lt;/h1>
&lt;blockquote>
&lt;p>흔들리지 않고 끝까지 계속하게 만드는 루틴의 힘&lt;/p>&lt;/blockquote>
&lt;p>#북마크&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book17">전문가의 세상으로 나가는것에 대한 두려움&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book18">진전의 가시화&lt;/a>&lt;/p></description></item><item><title>리스크 중독</title><link>https://yshghid.github.io/docs/hobby/book/book34/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book34/</guid><description>&lt;h1 id="리스크-중독">
 리스크 중독
 &lt;a class="anchor" href="#%eb%a6%ac%ec%8a%a4%ed%81%ac-%ec%a4%91%eb%8f%85">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>레브친은 머스크를 어떻게 이해하면 좋을지 고민이 됐다. 그의 팔씨름 제안은 진담이었을까? 바보 같은 유머와 게임 플레이로 간간이 중단되곤 하는 일련의 광적인 격렬함은 계산된 것일까, 아니면 그저 발광일 뿐인가? 레브친은 말한다. “그가 하는 모든 일에는 아이러니가 있어요. 그는 11까지 올라가지만 4 이하로는 내려가지 않는 아이러니 설정 상태에서 움직입니다.” 머스크의 힘 중 하나는 다른 사람들을 자신의 아이러니 서클로 끌어들여 자기들만 아는 농담을 공유할 수 있게 하는 것이다. “그는 자신의 아이러니 화염방사기를 켜고 일론 클럽의 회원이라는 배타적인 의식을 만들어내죠.”&lt;/p></description></item><item><title>밀고 당기는 협상</title><link>https://yshghid.github.io/docs/hobby/book/book33/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book33/</guid><description>&lt;h1 id="밀고-당기는-협상">
 밀고 당기는 협상
 &lt;a class="anchor" href="#%eb%b0%80%ea%b3%a0-%eb%8b%b9%ea%b8%b0%eb%8a%94-%ed%98%91%ec%83%81">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>신규 가입 고객의 이름을 모니터링하던 중, 머스크는 이름 하나에 시선이 머물렀다. 바로 피터 틸이었다.&lt;/p>
&lt;p>그는 엑스닷컴과 같은 건물에 있다가 지금은 거리 아래쪽으로 사무실을 옮긴 컨피니티Confinity라는 회사의 창업자 중 한 명이었다. 틸과 그의 주요 공동창업자 맥스 레브친은 모두 머스크만큼이나 열정적이었지만, 비교적 절제된 태도를 견지하는 사람들이었다. 엑스닷컴과 마찬가지로 컨피니티도 개인 간 결제 서비스를 제공했는데, 컨피니티의 시스템은 페이팔PayPal이라고 불렸다.&lt;/p>
&lt;p>2000년 초 인터넷 거품이 꺼질 조짐이 보이기 시작하던 무렵, 엑스닷컴과 페이팔은 신규 고객을 유치하기 위해 치열한 경쟁을 벌이고 있었다. “고객이 가입하고 친구를 추천하도록 유도하기 위해 양사 모두 엄청난 보너스를 지급하는 미친 경쟁을 벌이고 있었지요.” 틸의 설명이다. 나중에 머스크는 이렇게 표현했다. “어느 쪽이 먼저 돈이 바닥나는지 끝까지 가보자는 경쟁이었어요.”
머스크는 비디오 게임에 쏟던 열정으로 경쟁에 임했다. 반면에 틸은 냉정하게 계산하고 리스크를 완화하는 편을 좋아했다. 두 사람 모두 네트워크 효과(먼저 규모를 키우는 회사가 더욱 빠르게 성장하는 현상)로 인해 어느 한 회사만 살아남는다는 사실을 곧 깨달았다. 따라서 ‘모탈 컴뱃’ 게임식의 경쟁으로 치닫는 것보다는 합병하는 것이 합리적이라고 생각하게 되었다.&lt;/p></description></item><item><title>불변의 법칙 | 모던 하우절</title><link>https://yshghid.github.io/docs/hobby/book/book12/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book12/</guid><description>&lt;h1 id="불변의-법칙--모던-하우절">
 불변의 법칙 | 모던 하우절
 &lt;a class="anchor" href="#%eb%b6%88%eb%b3%80%ec%9d%98-%eb%b2%95%ec%b9%99--%eb%aa%a8%eb%8d%98-%ed%95%98%ec%9a%b0%ec%a0%88">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>세상 모든 일은 예측 불가능한 방식으로 서로 영향을 주고받고, 혼합되고, 그 결과가 증폭된다. 세상은 운과 우연에 이토록 취약하다.&lt;/p>
&lt;h3 id="1-북마크">
 1. 북마크
 &lt;a class="anchor" href="#1-%eb%b6%81%eb%a7%88%ed%81%ac">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book15">﹂사건의 복리효과&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book16">﹂비효율을 견디는 능력&lt;/a>&lt;/p>
&lt;h3 id="2-플레이리스트">
 2. 플레이리스트
 &lt;a class="anchor" href="#2-%ed%94%8c%eb%a0%88%ec%9d%b4%eb%a6%ac%ec%8a%a4%ed%8a%b8">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://youtu.be/XstIT_dY6eE?si=fbXi6ohmBhTIVztz">https://youtu.be/XstIT_dY6eE?si=fbXi6ohmBhTIVztz&lt;/a>
&lt;img src="https://github.com/user-attachments/assets/a3091bbb-d4b4-4418-96b1-cfc2b3d3c1b1" alt="image" />&lt;/p>
&lt;p>들으면서 타이핑하니까 딱이다!!&lt;/p>
&lt;h3 id="3-일상-김지민-생일-birthday---쿠쿠크루cuckoo-crew">
 3. [일상] 김지민 생일 Birthday - 쿠쿠크루(Cuckoo Crew)
 &lt;a class="anchor" href="#3-%ec%9d%bc%ec%83%81-%ea%b9%80%ec%a7%80%eb%af%bc-%ec%83%9d%ec%9d%bc-birthday---%ec%bf%a0%ec%bf%a0%ed%81%ac%eb%a3%a8cuckoo-crew">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://youtu.be/5f_Lx-RbrJc?si=imPXt3rVSR3GOq_R">https://youtu.be/5f_Lx-RbrJc?si=imPXt3rVSR3GOq_R&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/93b47f7e-cc50-4b05-a8b1-9f659a485efb" alt="image" />&lt;/p>
&lt;p>Q) 뜨겁잖아요! 대체 어떻게 한 거죠?&lt;/p>
&lt;p>??) 뜨거워도 개의치 않는 거지.&lt;/p>
&lt;p>ㅋㅋㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/bb1f8ce2-849e-4a19-a657-e8df1d01b337" alt="image" />&lt;/p></description></item><item><title>사이트 생성, 깃허브 배포</title><link>https://yshghid.github.io/docs/study/tech/cs1/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/tech/cs1/</guid><description>&lt;h1 id="사이트-생성-깃허브-배포">
 사이트 생성, 깃허브 배포
 &lt;a class="anchor" href="#%ec%82%ac%ec%9d%b4%ed%8a%b8-%ec%83%9d%ec%84%b1-%ea%b9%83%ed%97%88%eb%b8%8c-%eb%b0%b0%ed%8f%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1-hugo-설치">
 1. Hugo 설치
 &lt;a class="anchor" href="#1-hugo-%ec%84%a4%ec%b9%98">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ brew install hugo

$ hugo version
hugo v0.131.0+extended darwin/arm64 BuildDate=2024-08-02T09:03:48Z VendorInfo=brew
&lt;/code>&lt;/pre>&lt;p>Hugo v0.112.0 이상인지 확인하면 된다.&lt;/p>
&lt;h3 id="2-hugo-사이트-생성">
 2. Hugo 사이트 생성
 &lt;a class="anchor" href="#2-hugo-%ec%82%ac%ec%9d%b4%ed%8a%b8-%ec%83%9d%ec%84%b1">#&lt;/a>
&lt;/h3>
&lt;p>작업하고 싶은 위치에 Hugo 디렉토리를 만들어준다.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ mkdir Hugo
$ cd Hugo
&lt;/code>&lt;/pre>&lt;p>Hugo로 들어가서 hugo 사이트 틀을 생성해준다. 나는 blog라는 이름으로 생성하였다.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ pwd
/Users/yshmbid/Hugo

$ hugo new site blog
&lt;/code>&lt;/pre>&lt;p>blog 디렉토리에 빈 Git 저장소를 초기화한다.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cd blog
$ pwd
/Users/yshmbid/Hugo/blog

$ git init
hint: Using &amp;#39;master&amp;#39; as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch &amp;lt;name&amp;gt;
hint:
hint: Names commonly chosen instead of &amp;#39;master&amp;#39; are &amp;#39;main&amp;#39;, &amp;#39;trunk&amp;#39; and
hint: &amp;#39;development&amp;#39;. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m &amp;lt;name&amp;gt;
/Users/yshmbid/Hugo/blog/.git/ 안의 빈 깃 저장소를 다시 초기화했습니다
&lt;/code>&lt;/pre>&lt;p>위에서 Using &amp;lsquo;master&amp;rsquo; as the name for the initial branch. 언급이 나온다. 여기서 확인해줘야 할 부분이 있다.&lt;/p></description></item><item><title>세이노의 가르침</title><link>https://yshghid.github.io/docs/hobby/book/book5/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book5/</guid><description>&lt;h1 id="세이노의-가르침">
 세이노의 가르침
 &lt;a class="anchor" href="#%ec%84%b8%ec%9d%b4%eb%85%b8%ec%9d%98-%ea%b0%80%eb%a5%b4%ec%b9%a8">#&lt;/a>
&lt;/h1>
&lt;blockquote>
&lt;p>원래 같으면 조금 읽고 덮었을 것 같은데 취준시즌에 읽어서 꽤 많이 읽음. &amp;lsquo;나&amp;rsquo;에게 도움이 되는 책인지는 모르겠는데 &amp;lsquo;취준하는 나&amp;rsquo;에게는 매우 유용한 책이었다! ㅋㅋ&lt;/p>&lt;/blockquote>
&lt;p>#북마크&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book24">공부를 안해서 오는 스트레스는 사실 공부를 해야 없어진다.&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book25">잘할 수 있는 일을 찾기 vs 일을 잘하기&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book26">인테그리티&lt;/a>&lt;/p></description></item><item><title>우리가 빛의 속도로 갈 수 없다면</title><link>https://yshghid.github.io/docs/hobby/book/book14/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book14/</guid><description>&lt;h1 id="우리가-빛의-속도로-갈-수-없다면">
 우리가 빛의 속도로 갈 수 없다면
 &lt;a class="anchor" href="#%ec%9a%b0%eb%a6%ac%ea%b0%80-%eb%b9%9b%ec%9d%98-%ec%86%8d%eb%8f%84%eb%a1%9c-%ea%b0%88-%ec%88%98-%ec%97%86%eb%8b%a4%eb%a9%b4">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#순례자들은 왜 돌아오지 않는가&lt;/p>
&lt;p>소피. 마지막으로 한 가지 말할 것이 남았어. 내가 처음으로 마을에 대해 의문을 품게 되었던 계기, 그 오두막 뒤에 있던 귀환자 말야. 정해진 성년식보다 조금 더 빨리 지구에 가기로 결심했을 때 나는 그 남자에게 몰래 찾아가 물었어. 혹시 지구에서 무슨 일이 있었던 거냐고.&lt;/p>
&lt;p>그는 슬픈 진실을 말해주었지. 지구에서 그가 사랑했던 사람과 그의 쓸쓸한 죽음에 관해. 그가 남겼던, 행복해지라는 유언에 관해.&lt;/p></description></item><item><title>인간의 사교적인 행동을 배우려는 다른 행성의 관찰자</title><link>https://yshghid.github.io/docs/hobby/book/book31/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book31/</guid><description>&lt;h1 id="인간의-사교적인-행동을-배우려는-다른-행성의-관찰자">
 인간의 사교적인 행동을 배우려는 다른 행성의 관찰자
 &lt;a class="anchor" href="#%ec%9d%b8%ea%b0%84%ec%9d%98-%ec%82%ac%ea%b5%90%ec%a0%81%ec%9d%b8-%ed%96%89%eb%8f%99%ec%9d%84-%eb%b0%b0%ec%9a%b0%eb%a0%a4%eb%8a%94-%eb%8b%a4%eb%a5%b8-%ed%96%89%ec%84%b1%ec%9d%98-%ea%b4%80%ec%b0%b0%ec%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>그는 아버지처럼 공학에 끌렸기에 물리학을 전공하기로 결정했다. 그가 느낀 엔지니어의 본질은 어떤 문제든 물리학의 가장 근본적인 원리를 파고들어 해결책을 찾는 것이었다. 그는 또한 공동 학위 과정을 밟아 경영학도 전공하기로 했다. “경영학을 공부하지 않으면 경영학을 공부한 누군가의 밑에서 일하게 될까 봐 걱정이 되었지요.” 그는 말한다. “내 목표는 물리학의 감각으로 제품을 설계 및 제작하는 것, 그리고 경영학을 전공한 보스를 위해 일할 필요가 없게 되는 것이었어요.”&lt;/p></description></item><item><title>인적 네트워크</title><link>https://yshghid.github.io/docs/hobby/book/book35/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book35/</guid><description>&lt;h1 id="인적-네트워크">
 인적 네트워크
 &lt;a class="anchor" href="#%ec%9d%b8%ec%a0%81-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>머스크는 러시아인들이 받아내려 했던 터무니없는 가격을 곱씹으면서, 제 1원리(First Principles-다른 경험적 데이터를 필요로 하지 않는 &amp;lsquo;자명한 진리&amp;rsquo;)에 입각한 사고를 동원해 그 상황에 대한 기본 물리학을 파고들었고 거기서부터 차근차근 쌓아 올려나갔다. 그리고 이를 통해 완제품이 기본 재료비보다 얼마나 더 비싼지 계산하는 &amp;lsquo;바보 지수idiot index&amp;rsquo;를 개발했다. 제품의 &amp;lsquo;바보 지수&amp;rsquo;가 높으면 보다 효율적인 제조기술을 고안하여 비용을 크게 줄일 수 있다는 것을 의미했다.&lt;/p>
&lt;p>로켓은 &amp;lsquo;바보 지수&amp;rsquo;가 극도로 높았다. 머스크는 로켓에 들어가는 탄소섬유와 금속, 연료 및 기타 재료의 원가를 계산하기 시작했다. 기존의 방법을 사용한 완제품의 제작비용은 머스크가 계산한 원가보다 최소 50배 이상 비쌌다. 인류가 화성에 가려면 로켓 기술이 획기적으로 개선되어야 했다. 중고 로켓, 특히 러시아의 오래된 로켓에 의존해서는 기술을 발전시킬 수 없었다.&lt;/p></description></item><item><title>인터넷, 지속 가능한 에너지, 우주여행</title><link>https://yshghid.github.io/docs/hobby/book/book32/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book32/</guid><description>&lt;h1 id="인터넷-지속-가능한-에너지-우주여행">
 인터넷, 지속 가능한 에너지, 우주여행
 &lt;a class="anchor" href="#%ec%9d%b8%ed%84%b0%eb%84%b7-%ec%a7%80%ec%86%8d-%ea%b0%80%eb%8a%a5%ed%95%9c-%ec%97%90%eb%84%88%ec%a7%80-%ec%9a%b0%ec%a3%bc%ec%97%ac%ed%96%89">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>머스크는 여름이 끝날 무렵 스탠퍼드대학원에 진학하여 재료과학을 공부할 계획을 세웠다. 여전히 커패시터에 매료된 그는 그것으로 전기자동차에 전력을 공급할 수 있는 방법을 연구하고 싶었다. “첨단 칩 제조 장비를 활용하여 자동차의 주행거리를 늘리기에 충분한 에너지 밀도를 가진 고체 소자 울트라 커패시터를 만들어볼 생각이었어요.” 그는 말한다. 하지만 등록기간이 가까워지면서 걱정이 들기 시작했다. “스탠퍼드에서 몇 년을 보내고 박사학위까지 받았는데 그 커패시터가 실현 불가능한 것으로 밝혀지면 어떻게 해야 할 것인가, 하는 걱정이 들었어요. 사실 대부분의 박사학위는 무의미해요. 실제로 그 부류 가운데 세상에 진정한 변화를 가져오는 사람은 거의 없잖아요.” 머스크의 말이다.&lt;/p></description></item><item><title>인테그리티</title><link>https://yshghid.github.io/docs/hobby/book/book26/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book26/</guid><description>&lt;h1 id="인테그리티">
 인테그리티
 &lt;a class="anchor" href="#%ec%9d%b8%ed%85%8c%ea%b7%b8%eb%a6%ac%ed%8b%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>1998년 워런 버핏은 플로리다대학교에서 MBA 학생들에게 사람을 고용할 때 살펴보는 3가지를 언급하였다. 지능이 좋은지(머리가 잘 돌아가는지, 똑똑한지, 어리바리하지는 않은지), 일을 선도적으로 열정을 갖고 이끌어 나갈 수 있는지(시키는 것만 하는지, 해야 할 것들을 알아서 챙기는지), 그리고 integrity가 있는지 살펴봐야 한다.
머리도 좋고 일을 주도적으로 이끌어 나갈 열정도 있으나 integrity가 없는 자는 회사를 망칠 사람이다. integrity가 없는 사람을 고용하면 직원들을 게으름뱅이, 멍청이로 만들려는 것이기 때문이다.&lt;/p>
&lt;p>인테그리티란 자신이 옳다고 믿거나 생각하는 것을 말과 행동을 통해 일관성 있게 실천하는 것이다. 인테그리티를 완벽하게 실천하며 살아가기란 쉽지 않을 수 있다. 하지만 살아가면서 꾸준히 추구해야 할 가치이다.&lt;/p></description></item><item><title>자신의 존재에 대해 사과하지 말 것 | 카밀라 팡</title><link>https://yshghid.github.io/docs/hobby/book/book4/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book4/</guid><description>&lt;h1 id="자신의-존재에-대해-사과하지-말-것--카밀라-팡">
 자신의 존재에 대해 사과하지 말 것 | 카밀라 팡
 &lt;a class="anchor" href="#%ec%9e%90%ec%8b%a0%ec%9d%98-%ec%a1%b4%ec%9e%ac%ec%97%90-%eb%8c%80%ed%95%b4-%ec%82%ac%ea%b3%bc%ed%95%98%ec%a7%80-%eb%a7%90-%ea%b2%83--%ec%b9%b4%eb%b0%80%eb%9d%bc-%ed%8c%a1">#&lt;/a>
&lt;/h1>
&lt;blockquote>
&lt;p>최정문 북클럽 2023년 07월 도서여서 읽어봤다! 저자가 생물정보학 과학자이다.&lt;/p>&lt;/blockquote>
&lt;p>#북마크&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book21">깔끔한 상자 모서리는 든든하지만 환상일 뿐이다.&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book22">모든 것을 가질 수는 없을까? 현재에도 행복하고 미래도 이상적으로 계획할 수 있을까?&lt;/a>&lt;/p></description></item><item><title>자전거</title><link>https://yshghid.github.io/docs/hobby/book/book38/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book38/</guid><description>&lt;h1 id="자전거">
 자전거
 &lt;a class="anchor" href="#%ec%9e%90%ec%a0%84%ea%b1%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>&amp;ldquo;당신은 내가 뭘 좋아하는지 몰라요.&amp;rdquo; 나는 냉정하게 쏘아붙였다. &amp;ldquo;전혀요.&amp;rdquo;&lt;/p>
&lt;p>인간의 영혼을 읽는 능력이 조금 덜 예리한 사람이라면 나의 끊임없는 부정에서 키아라를 방어막으로 사용하고 있음을 허둥지둥 시인한다는 끔찍한 신호를 발견했을 것이다.&lt;/p>
&lt;p>하지만 그런 능력이 대단히 날카로운 사람은 내 행동에서 완전히 다른 진실로 이어지는 문을 발견했으리라. 그 문을 열러면 위험을 각오해요. 장담하건대 당신은 진실을 듣고 싶지 않을 거예요. 아직 시간이 있을 때 자리를 피하는 게 좋을 거예요.&lt;/p></description></item><item><title>잘할 수 있는 일을 찾기 vs 일을 잘하기.</title><link>https://yshghid.github.io/docs/hobby/book/book25/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book25/</guid><description>&lt;h1 id="잘할-수-있는-일을-찾기-vs-일을-잘하기">
 잘할 수 있는 일을 찾기 vs 일을 잘하기.
 &lt;a class="anchor" href="#%ec%9e%98%ed%95%a0-%ec%88%98-%ec%9e%88%eb%8a%94-%ec%9d%bc%ec%9d%84-%ec%b0%be%ea%b8%b0-vs-%ec%9d%bc%ec%9d%84-%ec%9e%98%ed%95%98%ea%b8%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>많은 부자들은 일하는 것이 취미라고 말한다. 재미있게 즐긴다는 뜻이다. 토마스 J. 스탠리는 〈백만장자 마인드〉에서 미국의 백만장자 733명을 표본 조사하여 얻은 자료들을 보여 주는데 미국의 백만장자들 중 86%는 “나의 성공은 내 일과 직업을 사랑한 결과이다”라고 공통적으로 말한다(투자를 잘해야 부자가 된다는 말에 현혹되지 말라! 일이 우선이고 투자는 나중이다, 이 바보들아). 그리고 81%는 “나의 일은 내 능력과 적성을 한껏 발휘할 수 있도록 해 준다”고 말한다.&lt;/p></description></item><item><title>전문가의 세상으로 나가는것에 대한 두려움</title><link>https://yshghid.github.io/docs/hobby/book/book17/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book17/</guid><description>&lt;h1 id="전문가의-세상으로-나가는것에-대한-두려움">
 전문가의 세상으로 나가는것에 대한 두려움
 &lt;a class="anchor" href="#%ec%a0%84%eb%ac%b8%ea%b0%80%ec%9d%98-%ec%84%b8%ec%83%81%ec%9c%bc%eb%a1%9c-%eb%82%98%ea%b0%80%eb%8a%94%ea%b2%83%ec%97%90-%eb%8c%80%ed%95%9c-%eb%91%90%eb%a0%a4%ec%9b%80">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>자주 하면, 부담이 줄어든다. 일주일 동안의 결과물이 겨우 한 페이지, 블로그 포스팅 한 건, 스케치 하나라면 당연히 &amp;lsquo;특출나게 잘해야 한다&amp;rsquo;는 생각이 들고 작업물의 질에 대해 조바심을 내게 된다. 반면 매일 쓰면 하루치 정도는 그다지 중요하지 않다. 불안감이 사라진 덕분에 결과적으로 일을 더 즐기게 되고, 새로운 실험을 해 보거나 위험을 기꺼이 감수할 수도 있다. 괜찮은 결과물이 나오지 않아도 시간은 충분하니까 다른 방법을 시도하면 되는 것이다. 하지만 하루하루 시간은 지나는데 아무것도 완성되지 않으면 불안과 절망감이 엄습한다. 일을 미룸으로써 발생한 불안감 때문에 도리어 일에 매진하지 못하는 것은 직업 생활의 씁쓸한 아이러니다.&lt;/p></description></item><item><title>좀비를 줄 세우는 방법</title><link>https://yshghid.github.io/docs/hobby/book/book30/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book30/</guid><description>&lt;h1 id="좀비를-줄-세우는-방법">
 좀비를 줄 세우는 방법
 &lt;a class="anchor" href="#%ec%a2%80%eb%b9%84%eb%a5%bc-%ec%a4%84-%ec%84%b8%ec%9a%b0%eb%8a%94-%eb%b0%a9%eb%b2%95">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>#1&lt;/p>
&lt;p>일론 머스크가 물려받은 유산과 혈통은 그의 뇌 배선과 어우러져 때때로 그를 냉담하게도, 충동적이게도 만들었다. 그리고 그것은 또한 리스크에 대한 극도로 높은 수준의 내성으로 이어졌다. 그는 리스크를 냉정하게 계산할 수도 있었고, 열정적으로 수용할 수도 있었다. “일론은 리스크 그 자체를 원합니다.” 페이팔PayPal 초창기에 머스크의 파트너로 일했던 피터 틸은 말한다. “그는 리스크를 즐기는 듯합니다. 때로는 정말 리스크에 중독된 것처럼 보이기도 하고요.”&lt;/p>
&lt;p>머스크는 태풍이 몰려올 때 가장 강력한 생기를 느끼는 그런 사람 중 한 명이다. “나는 폭풍을 위해 태어났어요. 그러니 고요함은 나에게 적합하지 않지요.” 미국의 7대 대통령 앤드류 잭슨이 한 말이다. 일론 머스크도 마찬가지다. 그는 일과 연애 양 측면에서 폭풍과 드라마를 끌어당기는 힘, 때로는 갈망을 발달시켰다(그래서 그가 그렇게 부부 또는 연인관계를 유지하는 데 어려움을 겪은 것이리라). 그는 위기나 데드라인, 할 일의 폭증과 같은 상황에서 번성했다. 복잡하고 난해한 도전에 직면하면, 그로 인한 긴장으로 종종 잠을 이루지 못하거나 심지어 토하기도 했다. 그러나 그런 상황은 그에게 활력도 불어넣었다. “형은 드라마를 끄는 자석과 같아요.” 킴벌이 말한다. “드라마가 그의 강박이자 삶의 주제입니다.”&lt;/p></description></item><item><title>진전의 가시화</title><link>https://yshghid.github.io/docs/hobby/book/book18/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book18/</guid><description>&lt;h1 id="진전의-가시화">
 진전의 가시화
 &lt;a class="anchor" href="#%ec%a7%84%ec%a0%84%ec%9d%98-%ea%b0%80%ec%8b%9c%ed%99%94">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;h3 id="1">
 1
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;p>Q. 우리가 시간 관리를 좀 더 잘하기 위해서는 무엇에 집중해야 할까요?&lt;/p>
&lt;p>A. 저는 가장 중요한 요소가 ‘진전의 가시화’라고 생각합니다. 대개의 경우 일이 얼마나 진척됐는지 확인하기가 쉽지 않죠. 그런데 이메일 답장 같은 쉬운 일이라면, 1000통의 이메일에 답장한다고 해도 자신이 답장한 이메일을 한눈에 파악할 수 있습니다. 반면 어려운 문제를 처리할 때는 마치 30시간은 헛되이 보냈고 마지막 30분만 유용했던 것처럼 느껴집니다. 왜냐하면 마지막 30분 동안에 아이디어가 떠올랐기 때문이죠.&lt;/p></description></item><item><title>책 물고기는 존재하지 않는다</title><link>https://yshghid.github.io/docs/hobby/book/book6/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book6/</guid><description>&lt;h1 id="책-물고기는-존재하지-않는다">
 책 물고기는 존재하지 않는다
 &lt;a class="anchor" href="#%ec%b1%85-%eb%ac%bc%ea%b3%a0%ea%b8%b0%eb%8a%94-%ec%a1%b4%ec%9e%ac%ed%95%98%ec%a7%80-%ec%95%8a%eb%8a%94%eb%8b%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://blog.naver.com/afx1979/222154049972?trackingCode=blog_bloghome_searchlist">https://blog.naver.com/afx1979/222154049972?trackingCode=blog_bloghome_searchlist&lt;/a>&lt;/p>
&lt;p>이 블로그 글에는 이런 말이 나온다.&lt;/p>
&lt;blockquote>
&lt;p>미(학)적으로는 우울이나 자살이 아름다워 보일지 몰라도 진선미가 다 우울의 편을 든다고 해도 나는 분노가 더 낫다고 본다. 분노는 삶에 도움이 되고 삶을 더 좋게 변화시키는 원동력이 되기 때문이다.&lt;/p>&lt;/blockquote>
&lt;p>미학적으로는 진실만 받아들이는 것이 온전해보인다. 그런데 진실은 조금 밀어놓고 일단 달리기 시작하는 사람도 있다. 하이젠베르크의 불확정성 원리처럼 둘 다를 챙기는 것은 불가능하고 둘 중 하나는 어쩔 수 없이 포기해야 한다.&lt;/p></description></item><item><title>책 일론 머스크</title><link>https://yshghid.github.io/docs/hobby/book/book7/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book7/</guid><description>&lt;h1 id="책-일론-머스크">
 책 일론 머스크
 &lt;a class="anchor" href="#%ec%b1%85-%ec%9d%bc%eb%a1%a0-%eb%a8%b8%ec%8a%a4%ed%81%ac">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>똑똑하면서 적당히 착한 마음이 있는 사람은 다 좋다.&lt;/p>
&lt;blockquote>
&lt;p>머스크는 태풍이 몰려올 때 가장 강력한 생기를 느끼는 그런 사람 중 한 명이다. “나는 폭풍을 위해 태어났어요. 그러니 고요함은 나에게 적합하지 않지요.” 미국의 7대 대통령 앤드류 잭슨이 한 말이다. 일론 머스크도 마찬가지다. 그는 위기나 데드라인, 할 일의 폭증과 같은 상황에서 번성했다. 복잡하고 난해한 도전에 직면하면, 그로 인한 긴장으로 종종 잠을 이루지 못하거나 심지어 토하기도 했다. 그러나 그런 상황은 그에게 활력도 불어넣었다. “형은 드라마를 끄는 자석과 같아요.” 킴벌이 말한다. “드라마가 그의 강박이자 삶의 주제입니다.”&lt;/p></description></item><item><title>콜 미 바이 유어 네임</title><link>https://yshghid.github.io/docs/hobby/movie/movie2/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/movie/movie2/</guid><description>&lt;h1 id="콜-미-바이-유어-네임">
 콜 미 바이 유어 네임
 &lt;a class="anchor" href="#%ec%bd%9c-%eb%af%b8-%eb%b0%94%ec%9d%b4-%ec%9c%a0%ec%96%b4-%eb%84%a4%ec%9e%84">#&lt;/a>
&lt;/h1>
&lt;p>#2024-12-31&lt;/p>
&lt;hr>
&lt;p>여름 감성 최고봉 영화! 특히 ost가 너무 좋다.&lt;/p>
&lt;h3 id="1-플레이리스트">
 1. 플레이리스트
 &lt;a class="anchor" href="#1-%ed%94%8c%eb%a0%88%ec%9d%b4%eb%a6%ac%ec%8a%a4%ed%8a%b8">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=n50Z3HGj4QE">https://www.youtube.com/watch?v=n50Z3HGj4QE&lt;/a>&lt;/p>
&lt;p>&lt;strong>Sufjan Stevens - Mystery of Love&lt;/strong>
&lt;img src="https://github.com/user-attachments/assets/ccaa82f5-6192-42ca-a4c2-e2c10ddbfdb2" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=XPPp0Gn45_8">https://www.youtube.com/watch?v=XPPp0Gn45_8&lt;/a>&lt;/p>
&lt;p>&lt;strong>| 𝐩𝐥𝐚𝐲𝐥𝐢𝐬𝐭 | 𝐬𝐨𝐦𝐞𝐰𝐡𝐞𝐫𝐞 𝐢𝐧 𝐧𝐨r𝐭𝐡𝐞𝐫𝐧 𝐢𝐭𝐚𝐥𝐲 🌳🍃&lt;/strong>
&lt;img src="https://github.com/user-attachments/assets/3a5ac37b-ddb3-4467-8cd8-c33f39692a33" alt="image" />&lt;/p>
&lt;p>이건 비슷한 감성을 느끼고 싶을때 듣기 좋은 플리.&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/movie/movie2/#%eb%aa%a9%eb%a1%9d">⏶ top&lt;/a>&lt;/p>
&lt;h3 id="2-원작-소설">
 2. 원작 소설
 &lt;a class="anchor" href="#2-%ec%9b%90%ec%9e%91-%ec%86%8c%ec%84%a4">#&lt;/a>
&lt;/h3>
&lt;p>콜 미 바이 유어 네임 - 안드레 애치먼 &lt;a href="https://yshghid.github.io/docs/hobby/book/book8/">&amp;raquo;&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/937f6f30-ef6f-4899-b686-9b739cc94855" alt="image" />&lt;/p>
&lt;p>얼굴 개연성(..)으로만 설명되었던 빠져드는 계기가 천천히 설명되어서 좋았다. 그리고 올리버의 불안정함이 다른 어른들의 시각에 비추어서 어느정도 더 설명되니까 그것도 좋았다.&lt;/p></description></item><item><title>콜 미 바이 유어 네임 | 안드레 애치먼</title><link>https://yshghid.github.io/docs/hobby/book/book8/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/book/book8/</guid><description>&lt;h1 id="콜-미-바이-유어-네임--안드레-애치먼">
 콜 미 바이 유어 네임 | 안드레 애치먼
 &lt;a class="anchor" href="#%ec%bd%9c-%eb%af%b8-%eb%b0%94%ec%9d%b4-%ec%9c%a0%ec%96%b4-%eb%84%a4%ec%9e%84--%ec%95%88%eb%93%9c%eb%a0%88-%ec%95%a0%ec%b9%98%eb%a8%bc">#&lt;/a>
&lt;/h1>
&lt;p>#북마크&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book37">summer&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://yshghid.github.io/docs/hobby/book/book38">자전거&lt;/a>&lt;/p></description></item><item><title>혼자 공부하는 딥러닝 | ANN</title><link>https://yshghid.github.io/docs/study/bioinformatics/cs12/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/study/bioinformatics/cs12/</guid><description>&lt;h1 id="딥러닝-혼자-공부하는-딥러닝--ann">
 [딥러닝] 혼자 공부하는 딥러닝 | ANN
 &lt;a class="anchor" href="#%eb%94%a5%eb%9f%ac%eb%8b%9d-%ed%98%bc%ec%9e%90-%ea%b3%b5%eb%b6%80%ed%95%98%eb%8a%94-%eb%94%a5%eb%9f%ac%eb%8b%9d--ann">#&lt;/a>
&lt;/h1>
&lt;h2 id="목록">
 목록
 &lt;a class="anchor" href="#%eb%aa%a9%eb%a1%9d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">17. 간단한 인공 신경망 모델 만들기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#18-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d%ec%97%90-%ec%b8%b5%ec%9d%84-%ec%b6%94%ea%b0%80%ed%95%98%ec%97%ac-%ec%8b%ac%ec%b8%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%a7%8c%eb%93%a4%ea%b8%b0">18. 인공 신경망에 층을 추가하여 심층 신경망 만들어 보기&lt;/a>&lt;/p>
&lt;p>&lt;em>2024-12-31&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/study/cs/cs12/#19-%ec%9d%b8%ea%b2%bd-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%ed%9b%88%eb%a0%a8%ec%9d%98-%eb%aa%a8%eb%b2%94-%ec%82%ac%eb%a1%80-%ed%95%99%ec%8a%b5%ed%95%98%ea%b8%b0">19. 인경 신경망 모델 훈련의 모범 사례 학습하기&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="17-간단한-인공-신경망-모델-만들기">
 17. 간단한 인공 신경망 모델 만들기
 &lt;a class="anchor" href="#17-%ea%b0%84%eb%8b%a8%ed%95%9c-%ec%9d%b8%ea%b3%b5-%ec%8b%a0%ea%b2%bd%eb%a7%9d-%eb%aa%a8%eb%8d%b8-%eb%a7%8c%eb%93%a4%ea%b8%b0">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>데이터 준비&lt;/li>
&lt;/ol>
&lt;p>fashion_mnist 데이터셋에서 학습과 테스트용 이미지 데이터를 가져온다. 학습 데이터는 60,000개의 28x28 픽셀 이미지, 테스트 데이터는 10,000개의 28x28 픽셀 이미지. train_target과 test_target은 각 이미지에 해당하는 레이블(0~9)을 갖고있다.&lt;/p></description></item><item><title>카페 라파테</title><link>https://yshghid.github.io/docs/hobby/daily/daily13/</link><pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily13/</guid><description>&lt;h1 id="카페-라파테">
 카페 라파테
 &lt;a class="anchor" href="#%ec%b9%b4%ed%8e%98-%eb%9d%bc%ed%8c%8c%ed%85%8c">#&lt;/a>
&lt;/h1>
&lt;p>#2024-10-12&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/385d7769-924c-4b0e-a4d8-c66955153ff5" alt="image" />&lt;/p>
&lt;p>&amp;lsquo;범어역 브런치카페&amp;rsquo;의 정석 같은 카페 ㅎㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/5e0f3893-6b2f-4392-ac8b-ed1f32a3f5e8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/f8a770f0-1a66-46a2-9c01-031eb2d4a015" alt="image" />&lt;/p>
&lt;p>빵이 엄청 맛있다!! 이런건 아닌데 정석적인 브런치카페감성을 느끼고 싶을때 가기 좋은곳이다 ㅋㅋ&lt;/p>
&lt;p>브리또 / 베이글 / 에그타르트는 무난했구 소금빵은 요즘 워낙 버터많이넣은 소금빵집이 많아서 풍미가 적은느낌이있지만 갠적으로 다른집들이 너무 많이 넣는다고 생각해서 ㅠ 여기가 오히려 정통같아서 좋았당&lt;/p></description></item><item><title>크림치즈스콘</title><link>https://yshghid.github.io/docs/hobby/baking/baking11/</link><pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking11/</guid><description>&lt;h1 id="크림치즈스콘">
 크림치즈스콘
 &lt;a class="anchor" href="#%ed%81%ac%eb%a6%bc%ec%b9%98%ec%a6%88%ec%8a%a4%ec%bd%98">#&lt;/a>
&lt;/h1>
&lt;p>#2024-09-07&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7fce8e38-d51b-43c5-8622-aacc65ccd305" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=iBPlf_xCIc8">식탁일기 크림치즈스콘 레시피&lt;/a>가 이뻐보여서 시작한 크림치즈스콘&lt;/p>
&lt;p>비주얼 노릇노릇 넘 이쁘구 맛도 너무맛있다 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8da7605c-d572-46fc-bdd9-71057f124482" alt="image" />&lt;/p>
&lt;p>첫판에서 반죽이 좀 퍼진거같애서 냉장을 더시켜서 구워줬더니 미친비주얼이.. 너무 맛있게 생겨서 웃김 ㅋㅋㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8bb4285a-f823-483f-a491-67d8f4c3e940" alt="image" />&lt;/p>
&lt;p>같은 판 아님 여기저기 선물한다고 엄청구웠다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/dc38ef30-9c3e-4885-9af1-ba8c3d5cc124" alt="image" />&lt;/p>
&lt;p>굽기전엔 좀 애매한가? 싶어도&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8dedfba7-f40f-4b35-ad29-64006524afe8" alt="image" />&lt;/p>
&lt;p>굽고나면 마싯는 비주얼이 된다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/70f3aee1-0104-4835-9b1c-6673d70060e7" alt="image" />&lt;/p>
&lt;p>선물용으로 엄청 구운 모습&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/dd4836e1-b2f3-49f1-89d8-7f29e6f09755" alt="image" />&lt;/p>
&lt;p>아빠가 식빵구운거랑 같이 추석선물로 포장ㅎㅎㅋㅋ 며칠동안 집이 빵공장이었다.&lt;/p></description></item><item><title>주말아침의 대파치즈스콘</title><link>https://yshghid.github.io/docs/hobby/baking/baking10/</link><pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking10/</guid><description>&lt;h1 id="주말아침의-대파치즈스콘">
 주말아침의 대파치즈스콘
 &lt;a class="anchor" href="#%ec%a3%bc%eb%a7%90%ec%95%84%ec%b9%a8%ec%9d%98-%eb%8c%80%ed%8c%8c%ec%b9%98%ec%a6%88%ec%8a%a4%ec%bd%98">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-24&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/6009c57a-d6be-4caa-a6a7-596ac12a1095" alt="image" />&lt;/p>
&lt;p>여느 주말아침,, 고요비 유튜브 보다가 갑자기 삘받아서 대파치즈스콘 만들었다 ㅋㅋ 레시피는 &lt;a href="https://www.youtube.com/watch?v=J_gPcGzRxYQ&amp;amp;t=223s">자도르 콘치즈 스콘 레시피&lt;/a>에서 콘 빼고 파 넣었음.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7642a9a0-b7a5-4d33-9350-f48d626865be" alt="image" />&lt;/p>
&lt;p>생각보다 너무너무 맛있게 나와서 행복 ㅎㅎㅎ 특히 아빠가 넘맛있다구 해줬당&lt;/p></description></item><item><title>포카치아</title><link>https://yshghid.github.io/docs/hobby/baking/baking8/</link><pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking8/</guid><description>&lt;h1 id="포카치아">
 포카치아
 &lt;a class="anchor" href="#%ed%8f%ac%ec%b9%b4%ec%b9%98%ec%95%84">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-15&lt;/p>
&lt;hr>
&lt;p>발효빵 중에서도 수공이 꽤많이들어가는편인 포카치아..!! 발효도 16시간정도 엄청 오래 시켜야하구 발효중에도 한번씩 반죽접기 해줘야돼서 해볼까말까 고민했는데, 신경쓸게 많다고 생각하니까 오히려 도전욕구가 자극되었다. ㅎ&lt;/p>
&lt;p>레시피는 &lt;a href="https://www.youtube.com/watch?v=pePLq1Zu5BA">자도르 포카치아 레시피&lt;/a>에서 변형 없이 그대로 해줬다!&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/bf79a9cb-4434-40b9-bb7b-7f9a268d56b2" alt="image" />&lt;/p>
&lt;p>토마토 정갈하게 썰린게 예뻐서 찍음 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/54de8928-d89d-46bc-9843-5b5a3cd34ae9" alt="image" />&lt;/p>
&lt;p>토마토랑 올리브오일 로즈마리로 데코하기. 굽기전인데 벌써 이쁘다&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/392bf192-a1bd-4b1e-9470-194dbc1a030b" alt="image" />&lt;/p>
&lt;p>조금 남아서 시식용도 만듦 ㅋㅋ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/801f2693-d843-464d-8250-f2ee3060807c" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/028025c8-1b81-4950-9bc7-5466bf4d162f" alt="image" />&lt;/p>
&lt;p>결과물!! 이정도면 성공이라고본다 ㅎㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/f74fdce7-bb52-47e8-b356-7140b51d9dae" alt="image" />&lt;/p>
&lt;p>단면샷을 안찍어놨는데 구멍이 엄청많진않았지만 포카치아에서 중요한 쫄깃바삭 속성은 충분했구 엄청 맛있게 먹었다 ㅎㅎ&lt;/p></description></item><item><title>황치즈 비스코티</title><link>https://yshghid.github.io/docs/hobby/baking/baking9/</link><pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking9/</guid><description>&lt;h1 id="황치즈-비스코티">
 황치즈 비스코티
 &lt;a class="anchor" href="#%ed%99%a9%ec%b9%98%ec%a6%88-%eb%b9%84%ec%8a%a4%ec%bd%94%ed%8b%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-15&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=R1z_Y3LHB6E">올드패션 황치즈 비스코티 레시피&lt;/a> 보고 넘 예쁘고 맛있어보여서 만들어봤다 ㅎㅎ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/df59fc8a-0047-48e0-bb70-e9570b938614" alt="image" />&lt;/p>
&lt;p>벽돌아님&amp;hellip; 반죽임&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/aa50e203-fb1f-4356-adb1-9d9e2982c99f" alt="image" />&lt;/p>
&lt;p>간단해보였는데 얘도 은근 손이 많이간다. 벽돌상태로 1차 굽기 해준담에 쿠키두께되게 썰어서 펼쳐주고 2차굽기 -&amp;gt; 뒤집에서 3차굽기 해줘야함.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/be290f0a-1790-41bd-8c12-3d891e436a0e" alt="image" />&lt;/p>
&lt;p>결과물 ㅎㅎ 생긴건 유튜브보단 투박한데 맛이 진짜 미쳤다. 파마산치즈가루가 신의 한수인듯.&lt;/p>
&lt;p>유명한 베이킹 유튜브들이 많지만 이사람 레시피가 전체적으로 찐인듯거같다. 왜그렇게 느껴지나 생각해봤는데 ㅋㅋ 대부분 유튜브가 본인 기술력으로 쇼부보는데 이사람은 맛있을수밖에 없는 특정 재료를 넣어서 맛을 강화함. 그래서 나같은 초짜가 만들어도 웬만하면 마싯게 출력되는거같다. ㅋㅋ&lt;/p></description></item><item><title>소금빵</title><link>https://yshghid.github.io/docs/hobby/baking/baking7/</link><pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking7/</guid><description>&lt;h1 id="소금빵">
 소금빵
 &lt;a class="anchor" href="#%ec%86%8c%ea%b8%88%eb%b9%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-11&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0f11cb2d-1fd2-4231-9f0a-77fab8a0f4fa" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=OoKzyOJLygo">식탁일기 소금빵 레시피&lt;/a> 따라구운 소금빵!! 근데 버터롤빵때랑 마찬가지로 발효시간이 좀 부족했던거같음.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/9c39fe13-65eb-461a-87db-8a5448ae8ced" alt="image" />&lt;/p>
&lt;p>나름 소세지 끼운 문어소금빵으로 바리에이션도 줬다. ㅋㅋ&lt;/p></description></item><item><title>버터롤빵</title><link>https://yshghid.github.io/docs/hobby/baking/baking6/</link><pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking6/</guid><description>&lt;h1 id="버터롤빵">
 버터롤빵
 &lt;a class="anchor" href="#%eb%b2%84%ed%84%b0%eb%a1%a4%eb%b9%b5">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-08&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/cbabb545-b0e0-46f4-b2b9-06d70e6c557c" alt="image" />&lt;/p>
&lt;p>구움과자 아니라 발효가 들어가는 빵은 처음 구워봤다!! (그래서 실패할까봐 엄청 조금 굽기..)&lt;/p>
&lt;p>레시피는 &lt;a href="https://www.youtube.com/watch?v=2uJL0ZtU_kI&amp;amp;t=3s">식탁일기 버터롤빵 레시피&lt;/a>대로 했다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/a90b32a8-f453-40e2-b96a-c0d1845e2779" alt="image" />&lt;/p>
&lt;p>반죽성형 해줌&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/0645d272-2b48-458b-a637-fdf2a9c58f09" alt="image" />&lt;/p>
&lt;p>칼집내서 굽기. 근데 칼집 넘깊게내서 결은 엄청많은데 모양은 좀 깨진거같다 ㅋㅋ&lt;/p>
&lt;p>그리구 무엇보다 촉촉한 느낌보다는 좀 딱딱한느낌이었는데 구운시간의 문제보다는 발효가 부족했던듯. 그래두 맛있게먹었다 ㅎㅎ&lt;/p></description></item><item><title>레몬 쿠키</title><link>https://yshghid.github.io/docs/hobby/baking/baking5/</link><pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking5/</guid><description>&lt;h1 id="레몬-쿠키">
 레몬 쿠키
 &lt;a class="anchor" href="#%eb%a0%88%eb%aa%ac-%ec%bf%a0%ed%82%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-07&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/7e580c9c-5753-49b4-97c7-62df9ae141f2" alt="image" />&lt;/p>
&lt;p>색다른 쿠키를 만들고싶어서 레몬 쿠키 도전!&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=ejcXPqIEYFw&amp;amp;t=1s">요 레시피&lt;/a>를 따라하긴했는데 내가 쓴 밀가루가 문제인지 정량대로 넣으니까 너무 묽어져서 ㅠㅠ 밀가루 훨씬더넣고 근데 연해져서 레몬제스트 넣고 슈가파우더 넣고&amp;hellip; 점도 산미 단맛 3개만 맞추자 하고 맘대로 커스텀해버려서 재현은 불가능한 쿠키가 됐다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/708e5690-ca91-442d-bc63-f2bfaf49a5ae" alt="image" />&lt;/p>
&lt;p>노릇노릇 기여운 결과물 ㅎㅎ 레몬쿠키는 요런 클래식한 쿠키커터가 잘 어울리는둣.&lt;/p>
&lt;p>맛도 엄청맛있었다! 근데 다시 만들려면 레시피를 재창조해야대서 아쉽다 ㅠㅠ&lt;/p></description></item><item><title>통밀쿠키 / 빼곰스튜디오 쿠키커터</title><link>https://yshghid.github.io/docs/hobby/baking/baking4/</link><pubDate>Sun, 04 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking4/</guid><description>&lt;h1 id="통밀쿠키--빼곰스튜디오-쿠키커터">
 통밀쿠키 / 빼곰스튜디오 쿠키커터
 &lt;a class="anchor" href="#%ed%86%b5%eb%b0%80%ec%bf%a0%ed%82%a4--%eb%b9%bc%ea%b3%b0%ec%8a%a4%ed%8a%9c%eb%94%94%ec%98%a4-%ec%bf%a0%ed%82%a4%ec%bb%a4%ed%84%b0">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-04&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/4c60a565-8351-4827-bed1-abdb03d19dd0" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://smartstore.naver.com/saiedesign">빼곰스튜디오&lt;/a>랑 &lt;a href="https://smartstore.naver.com/chichi_land">치치공작소&lt;/a>에서 쿠키커터를 엄청 쇼핑했는데 첫개시하기!!&lt;/p>
&lt;p>레시피는 실패없는 &lt;a href="https://www.youtube.com/watch?v=43m2weB48nQ">자도르 통밀 쿠키 레시피&lt;/a>대로 했다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/680a07f4-664a-4996-96e9-1119415132f1" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/c781614b-69ad-43ff-b1c9-d4fb15e319e8" alt="image" />&lt;/p>
&lt;p>노릇노릇&lt;/p>
&lt;p>굽고나니깐 약간 흐려져서 슬픔 ㅠㅠ&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/ea29592b-37e5-4cb7-84bd-522a7aebfeb6" alt="image" />&lt;/p>
&lt;p>딸기펜으로 점찍어주니까 더 기여워졋당&lt;/p></description></item><item><title>휘낭시에</title><link>https://yshghid.github.io/docs/hobby/baking/baking3/</link><pubDate>Sun, 04 Aug 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking3/</guid><description>&lt;h1 id="휘낭시에">
 휘낭시에
 &lt;a class="anchor" href="#%ed%9c%98%eb%82%ad%ec%8b%9c%ec%97%90">#&lt;/a>
&lt;/h1>
&lt;p>#2024-08-04&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8d292b27-a352-4406-8d75-152c04ba0bb2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/d66e23f4-2539-49ae-8c55-2be4b3a7dce2" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/c91df305-c8d6-4b45-a139-93db0fe0b1c4" alt="image" />&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=hF5PYrwnFoU">조빵이 레시피&lt;/a>대로 만든 휘낭시에!!&lt;/p>
&lt;p>첫트라서 웬만하면 그대로 갈려고 했는데 ㅠ 인간적으로 버터랑 설탕이 너무많이들어가서 버터는 정량 / 설탕은 절반 넣었는데 그래도 단것같은 기분 ㅋㅋ ㅠㅠ&lt;/p>
&lt;p>맛은 맛있었지만 휘낭시에의 빠쟉함은 설탕량에서 나오는게 일부 있는거같다. 건강한 맛 바라면 안대는 메뉴니깐 휘낭시에는 그냥 사먹는걸로&amp;hellip;ㅋ&lt;/p></description></item><item><title>무품곰 (무화과 품은 곰) 쿠키</title><link>https://yshghid.github.io/docs/hobby/baking/baking2/</link><pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking2/</guid><description>&lt;h1 id="무품곰-무화과-품은-곰-쿠키">
 무품곰 (무화과 품은 곰) 쿠키
 &lt;a class="anchor" href="#%eb%ac%b4%ed%92%88%ea%b3%b0-%eb%ac%b4%ed%99%94%ea%b3%bc-%ed%92%88%ec%9d%80-%ea%b3%b0-%ec%bf%a0%ed%82%a4">#&lt;/a>
&lt;/h1>
&lt;p>#2024-07-30&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/760f886a-bf98-4c77-a580-55c82cd32aa8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/60c3707b-685c-437e-843a-1d8a4751834a" alt="image" />&lt;/p>
&lt;p>보통 아품곰(아몬드 품은 쿠키) 만드는 쿠키틀이지만 아몬드가 없어서 무화과를 넣어보았다.&lt;/p>
&lt;p>쿠키 레시피는 그냥 &lt;a href="https://www.youtube.com/watch?v=43m2weB48nQ">자도르 통밀 쿠키 레시피&lt;/a> 배합대로 했는데 반죽 문제라기보다는 모양 흐트러질까봐 좀 두껍게 구웠더니 좀 덜 바삭한 쿠키가 댓다&lt;/p>
&lt;p>그래두 모양이 귀여우니깐 ㅎㅎ 만족&lt;/p></description></item><item><title>홈메이드 그래놀라</title><link>https://yshghid.github.io/docs/hobby/baking/baking1/</link><pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/baking/baking1/</guid><description>&lt;h1 id="홈메이드-그래놀라">
 홈메이드 그래놀라
 &lt;a class="anchor" href="#%ed%99%88%eb%a9%94%ec%9d%b4%eb%93%9c-%ea%b7%b8%eb%9e%98%eb%86%80%eb%9d%bc">#&lt;/a>
&lt;/h1>
&lt;p>#2024-07-13&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/8cffb1db-4375-4887-902c-03555d19a86b" alt="image" />&lt;/p>
&lt;p>집에 있는 재료 이것저것 넣고 구웠는데 생각보다 너무 맛있었던..!&lt;/p>
&lt;p>재료는 오트밀/호두/아몬드/해바라기씨/크랜베리/꿀 넣었다&lt;/p>
&lt;p>레시피는 &lt;a href="https://www.youtube.com/watch?v=TX67WTRLsjA">자도르 유튜브&lt;/a> 봤긴 한데 &amp;lsquo;노릇하게 굽고-&amp;gt;섞어주고-&amp;gt;다시 굽고 반복&amp;rsquo;이라는 개념만 가져가구 나머진 그냥 내 오븐에 맞춰서 했다.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/a923162c-fca7-44db-a6ec-5b37bd61688c" alt="image" />&lt;/p>
&lt;p>요건 굽기 전 버전.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/02326492-bc1d-4062-a6dd-e35b594dedac" alt="image" />&lt;/p>
&lt;p>크랜베리 대신 건포도 버전. 근데 크랜베리 넣은게 훨 맛있다.&lt;/p></description></item><item><title>생각들</title><link>https://yshghid.github.io/docs/hobby/daily/daily17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/daily17/</guid><description>&lt;h1 id="생각들">
 생각들
 &lt;a class="anchor" href="#%ec%83%9d%ea%b0%81%eb%93%a4">#&lt;/a>
&lt;/h1>
&lt;h2 id="2025">
 2025
 &lt;a class="anchor" href="#2025">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>07-02&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book43/">*&lt;/a>&lt;/p>
&lt;p>&lt;em>06-26&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/book/book41/">*&lt;/a>&lt;/p>
&lt;p>&lt;em>04-17&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/daily/daily6/">사회생활은 너모어렵다&lt;/a>&lt;/p>
&lt;p>&lt;em>04-13&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/daily/daily4/">사실내가 하고싶은것&lt;/a>&lt;/p>
&lt;p>&lt;em>04-10&lt;/em> ⋯ &lt;a href="https://yshghid.github.io/docs/hobby/daily/daily2/">너무많은일&lt;/a>&lt;/p></description></item><item><title>클럽메드 ☃️</title><link>https://yshghid.github.io/docs/hobby/daily/blog39/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yshghid.github.io/docs/hobby/daily/blog39/</guid><description>&lt;h1 id="클럽메드-">
 클럽메드 ☃️
 &lt;a class="anchor" href="#%ed%81%b4%eb%9f%bd%eb%a9%94%eb%93%9c-">#&lt;/a>
&lt;/h1>
&lt;p>#2025-02-28&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/a040042b-9ad0-44cb-bc27-fdd77170f521" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b2b6a08f-a95d-4c10-9f21-95edd39b425f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5f62a11a-9aea-4d0e-a6fe-088ad3016798" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/3026ef3e-82f8-42c3-84b6-7454ce9c57f0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/a1136f71-f2ad-48fb-abec-a2ead6ea6b15" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/220898e6-3a0d-4416-bffc-44cccb65e30e" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/975e9a7e-df87-4530-889e-dc0470c91294" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/16eb8c3f-c2ed-48c7-a2e7-e4f48e0c733d" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/b40d7545-ac9c-4433-876b-b361045530bb" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/892b7e16-affa-4f7e-bca6-e6b56dca525f" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/e9c84956-9db4-4e95-b862-8c07adf9a9b8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/04f8a3c9-464d-4aaa-9201-7d589cda35b8" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/5b6233e6-deab-4d6b-a5af-8cf55074f4f0" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/1f249cd8-e7f6-41bb-a11a-e105720ad2b1" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/0bba2426-43e3-47c3-bbd7-f01fb062c149" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/8025631e-47af-4d23-9c93-a7fa35419767" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/080af6c9-7079-494b-9d8b-16d02daaca96" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/7143dfd4-4900-421c-842b-39419d421315" alt="image" />
&lt;img src="https://github.com/user-attachments/assets/11bc34df-1b0d-423e-9047-b00920e13098" alt="image" />&lt;/p></description></item></channel></rss>