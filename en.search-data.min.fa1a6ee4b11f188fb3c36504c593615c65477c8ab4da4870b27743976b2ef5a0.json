[{"id":0,"href":"/docs/blog/","title":"일상","section":"Docs","content":" 일상 # 블로그 시작 (부제: 제발열심히살자..) # 2024.12.31 # "},{"id":1,"href":"/docs/hobby/book/","title":"책","section":"기록","content":" 책 # 뉴욕 스케치 # 2022.06.15 # "},{"id":2,"href":"/docs/study/bi/","title":"BI","section":"공부","content":" BI | 생물정보학 # "},{"id":3,"href":"/docs/study/cs/","title":"CS","section":"공부","content":" CS | 컴퓨터공학 # [Hugo] Hugo로 깃허브 블로그 만들기 (2) favicon 변경, Giscus 댓글창 추가 # 2024.07.22 # [Hugo] Hugo로 깃허브 블로그 만들기 (1) 사이트 생성, 깃허브 배포 # 2024.07.22 # "},{"id":4,"href":"/docs/hobby/movie/","title":"영화","section":"기록","content":" 영화 # "},{"id":5,"href":"/docs/hobby/inspiration/","title":"생각","section":"기록","content":" 생각 # [일론 머스크] 제1원리 사고법: 추정이 아닌 근본적인 문제로의 접근 # 2024.06.13 # "},{"id":6,"href":"/docs/hobby/book/book1/","title":"뉴욕 스케치","section":"책","content":" 뉴욕 스케치 # 2022.06.15 # 이 페이지를 찍을때의 나와, 끝까지 다 읽고 난 뒤의 내가 이 그림을 보는 마음가짐이 완전히 다르다는게 내겐 중요한 부분이다. 무지성 기운 북돋음이 의미가 없는데도 의미가 있다는 것이 무슨말인지 모르겠지만 뭔지 알겠다는게 믿어지십니까?? 그와중에 뉴욕의 거리를 그린 표지는 아름답네 하고 흘려버리는게 용납되십니까??\n두루두루 무언가를 보는건 좋아하는데, 이를테면 쇼핑몰. 아니면 유튜브 브이로그. 아니면 인스타 속 셀럽 사진. 남의 블로그에서 추천해주는 창작물들. 남의 일기. 볼만하지만 크게 재밌지는않은 영화나 책이나 예능. 근데 나한테 가치가 꽤 큰데도 두루두루 보고 넘긴다? 아주 아닌것 같지만 그런데도 나한텐 중요한것중 하나인 인생을 두루두루 살아야한다니 머리는 받아들이지만 마음이 받아들이지못하네. 그럼에도 불구하고 아주 일시적으로나마 공감당했다는 증거가 이 책에 남았다.\n"},{"id":7,"href":"/docs/hobby/movie/details/","title":"Details","section":"영화","content":" Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample # {{% details \u0026#34;Title\u0026#34; [open] %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} {{% details title=\u0026#34;Title\u0026#34; open=true %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} Markdown content # Lorem markdownum insigne\u0026hellip;\n"},{"id":8,"href":"/docs/blog/blog1/","title":"블로그 시작 (부제: 제발열심히살자..)","section":"일상","content":" 블로그 시작 (부제: 제발열심히살자..) # 2024.12.31 # 최근에 무기력한 기분이 너무 오래가서\u0026hellip; 느슨해지다못해 일시정지해버린 일상에 긴장감을 주기 위해 블로그를 시작한다. 공부도 하기싫고 취준도 하기싫고 구냥 아무것도 하고싶지않다 ㅠㅠ\n오늘도 사실 랩미팅 피피티만들어야되는데 하기싫어서, 전에 오류나서 엎었던 블로그 다시 만들었다. 정말이지 일하는것빼고 다 재밌는듯.\n그리고 독감걸린동안 아무것도 안했는데 내일이면 휴가 끝나니까 그것도 너무 두렵다. 이제 몸은 안아픈데 정신이 아픈거같음.. ㅋㅋ\n일단 지금 해야되는일은\nSQL 공부 (시험일: 3.8) 빅분기 필기 공부 (시험일: 4.5) ODE 모델 논문 찾아놓은거 읽고 피피티 만들기 (제일 급함) TCR-bert 모델 논문 보내주신거 읽기 (제일 많음) 면접대비캠프 신청해놓음 (1.7-1.11) 이정도이고\n이번주 토요일 오전에 미용실가야하고 헬스장은 2일 연속 갔으니까 오늘은 안가도되지만 안가면 내일도 안갈거같긴한데 모르겠다. 근데 피피티 내일 하루만에 만들수있나? 절대 못만들거같은데 오늘은 안하고싶다.\n그래두 앉아서 뭐라도하니깐 무기력한기분은 조금 가시는것같다. 넘조급하지말고 할수있는일을 하자..!!\n"},{"id":9,"href":"/docs/hobby/inspiration/ins1/","title":"[일론 머스크] 제1원리 사고법: 추정이 아닌 근본적인 문제로의 접근","section":"생각","content":" [일론 머스크] 제1원리 사고법: 추정이 아닌 근본적인 문제로의 접근 # ​\nI do think there\u0026rsquo;s a good framework for thinking. It is physics. You know, the sort of first principles reasoning. Generally I think there are.. what I mean by that is boil things down to their fundamental truths and reason up from there, as opposed to reasoning by analogy. Through most of our life, we get through life by reasoning by analogy, which essentially means copying what other people do with slight variations. And you have to do that. Otherwise, mentally you wouldn\u0026rsquo;t be able to get through the day. But when you want to do something new, you have to apply the physics approach. Physics is really figuring out how to discover new things that are counterintuitive, like quantum mechanics. It\u0026rsquo;s really counterintuitive. So I think that\u0026rsquo;s an important thing to do, and then also to really pay attention to negative feedback, and solicit it, particularly from friends. This may sound like simple advice, but hardly anyone does that, and it\u0026rsquo;s incredibly helpful.\n글쎄요.. 저는 생각을 할 때 써먹기 좋은 어떠한 틀이 있다고 보는데 바로 물리입니다. 일종의 제1원리 사고법 이라고 할까요. 일반적으로 저는.. 그러니까 이게 무슨 말이냐면, 물질의 근본적인 것까지 파고들어 그로부터 다시 생각해 나가는 것인데요, 유추해 나가는 방식과는 반대되는 개념입니다. 우리 대부분은 인생을 살아가면서 유추한 것을 기반으로 살아가죠. 이는 달리 말해 다른 사람들이 하는 것을 약간의 변화만을 주어 따라 한다는 건데요. 평소에는 그렇게 하는게 맞아요. 그렇지 않으면 정신적으로 하루하루를 버텨내기 힘드실테니까요. 그러나 무언가 새로운 걸 하고자 하신다면 물리학적으로 접근하셔야 합니다. 물리학은 직관에서 벗어나 어떻게 하면 새로운 것을 발견할 수 있을지 생각해 나가는 것인데 양자역학을 예로 들 수 있겠네요. 직관에 전혀 의존하지 않습니다. 그래서 저는 이런 사고방식이 중요하다고 생각하고 또한 부정적인 평가에도 귀를 기울일 줄 아셔야 합니다. 특히 친구들로부터 그런 평가를 해달라고 부탁하세요. 이게 정말 평범한 조언같이 들리시겠죠, 거의 대부분은 무시하시니까요. 정말 도움이 되는데도 말입니다.\nI think it\u0026rsquo;s also important to reason from first principles, rather than by analogy. So the normal way that we conduct our lives is we reason by analogy. It\u0026rsquo;s\u0026hellip; we\u0026rsquo;re doing this because it\u0026rsquo;s like something else that was done, or it\u0026rsquo;s like what other people are doing. Cause it\u0026rsquo;s kind of mentally easier to reason by analogy, rather than from first principles. But first principle is kind of a physics way of looking at the world. And what that really means is you kind of boil things down to the most fundamental truths, and say, OK, what are we sure is true? Or sure as possible is true? and then reason up from there. That takes a lot more mental energy. Somebody could say, in fact, people do that battery packs are really expensive and that\u0026rsquo;s just the way the\u0026rsquo;ll always be because that\u0026rsquo;s the way they\u0026rsquo;ve been in the past. I\u0026rsquo;m like. Well, No. that\u0026rsquo;s pretty dumb, you know, because if you apply that reasoning to anything new, then you wouldn\u0026rsquo;t be able to ever get to that new thing. So, you know, it\u0026rsquo;s.. like, you can\u0026rsquo;t say. Oh, you know horses.. nobody wants a car because horses are great, and we\u0026rsquo;re used to them and they can eat grass, there\u0026rsquo;s lots of grass all over the place and you know, there\u0026rsquo;s not like, there\u0026rsquo;s no gasoline that people can buy. So people will never going to get cars. People did say that. And for batteries, they would say, oh, it\u0026rsquo;s gonna cost.. You know, historically it\u0026rsquo;s cost 600 dollars per kilowatt hour, and so.. it\u0026rsquo;s gonna be much better than that in the future. I would say, no, okay, what are the batteries made of? So with the first principles, we say, ok. What are the material constituents of the batteries? What is the stock-market value of the mateiral constituents? So you can say, ok, it\u0026rsquo;s got cobalt, nickel, aluminum, carbon, and some polymers for separation, and a seal can. So break that down on a material basis and say, if we bought that on the London Metal Exchange, what would each of those things cost? Oh geez, it\u0026rsquo;s like $80 per kilowatt hour. So clearlly you just need to think of clever ways to take those materials and combine them into the shape of a better call, and you can have batteries that are much, much cheaper than anyone realizes.\n저는 유추를 하는 것보다는 제1원리에서부터 추론을 시작하는 것이 중요하다고 생각하는데요. 우리는 인생의 계획을 세울 때도 보통 유추를 바탕으로 계획을 수립하곤 하는데요. 그렇게 하는 이유는 지금껏 다른 것들도 다른 방식으로 행해져 왔기 때문이겠죠. 아니면 다른 누군가도 그렇게 해왔으니까요. 유추로부터 추론해 나가는 것은 그게 정신적으로 덜 힘들기 때문이겠죠, 제1원리를 따르는 것보다 말이에요. 제1원리는 물리학적 방식으로 세상을 바라보는 것이거든요. 이게 무슨 말이냐면, 가장 근본적인 논거에 이르기까지 어떠한 문제를 압축해 나가는 건데요, 예를 들어, 우리가 정말 참이라고 확신할 수 있는 것에는 무엇이 있을까? 라는 질문으로부터 추론을 시작해 나가는 겁니다. 이렇게 하면 정신적으로는 더 힘이 들겠지만요. 어떤 분들은.. 사실 정말로 이렇게 말씀들을 많이 하시는데 배터리 팩의 가격은 너무 비싸고 앞으로도 계속 비싸겠지. 과거에도 그래왔으니까. 그럼 저는, 아닌데! 그거 참 멍청한 소리 같은데? 무언가 새로운 것을 만드는 데 그런 식의 추론을 적용한다면 절대로 새로운 무언가를 만들어내지 못할 테니까. 그래서.. 뭐 이런 소리를 하면 곤란하겠죠, 말의 경우에는.. 말이 워낙 훌륭해서 차를 원하는 사람은 없을거야. 우리는 말을 타는 게 익숙하다고, 말은 풀도 뜯어 먹고, 여기 온 사방이 풀로 뒤덮여 있잖아. 지금 이곳을 봐, 사람들이 기름을 어디서 사냐고. 그러니 사람들은 절대로 차를 안 살거야. 진짜로 사람들이 이런 말을 했어요. 그래서 배터리 같은 경우에도 사람들이, 비용이 너무 많이 들어..역사적으로 보면 1킬로와트시(kWh) 당 600 달러가 드는데 미래에 이보다 가격이 더 떨어질 것 같지 않아.. 라고 말하면, 저는 이런 질문을 합니다. 그래? 배터리팩은 뭘로 만들어지지? 그러니까 제1원리로 접근하면 이런거죠. 배터리를 구성하는 물질 성분들은 어떤 것들이 있지? 거래소에서 이 물질들의 가치는 어떻게 형성되어 있지? 그러고 나서 이제, 배터리 팩은 코발트, 니켈, 알루미늄, 카본, 가체 분리용 중합체 그리고 밀봉된 캔으로 구성되는구나. 그럼 이러한 성분의 기저로부터 세부적으로 쪼개 들어가, 이 금속들을 런던금속거래소에서 구매한다면, 각각의 금속들은 얼마 정도 할까? 질문하는 겁니다. 그랬더니 뭐야! 1킬로와트시당 80달러 정도밖에 안 드네! 이와 같이 각각의 물질들을 보다 영리하게 접근해서 이를 배터리의 형태로 결합할 수 있는지 생각해 보는 겁니다. 그러면 그 누구도 생각지 못할 만큼 훨씬 저렴한 배터리도 만들 수 있게 되는 거죠.\n"},{"id":10,"href":"/docs/study/cs/cs1/","title":"Hugo로 깃허브 블로그 만들기 (1) 사이트 생성, 깃허브 배포","section":"CS","content":" Hugo로 깃허브 블로그 만들기 (1) 사이트 생성, 깃허브 배포 # 2024.07.22 # Hugo 설치 # $ brew install hugo $ hugo version hugo v0.131.0+extended darwin/arm64 BuildDate=2024-08-02T09:03:48Z VendorInfo=brew Hugo v0.112.0 이상인지 확인하면 된다.\nHugo 사이트 생성 # 작업하고 싶은 위치에 Hugo 디렉토리를 만들어준다.\n$ mkdir Hugo $ cd Hugo Hugo로 들어가서 hugo 사이트 틀을 생성해준다. 나는 blog라는 이름으로 생성하였다.\n$ pwd /Users/yshmbid/Hugo $ hugo new site blog blog 디렉토리에 빈 Git 저장소를 초기화한다.\n$ cd blog $ pwd /Users/yshmbid/Hugo/blog $ git init hint: Using \u0026#39;master\u0026#39; as the name for the initial branch. This default branch name hint: is subject to change. To configure the initial branch name to use in all hint: of your new repositories, which will suppress this warning, call: hint: hint: git config --global init.defaultBranch \u0026lt;name\u0026gt; hint: hint: Names commonly chosen instead of \u0026#39;master\u0026#39; are \u0026#39;main\u0026#39;, \u0026#39;trunk\u0026#39; and hint: \u0026#39;development\u0026#39;. The just-created branch can be renamed via this command: hint: hint: git branch -m \u0026lt;name\u0026gt; /Users/yshmbid/Hugo/blog/.git/ 안의 빈 깃 저장소를 다시 초기화했습니다 위에서 Using \u0026lsquo;master\u0026rsquo; as the name for the initial branch. 언급이 나온다. 여기서 확인해줘야 할 부분이 있다.\n레포지토리 생성 페이지에서 Add a README file.을 체크하면 This will set main as the default branch.라는 안내가 뜬다. 이를 통해 default가 main임을 확인할수있다.\n따라서 위의 경우에는 master가 아닌 main으로 바꿔줘야 한다.\n$ pwd /Users/yshmbid/Hugo/blog $ git config --global init.defaultBranch main $ git branch -m main 다음으로 선택한 테마를 Git 서브모듈로 프로젝트에 추가한다. 나는 hugo-book이라는 테마를 사용했다.\n$ pwd /Users/yshmbid/Hugo/blog $ git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book 다음으로, 블로그의 기본 설정들을 세팅해준다. blog 디렉토리 내 파일들은 대략적으로 아래와 같이 구성되어 있다.\n$ ls archetypes\tdata\ti18n\tresources assets\thugo.toml\tlayouts\tstatic content\tpublic\tthemes 이 중에서 content와 hugo.toml만 수정할것이다. content에는 작성한 게시물이 들어가고, hugo.toml에는 기본 세팅을 위한 config 변수들이 들어간다.\nhugo-book 테마의 경우에는 content에 대해 이와 같이 언급하고 있다. 해당 테마는 국가별로 여러 content 디렉토리가 존재해서, 그 중 main이 되는 content.en의 내용만을 시키는대로 복사해준다.\n$ cp -R themes/hugo-book/exampleSite/content.en/* ./content 다음으로 hugo.toml에 선택한 테마를 설정해주고 열어서 확인해본다.\n$ echo \u0026#34;theme = \u0026#39;hugo-book\u0026#39;\u0026#34; \u0026gt;\u0026gt; hugo.toml $ view hugo.toml 1 baseURL = \u0026#39;https://example.org/\u0026#39; 2 languageCode = \u0026#39;en-us\u0026#39; 3 title = \u0026#39;My New Hugo Site\u0026#39; 4 theme = \u0026#39;hugo-book\u0026#39; 여기서 base가 되는 내용만 수정해줬다.\n1 baseURL = \u0026#39;https://yshghid.github.io/\u0026#39; 2 languageCode = \u0026#39;en-us\u0026#39; 3 title = \u0026#39;\bLifelog 2025\u0026#39; 4 theme = \u0026#39;hugo-book\u0026#39; # i를 누르면 편집모드로 전환된다. # 편집이 끝났으면 esc를 누르고 :wq!를 입력하면 완료된다. 기본적인 설정이 끝났으므로 로컬에서 실행시켜보자! http://localhost:1313에 접속하면 local 환경에서 어떻게 실행 중인지 확인할수있다.\n$ hugo server 이쁘게 잘 나온다 ㅎㅎ\n변경 사항을 픽스하려면 hugo를 수행해서 public 디렉토리에 static site 코드를 생성해준다.\n$ pwd /Users/yshmbid/Hugo/blog $ hugo Start building sites … hugo v0.131.0+extended darwin/arm64 BuildDate=2024-08-02T09:03:48Z VendorInfo=brew WARN Expand shortcode is deprecated. Use \u0026#39;details\u0026#39; instead. | EN -------------------+----- Pages | 58 Paginator pages | 0 Non-page files | 0 Static files | 78 Processed images | 0 Aliases | 11 Cleaned | 0 Total in 66 ms Hugo 사이트 배포 # hugo로 만든 static site를 github page를 활용해서 배포할것이다. 이를 위해서 \u0026lt;user-id\u0026gt;.github.io 리포지토리를 생성해준다.\n이때 Add a README file 을 선택할 경우 push 할때 오류가 날 수 있으므로 체크 해제해서 생성해주는게 좋다.\n다음으로, .github/workflows 경로에 gh-pages.yml 파일을 만들어준다. gh-pages.yml은 GitHub Actions 워크플로우를 정의하여 코드가 커밋되거나 푸시될 때 자동으로 Hugo 사이트를 빌드하고 GitHub Pages에 배포할 수 있도록 하는 파일이다.\n$ pwd /Users/yshmbid/Hugo/blog $ mkdir -p .github/workflows $ cd .github/workflows $ touch gh-pages.yml 아래 내용은 HUGO 공식 문서에서 제공한 워크플로우인데, 나의 경우에는 오류가 났다.\n# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: - main # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.128.0 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v5 - name: Install Node.js dependencies run: \u0026#34;[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026amp;\u0026amp; npm ci || true\u0026#34; - name: Build with Hugo env: HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache HUGO_ENVIRONMENT: production TZ: America/Los_Angeles run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;${{ steps.pages.outputs.base_url }}/\u0026#34; - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 위의 워크플로우를 사용한다면 line 8의 main를 확인해주자면 default가 master라면 master로 바꿔줘야 한다.\n나의 경우는 위 워크플로우로는 오류가 났어서 아래의 수정된 내용을 넣어줬다.\nname: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Create .nojekyll run: echo \u0026#39;\u0026#39; \u0026gt; .nojekyll - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v4 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GH_TOKEN }} publish_dir: ./public 이어서 GH_TOKEN를 정의해줘야 하는데\n리포지토리의 Settings -\u0026gt; Secretes and Variables -\u0026gt; Actions 에서 Repository secretes와 Repository variables를 생성해준다.\nSecret 자리에 토큰을 입력해주면 된다.\n작성이 완료되었다면, 생성한 \u0026lt;user-id\u0026gt;.github.io 리포지토리에 연결한 후 커밋, 푸시해준다.\n$ pwd /Users/yshmbid/Hugo/blog $ git remote add origin https://github.com/yshghid/yshghid.github.io.git $ git add . $ git commit -m \u0026#34;first commit\u0026#34; $ git push origin main 마무리 # 이로써 블로그 생성과 배포는 끝이지만!! 추가로 확인하면 좋은 부분이 있다.\nActions Actions에서 초록색 체크박스가 뜨는지 확인하기. 오류가 난다면 해당 오류의 로그를 읽어보고 그에 맞게 수정해주면 된다.\nSources, Branch 공식 문서에서는 Deploy from a branch에서 Github Actions로 바꿔주라고 나온다. 바꿔도 상관없으나 나는 그냥 뒀다.\n브랜치는 보통은 gh-pages 브랜치가 기본 Github Pages 브랜치로 설정되어 있지만 혹시 안되어 있다면 gh-pages로 바꿔주면 된다.\n구조 /Users/yshmbid/Hugo/blog ├── hugo.toml ├── content/ ├── layouts/ ├── static/ └── .github/ └── workflows/ └── gh-pages.yml blog 디렉토리가 이와 같은 구조를 띤다면 제대로 작성된 것이다.\n참고한 블로그 및 문서 # HUGO 공식 문서 - https://gohugo.io/getting-started/quick-start/ HUGO 공식 문서2 - https://gohugo.io/hosting-and-deployment/hosting-on-github/ hugo-book github - https://github.com/alex-shpak/hugo-book.git https://c11oud.tistory.com/entry/GitHub-깃허브-블로그-만들기1 https://github.com/Integerous/Integerous.github.io https://kzeoh.github.io/posts/make-blog/ "},{"id":11,"href":"/docs/study/cs/cs2/","title":"Hugo로 깃허브 블로그 만들기 (2) favicon 변경, Giscus 댓글창 추가","section":"CS","content":" Hugo로 깃허브 블로그 만들기 (2) favicon 변경, Giscus 댓글창 추가 # 2024.07.22 # favicon 변경 # Hugo-book 테마의 github에서 README 파일을 읽어보면, logo와 favicon 이미지의 경로 정보를 찾을 수 있다.\n(logo 정보) (favicon 정보) 확인 결과 static 디렉토리에 각각 logo.png, favicon.png로 저장해두면 반영되는것 같다.\n참고로 Hugo-book 테마의 오리지널 웹사이트는 아래와 같이 디자인되어있고\n최상단 탭에 들어가는 이미지가 logo.png, 블로그 이름 옆에 들어가는 이미지가 favicon.png이다.\n먼저 static 디렉토리에 넣고 싶은 로고와 파비콘을 logo.png, favicon.png 로 저장해준다.\n다음으로, hugo.toml 파일을 열어 아래 내용을 추가해준다.\n# (Optional, default none) Set the path to a logo for the book. If the logo is # /static/logo.png then the path would be \u0026#39;logo.png\u0026#39; BookLogo = \u0026#39;logo.png\u0026#39; 블로그를 들어가보면 설정한 로고와 파비콘이 잘 들어간것을 확인할 수 있다.\nGiscus 댓글창 추가 # Giscus 댓글 시스템을 Hugo 기반 블로그에 연동하기 위해서는 Giscus에 블로그 리포지토리를 연결한 후, js script를 작성하여 블로그 리포지토리의 layouts 디렉토리에 저장하면 된다고 한다.\n이때 연결할 리포지토리는 다음 3가지 조건을 만족해야 한다.\nPublic이어야 함. giscus 앱이 설치되어 있어야 함. Discussions 기능이 해당 저장소에서 활성화되어 있어야 함. 공개 저장소 확인\n블로그 리포지토리의 Settings \u0026gt; General의 맨 하단을 보면 Danger Zone에서 public인지 private인지 확인이 가능하다.\npublic이므로 다음으로 넘어간다.\ngiscus 앱 설치\nhttps://github.com/apps/giscus 에 접속하여 install, configure를 진행하면 쉽게 설치된다.\nRepository access는 All repositories 로 설정했다.\nDiscussion 기능 활성화\n블로그 리포지토리의 Settings \u0026gt; General을 스크롤해보면 Discussions 체크박스가 생긴 것을 확인할 수 있다. 이를 체크해준다.\n위로 스크롤해보면 상단에 Discussions 탭이 생겼다.\n이제 블로그 리포지토리가 Giscus에 연결할 3가지 조건을 만족하였고 블로그를 Giscus로 연결해주면 된다. 연결해주려면 아래 형식의 js 스크립트를 작성하여 layouts/partials/comments.html에 추가해주면 된다.\njs 스크립트는 https://giscus.app/ko에서 파라미터를 선택하면 적절하게 생성해준다!\n\u0026lt;script src=\u0026#34;https://giscus.app/client.js\u0026#34; data-repo=\u0026#34;yshghid/yshghid.github.io\u0026#34; data-repo-id=\u0026#34;R_kgDONkMkNg\u0026#34; data-category-id=\u0026#34;DIC_kwDONkMkNs4CloJh\u0026#34; data-mapping=\u0026#34;pathname\u0026#34; data-strict=\u0026#34;0\u0026#34; data-reactions-enabled=\u0026#34;1\u0026#34; data-emit-metadata=\u0026#34;0\u0026#34; data-input-position=\u0026#34;bottom\u0026#34; data-theme=\u0026#34;preferred_color_scheme\u0026#34; data-lang=\u0026#34;ko\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 해당 내용을 복사해서 블로그 리포지토리의 layouts/partials/docs/comments.html로 생성해주었다.\n성공적으로 댓글창이 추가되었다!!\n참고한 블로그 # https://parker1609.github.io/post/creating-my-blog-with-hugo/\n"}]