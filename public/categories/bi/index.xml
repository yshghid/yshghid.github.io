<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BI on  </title>
    <link>http://localhost:1313/categories/bi/</link>
    <description>Recent content in BI on  </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/bi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>연구실 bashrc 스크립트</title>
      <link>http://localhost:1313/docs/study/tech/tech11/</link>
      <pubDate>Wed, 28 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/tech/tech11/</guid>
      <description>연구실 bashrc 스크립트 # #2025-05-28&#xA;#1 local&#xA;1 #alias cobi2=&amp;#39;ssh -p 5290 ysh980101@155.230.28.211&amp;#39; 2 alias cobi2=&amp;#34;ssh -p 3160 ysh980101@155.230.110.91&amp;#34; 3 alias cobi3=&amp;#34;ssh -p 7777 ysh980101@155.230.110.92&amp;#34; 4 alias cobi4=&amp;#34;ssh -p 4712 ysh980101@155.230.110.93&amp;#34; 5 # &amp;gt;&amp;gt;&amp;gt; conda initialize &amp;gt;&amp;gt;&amp;gt; 6 # !! Contents within this block are managed by &amp;#39;conda init&amp;#39; !! 7 __conda_setup=&amp;#34;$(&amp;#39;/opt/anaconda3/bin/conda&amp;#39; &amp;#39;shell.bash&amp;#39; &amp;#39;hook&amp;#39; 2&amp;gt; /dev/null )&amp;#34; 8 if [ $? -eq 0 ]; then 9 eval &amp;#34;$__conda_setup&amp;#34; 10 else 11 if [ -f &amp;#34;/opt/anaconda3/etc/profile.</description>
    </item>
    <item>
      <title>Bismark: WGBS 전처리</title>
      <link>http://localhost:1313/docs/study/bioinformatics/bi6/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/bioinformatics/bi6/</guid>
      <description> Bismark: WGBS 전처리 # #2025-04-21&#xA;1. Build Index # $ bowtie2-build Homo_sapiens.GRCh38.dna.toplevel.fa GRCh38 -p 40 2. Bam Sorting &amp;amp; Indexing # $ samtools sort KEB01_1_bismark_bt2_pe.bam -o KEB01_1_bismark_bt2_pe.sorted.bam $ samtools index KEB01_1_bismark_bt2_pe.sorted.bam 3. Methylation Extraction # $ bismark_methylation_extractor --gzip --bedGraph --buffer_size 10G --cytosine_report --genome_folder /data3/PUBLIC_DATA/ref_genomes/homo_sapiens/GRCh37_hg19/Homo_sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta KEB01_1_bismark_bt2_pe.sorted.bam </description>
    </item>
    <item>
      <title>ChIP-seq 전처리</title>
      <link>http://localhost:1313/docs/study/bioinformatics/bi5/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/bioinformatics/bi5/</guid>
      <description>ChIP-seq 전처리 # #2025-04-21&#xA;1. Trimming # #chipseq_trimming.sh&#xA;#!/bin/bash # setting envs export bdir=&amp;#34;/data3/projects/2022_KNU_EBV&amp;#34; export hg38_bowtieidx=&amp;#34;/data3/PUBLIC_DATA/ref_genomes/homo_sapiens/hg38/hg38_bowtie_idx/hg38.fa&amp;#34; export hg38_bwaidx=&amp;#34;/data3/PUBLIC_DATA/ref_genomes/homo_sapiens/hg38/hg38_bwa_index/hg38.fa&amp;#34; export ebv_bowtie2idx=&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/EBV_bowtie2_idx/NC_007605.1.fa&amp;#34; export ebv_bwaidx=&amp;#34;/data3/PUBLIC_DATA/ref_genomes/Human_gammaherpesvirus_4_EBV/EBV_bwa_index/NC_007605.1.fa&amp;#34; ### SET Path ### cd /data3/RAW_DATA/2023_KNU_EBV/ChIP-seq ### TRIMMING data ### mkdir -p trimmed sampdir=&amp;#34;/data3/RAW_DATA/2023_KNU_EBV/ChIP-seq&amp;#34; samplist=(&amp;#34;Input&amp;#34; &amp;#34;p65&amp;#34; &amp;#34;RIgG&amp;#34;) TRIMMOMATIC= &amp;#34;/data/packages/trimmomatic/Trimmomatic-0.39/trimmomatic-0.39.jar&amp;#34; for sampname in &amp;#34;${samplist[@]}&amp;#34;; do mkdir -p &amp;#34;trimmed/${sampname}&amp;#34; java -jar $TRIMMOMATIC PE -threads 40 -trimlog log1.txt $sampdir/${sampname}_1.fastq/${sampname}_1.fastq $sampdir/${sampname}_2.fastq/${sampname}_2.fastq $sampdir/trimmed/${sampname}/${sampname}_1.trimmed.fastq $sampdir/trimmed/${sampname}/${sampname}_1.up.trimmed.fastq $sampdir/trimmed/${sampname}/${sampname}_2.trimmed.fastq $sampdir/trimmed/${sampname}/${sampname}_2.up.trimmed.fastq ILLUMINACLIP:/data1/packages/trimmomatic/Trimmomatic-0.39/adapters/TruSeq3-PE.fa:2:30:10:2:True LEADING:3 TRAILING:3 MINLEN:36 done 2. Alignment # #chipseq_alignment.</description>
    </item>
    <item>
      <title>Rsubread, edgeR: RNA-seq 전처리</title>
      <link>http://localhost:1313/docs/study/bioinformatics/bi8/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/bioinformatics/bi8/</guid>
      <description>Rsubread, edgeR: RNA-seq 전처리 # #2025-04-21&#xA;가장 오류 적게나는 조합!&#xA;1. Align RNA-seq # #Load Packages&#xA;library(Rsubread) library(org.Mm.eg.db) library(gridExtra) library(reshape2) #Set Path&#xA;indir = &amp;#34;/data/home/ysh980101/2504/mirna/data&amp;#34; outdir = &amp;#34;/data/home/ysh980101/2504/mirna/data&amp;#34; refpath = &amp;#34;/data/home/ysh980101/2406/data-gne/mm39.fa&amp;#34; setwd(indir) getwd() &amp;#39;/data/home/ysh980101/2504/mirna/data&amp;#39; #Build Index&#xA;buildindex(basename = &amp;#34;mm39&amp;#34;, reference = refpath) #Read Alignment&#xA;files &amp;lt;- list.files(pattern=&amp;#34;\\.fastq\\.gz$&amp;#34;, full.names=TRUE) bams &amp;lt;- sub(&amp;#34;\\.fastq\\.gz$&amp;#34;, &amp;#34;.bam&amp;#34;, files) samples &amp;lt;- gsub(&amp;#34;^\\.\\/|\\.fastq\\.gz$&amp;#34;, &amp;#34;&amp;#34;, files) targets &amp;lt;- read.delim(&amp;#34;target.txt&amp;#34;, header=TRUE) align(index=&amp;#34;mm39&amp;#34;, readfile1=files, input_format=&amp;#34;gzFASTQ&amp;#34;, output_file=bams, nthreads=50) #Quantification&#xA;fc = featureCounts(bams, isGTFAnnotationFile=TRUE, GTF.</description>
    </item>
    <item>
      <title>TopHat2, HTSeq, Rsubread: RNA-seq 전처리 파이프라인 비교</title>
      <link>http://localhost:1313/docs/study/bioinformatics/bi9/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/bioinformatics/bi9/</guid>
      <description>TopHat2, HTSeq, Rsubread: RNA-seq 전처리 파이프라인 비교 # #2025-04-21&#xA;1. Methods # 비교 의의&#xA;Traditional 방법은 TopHat2+HTseq 조합이지만 오류도 넘 많이나고 Rsubread를 쓰면 빠르고 깔끔한데 왜 써야하지..? 싶어서 동일한 데이터(pair-end fastq)로 돌려봄. HTseq에서 아래 코드를 수행할때 파라미터가 많은데 뭐가 다르게나오는지 모르겠어서 실험해봄. Cases&#xA;Rsubread 사용 HTSeq 사용, -i gene_id --additional-attr=gene_name (exon 기준 count) HTSeq 사용, -i transcript_id --additional-attr=gene_id --additional-attr=gene_name (transcript 기준 count) HTSeq 사용, -i transcript_id --additional-attr=gene_id --additional-attr=gene_name --nonunique=all (여러 transcript에 매핑된 read는 모두 count) 2.</description>
    </item>
  </channel>
</rss>
