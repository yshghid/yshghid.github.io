<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS on Lifelog 2025</title>
    <link>http://localhost:1313/categories/cs/</link>
    <description>Recent content in CS on Lifelog 2025</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/cs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs8/</link>
      <pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs8/</guid>
      <description>비전공자도 배워서 바로따는 ADsP 문제풀기 # 2025-01-17 ~ 2025-01-22 # 1일차 - 1과목 &amp;raquo; 2일차 3일차 4일차 5일차 1일차 # 데이터의 이해&#xA;풍향, 기상특보 중 정성 데이터는? 기상특보. 풍향은 정량 데이터다.&#xA;데이터를 가공해서 얻을 수 있는것은? 정보&amp;gt;지식&amp;gt;지혜&#xA;암묵지와 형식지의 상호작용 관계는 &amp;lsquo;내면화&amp;gt;공통화&amp;gt;표현화&amp;gt;연결화&amp;rsquo;를 순환.&#xA;데이터베이스 정의와 활용&#xA;데이터베이스의 특징. 동일한 내용의 데잉터가 중복되지 않는 통합 데이터이다 (o) USB, HDD, SSD와 같은 컴퓨터가 접근할 수 있는 매체에 저장된 데이터이다 (o)&#xA;데이터베이스 설계 절차 둘중에맞는것은?</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cd7/</link>
      <pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cd7/</guid>
      <description> ORDER BY # 2025-01-15 # ORDER BY # order by는 데이터를 정렬시킨다.&#xA;SELECT * FROM NETFLIX ORDER BY REG_DATE ASC; -&amp;gt; asc 오름차순이 기본값이라서 생략해도 된다.&#xA;역순으로 정렬&#xA;SELECT * FROM NETFLIX ORDER BY REG_DATE DESC; </description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs4/</link>
      <pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs4/</guid>
      <description>INSERT, UPDATE, DELETE, SELECT, WHERE # 2025-01-15 # INSERT # insert는 테이블에 새로운 데이터를 삽입.&#xA;debeaver tool 환경설정. auto commit을 해제한다. rollback과 commit 실습을 위함이다. window-&amp;gt;perferences-&amp;gt;connection type -&amp;gt; auto commit by default를 체크 해제.&#xA;insert 쿼리 실습.&#xA;sysdate는 지금 현재로 해준다.&#xA;SELECT * FROM NETFLIX; INSERT INTO NETFLIX VALUES (&amp;#39;나의 아저씨&amp;#39;, &amp;#39;드라마&amp;#39;, 50, SYSDATE); COMMIT; 데이터 추가하기. video name, view cnt 값만 있는 데이터를 넣어준다.&#xA;INSERT INTO NETFLIX (VIDEO NAME, VIEW_CNT) VALUES (&amp;#39;시그널&amp;#39;, 42); COMMIT; commit을 하지 않은 상태에서 rollback을 하면 select 해봤을때 데이터가 사라져있다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs6/</link>
      <pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs6/</guid>
      <description> &amp;lsquo;컴퓨터과학&amp;rsquo;의 개념? # 2025-01-09 # 과학은 자연과학, 형식과학, 응용과학, 사회과학으로 나뉜다. 형식과학에는 논리학, 수학, 시스템 과학, 전산학, 통계학 등이 속해있다.&#xA;전산학의 경우 현재는 컴퓨터과학, 컴퓨터공학이라는 표현이 보편적이다. 컴퓨터과학(Computer Science)은 응용 수학, 컴퓨팅 이론, 문제를 다루는 분야이며, 컴퓨터공학(Computer Engineering)은 컴퓨터과학 분야 중에서도 하드웨어를 다루는 세부 영역이다.&#xA;세부 분야 # 컴퓨터과학의 세부 분야는 다음과 같다.&#xA;이론 컴퓨터 과학 / 수학 이론 컴퓨터 과학 - 확률론 및 통계학, 선형대수학, 이산수학(자료구조, 알고리즘, 정보이론, 그래프이론, 수리논리학) 수학기초론 이산수학 하드웨어 전자공학 컴퓨터 구조론 신호 처리 및 제어 임베디드 컴퓨팅/마이크로프로세서 컴퓨터 하드웨어 응용: 양자컴퓨터/뉴로모픽 컴퓨팅/인공지능 가속기 소프트웨어 소프트웨어 개발방법론 계산과학 - 생물정보학, 수치해석학, 계산생물학/물리학/화학/신경과학 컴퓨터 그래픽스 운영체제 데이터베이스 - 데이터베이스, 데이터 마이닝, 빅데이터, 검색 엔진, 블록체인 통신 및 컴퓨터 네트워크 정보보안 인공지능/신경과학 - 인공지능, 인공신경과학, 계산학습이론, 계산신경과학, 유전 알고리즘, 뉴로모픽 컴퓨팅 자연어 처리 프로그래밍 금융공학 HCI(인간-컴퓨터 인터렉션)(Human-Computer Interaction) </description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs3/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs3/</guid>
      <description>sql 전문가 정미나 # 목록 # CREATE, ALTER, DROP/TRUNCATE &amp;raquo; INSERT, UPDATE, DELETE, SELECT, WHERE &amp;raquo; 링크 # https://www.youtube.com/playlist?list=PLyQR2NzLKOCa5UujnJIFR7wOVOD0lS6EB&#xA;원래 돈 받고 팔던 강의 CREATE, ALTER, DROP/TRUNCATE # 데이터베이스란?&#xA;데이터는 어딘가에 기록되어 있다. 중요한 데이터는 암호화해서 저장한다.&#xA;sql은 데이터를 다루는데 사용되는 언어.&#xA;테이블이란?&#xA;테이블은 데이터베이스를 구성. 각 테이블은 기능이 갖고 정보를 저장하고 있다.&#xA;특정 용도 데이터를 담기 위한 테이블은 entity.&#xA;테이블을 구성하는 속성은 column. attribute라고도 한다. 한사람의 데이터를 의미하는 행은 row.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs2/</link>
      <pubDate>Mon, 22 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs2/</guid>
      <description>Hugo로 깃허브 블로그 만들기 (2) favicon 변경, Giscus 댓글창 추가 # 2024.07.22 # favicon 변경 # Hugo-book 테마의 github에서 README 파일을 읽어보면, logo와 favicon 이미지의 경로 정보를 찾을 수 있다.&#xA;(logo 정보) (favicon 정보) 확인 결과 static 디렉토리에 각각 logo.png, favicon.png로 저장해두면 반영되는것 같다.&#xA;참고로 Hugo-book 테마의 오리지널 웹사이트는 아래와 같이 디자인되어있고&#xA;최상단 탭에 들어가는 이미지가 logo.png, 블로그 이름 옆에 들어가는 이미지가 favicon.png이다.&#xA;먼저 static 디렉토리에 넣고 싶은 로고와 파비콘을 logo.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs1/</guid>
      <description>Hugo로 깃허브 블로그 만들기 # 목록 # 사이트 생성, 깃허브 배포&#xA;Favicon 변경, Giscus 댓글창 추가&#xA;사이트 생성, 깃허브 배포 # Hugo 설치 # $ brew install hugo $ hugo version hugo v0.131.0+extended darwin/arm64 BuildDate=2024-08-02T09:03:48Z VendorInfo=brew Hugo v0.112.0 이상인지 확인하면 된다.&#xA;Hugo 사이트 생성 # 작업하고 싶은 위치에 Hugo 디렉토리를 만들어준다.&#xA;$ mkdir Hugo $ cd Hugo Hugo로 들어가서 hugo 사이트 틀을 생성해준다. 나는 blog라는 이름으로 생성하였다.&#xA;$ pwd /Users/yshmbid/Hugo $ hugo new site blog blog 디렉토리에 빈 Git 저장소를 초기화한다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs5/</guid>
      <description>깃허브 오류 모음 # 목록 # There was an error committing your changes: File could not be edited [&amp;raquo;]&#xA;There was an error committing your changes: File could not be edited # 갑자기 모든 파일의 수정이 안되고 page deployment도 오류가 났다. 브라우저 캐시 문제인가 해서 방문기록이랑 캐시를 모두 삭제해보았다. 그래도 오류가 났다. 구글링하니까 내 경우랑 맞아떨어지는 한국인 블로그글이 있어서 시키는대로 https://www.githubstatus.com/에 들어가봤다. 블로그 글이랑 같은 창이 떴는데 그냥 기다려야된다길래 그냥 기다림.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs10/</guid>
      <description>ADsP # 시험일정 # 원서접수 1.20~1.24 수험표발급 2.7 시험일 2.22(토) 사전점수공개 3.14~3.18 합격자 발표 3.21 응시자격 서류제출 4.4~4.11 공부계획 # ADsP 민트책 문제풀기 (5일) ADsP 요약 강의1 https://www.youtube.com/watch?v=6h6Dsh6IMgA&amp;t=0s ADsP 요약 강의2 https://www.youtube.com/watch?v=8YN9vZp495E&amp;t=0s ADsP 요약본 pdf 공부 참고영상 # https://www.youtube.com/watch?v=SoZOTt7UZI4&amp;t=6s&#xA;ADsP 자격증 노베이스 10일 합격 공부법💯 (2024 개정 후기, 자료, 꿀팁 포함🍯)&#xA;접수 # https://www.dataq.or.kr/www/components/allatpay/approval.do 접수했다!!</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs11/</guid>
      <description>머신러닝 과정 이해 # 목록 # 랜덤 데이터 세트 생성 &amp;raquo;&#xA;머신러닝 과정 이해 &amp;raquo;&#xA;랜덤 데이터 세트 생성 # centers=2로 만들기 피쳐 개수 2개, 클러스터 2개, 표준편차 1인 300개의 점으로 된 데이터 세트 생성하기. make_blobs()를 사용하고 피쳐가 X, 분류가 y로 들어간다.&#xA;from sklearn.datasets import make_blobs import pandas as pd X,y = make_blobs( random_state=3, n_features=2, #피쳐 개수 2 centers=2, #클러스터 2 cluster_std=1, n_samples=300) 데이터 확인하기&#xA;df = pd.DataFrame(X) df[&amp;#34;target&amp;#34;]=y df.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs12/</guid>
      <description>혼자 공부하는 딥러닝 | ANN # 목록 # 간단한 인공 신경망 모델 만들기 &amp;raquo;&#xA;인공 신경망에 층을 추가하여 심층 신경망 만들어 보기 &amp;raquo;&#xA;인경 신경망 모델 훈련의 모범 사례 학습하기 &amp;raquo;&#xA;17. 간단한 인공 신경망 모델 만들기 # 데이터 준비 fashion_mnist 데이터셋에서 학습과 테스트용 이미지 데이터를 가져온다. 학습 데이터는 60,000개의 28x28 픽셀 이미지, 테스트 데이터는 10,000개의 28x28 픽셀 이미지. train_target과 test_target은 각 이미지에 해당하는 레이블(0~9)을 갖고있다.&#xA;from tensorflow import keras (train_input, train_target), (test_input, test_target) = keras.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs13/</guid>
      <description>군집 Clustering # 목록 # Setting &amp;raquo;&#xA;9.1.0 분류와 군집 &amp;raquo;&#xA;9.1.1 k-평균 &amp;raquo;&#xA;9.1.2 k-평균의 한계 &amp;raquo;&#xA;9.1.3 군집을 사용한 이미지 분할 &amp;raquo;&#xA;9.1.4 군집을 사용한 전처리 &amp;raquo;&#xA;9.1.5 군집을 사용한 준지도 학습 &amp;raquo;&#xA;9.1.6 DBSCAN &amp;raquo;&#xA;Setting # # 파이썬 ≥3.5 필수 import sys assert sys.version_info &amp;gt;= (3, 5) # 사이킷런 ≥0.20 필수 import sklearn assert sklearn.__version__ &amp;gt;= &amp;#34;0.20&amp;#34; # 공통 모듈 임포트 import numpy as np import os # 노트북 실행 결과를 동일하게 유지하기 위해 np.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs14/</guid>
      <description>BERT (Bidirectional Encoder Representations from Transformers) # 목록 # 17-01 NLP에서의 사전 훈련(Pre-training)&#xA;17-02 버트(Bidirectional Encoder Representations from Transformers, BERT) &amp;raquo;&#xA;17-03 구글 BERT의 마스크드 언어 모델 &amp;raquo;&#xA;17-04 한국어 BERT의 마스크드 언어 모델 &amp;raquo;&#xA;17-05 구글 BERT의 다음 문장 예측 &amp;raquo;&#xA;17-06 한국어 BERT의 다음 문장 예측 &amp;raquo;&#xA;17-07 센텐스버트(Sentence BERT, SBERT)&#xA;17-02 버트(Bidirectional Encoder Representations from Transformers, BERT) # BERT?&#xA;BERT는 문맥 정보를 반영한 임베딩(Contextual Embedding)을 사용함. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 모델이 학습하도록 설계된 방식.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs15/</guid>
      <description>트랜스포머 입문 # 목록 # 1.1 트랜스포머 소개&#xA;1.2 트랜스포머의 인코더 이해하기 &amp;raquo;&#xA;1.3 트랜스포머의 디코더 이해하기 &amp;raquo;&#xA;1.2 트랜스포머의 인코더 이해하기 # 셀프 어텐션 # 셀프 어텐션은 문장 내 단어들이 서로 얼마나 중요한지를 계산하는 과정. 트랜스포머는 이를 위해 입력 단어를 쿼리(Query), 키(Key), 밸류(Value) 세 가지 벡터로 변환하여 연관성을 구한다. 어텐션 점수 계산 예제 # &amp;ldquo;The cat sat on the mat.&amp;rdquo;&#xA;각 단어 벡터(예: 512차원)를 가중치 행렬과 곱하여 쿼리(Q), 키(K), 밸류(V)벡터를 생성한다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs16/</guid>
      <description>BERT 입문 # 목록 # 2.1 BERT의 기본 개념&#xA;2.2 BERT의 동작 방식&#xA;2.3 BERT의 구조 &amp;raquo;&#xA;2.4 BERT 사전 학습 &amp;raquo;&#xA;2.3 BERT의 구조 # BERT의 전체 구조 # 트랜스포머의 인코더(Encoder) 블록을 여러 개 쌓은 형태. 입력: 문장 (토큰화된 형태) 내부 구조: N개의 Transformer Encoder Blocks (기본 모델은 12개, 큰 모델은 24개) 출력: 각 토큰의 벡터 표현 (Contextual Embedding) cf) BERT의 대표적인 모델 크기&#xA;모델 # 인코더 층 숨겨진 차원 (dmodel) 어텐션 헤드 수 파라미터 수 BERT-Base 12 768 12 110M BERT-Large 24 1024 16 340M BERT의 입력 처리 # 입력 토큰 (Token Embedding) WordPiece Tokenization을 사용하며, 단어를 서브워드(subword) 단위로 분할하고 각 토큰은 고유한 임베딩 벡터로 변환된다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs17/</guid>
      <description>BERT의 파생 모델: ALBERT, RoBERTa, ELECTRA, SpanBERT # 목록 # 4.1 ALBERT &amp;raquo;&#xA;4.2 ALBERT에서 임베딩 추출&#xA;4.3 RoBERTa &amp;raquo;&#xA;4.4 ELECTRA &amp;raquo;&#xA;4.5 SpanBERT &amp;raquo;&#xA;4.1 ALBERT # ALBERT (A Lite BERT)는 BERT 모델의 성능을 유지하면서도 파라미터 수를 줄이고, 더 효율적인 학습을 목표로 한 모델.&#xA;크로스 레이어 변수 공유 # BERT는 각 Transformer 레이어마다 별도의 가중치와 바이어스를 갖는다. ALBERT는 동일한 파라미터 집합을 여러 레이어에 걸쳐 사용하여 모델의 파라미터 수를 크게 줄인다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs18/</guid>
      <description>머신러닝의 다양한 알고리즘 # 목록 # 회귀-선형회귀 &amp;raquo; 분류-로지스틱회귀 &amp;raquo; 분류-SVM(서포트 벡터 머신) &amp;raquo; 분류-결정 트리 &amp;raquo; 분류-랜덤 포레스트 &amp;raquo; 분류-k-NN (k 최근접 이웃법) &amp;raquo; 클러스터링-k-means &amp;raquo; 1. 회귀-선형회귀 # 선형회귀는 피쳐 X를 수치로 입력하면 예측 결과 y를 수치로 출력해준다. 예측하고싶은 상황 X와 예측되는 결과 y에 강한 상관관계가 있을때 쓸수있는 방법이다. 상관관계가 강한 데이터를 산포도로 나타내면 점의 나열이 선을 그은것처럼 보임. 선이 아닌 이유는 현실세계에 오차가 있기 때문이고 &amp;lsquo;오차가 없으면 이런 선이 될것이다&amp;rsquo;라고 예상되는 선을 생각할 수 있다.</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs19/</guid>
      <description>PCCE 기출문제 1 # 목록 # 문자 출력 &amp;raquo; 각도 합치기 &amp;raquo; 수 나누기 &amp;raquo; 병과분류 &amp;raquo; 심폐소생술 &amp;raquo; 물 부족 버스 닉네임 규칙 지폐 접기 공원 1. 문자 출력 # 문제 설명 # 주어진 코드는 변수에 데이터를 저장하고 출력하는 코드입니다. 아래와 같이 출력되도록 빈칸을 채워 코드를 완성해 주세요.&#xA;출력 예시 # 3 2 1 Let&amp;#39;s go! 문제를 풀어보자!&#xA;message는 Let&amp;rsquo;s go! 엔터는 \n 코드를 짜보자!&#xA;message = &amp;#34;Let&amp;#39;s go!</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs20/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs20/</guid>
      <description>PCCE 기출문제 2 # 목록 # 출력 피타고라스의 정리 나이 계산 저축 산책 가채점 가습기 창고 정리 이웃한 칸 데이터 분석 1. 출력 # 문제 링크 https://school.programmers.co.kr/learn/challenges?order=recent&amp;languages=python3&amp;page=1&amp;partIds=56388</description>
    </item>
    <item>
      <title>CS</title>
      <link>http://localhost:1313/docs/study/cs/cs9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/cs/cs9/</guid>
      <description>SQLD # 시험일정 # 원서접수 2.3~2.7 수험표발급 2.21 시험일 3.8(토) 사전점수공개 3.28~4.1 합격자 발표 4.4 응시자격 서류제출 4.4~4.11 공부계획 # sql 전문가 정미나 강의듣기 &amp;raquo; 유선배 sqld 과외노트 책에서 문제풀기 이 블로그에서 기출 받아서 풀기 sqld 요약본 pdf 공부 https://www.youtube.com/watch?v=SoZOTt7UZI4&amp;t=6s&#xA;참고영상 # https://www.youtube.com/watch?v=SoZOTt7UZI4&#xA;SQLD 자격증 노베이스 2주 합격 공부법 (2024 개정 후기, 자료 공유 포함🍯)</description>
    </item>
  </channel>
</rss>
