<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on  </title>
    <link>http://localhost:1313/categories/algorithm/</link>
    <description>Recent content in Algorithm on  </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MutClust 알고리즘 로직정리 #1 expand_cluster</title>
      <link>http://localhost:1313/docs/study/algorithm/algo13/</link>
      <pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/algorithm/algo13/</guid>
      <description>MutClust 알고리즘 로직정리 #1 expand_cluster # #2025-08-05&#xA;1. input # def expand_cluster(ccmIdx, mutData, info): ccm의 인덱스 ccmIdx 돌연변이 중요도 정보 mutData info: 기본 세팅 파라미터 2 # scaler_l = mutData[ccmIdx][&amp;#39;eps_scaler&amp;#39;] idx_l = ccmIdx - 1 eps_l = mutData[ccmIdx][&amp;#39;left_distance&amp;#39;] pos_l = mutData[ccmIdx][POS] #변수설명&#xA;scaler_l: ccm의 eps scaler idx_l: 최초 이웃의 인덱스 eps_l: ccm의 최초 eps pos_l: ccm의 postion 3 # while idx_l &amp;gt;= 0 and (pos_l - mutData[idx_l][POS]) &amp;lt;= eps_l: delta = scaler_l - mutData[idx_l][&amp;#39;eps_scaler&amp;#39;] scaler_l -= delta / info.</description>
    </item>
  </channel>
</rss>
