<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on  </title>
    <link>http://localhost:1313/categories/algorithm/</link>
    <description>Recent content in Algorithm on  </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MutClust 함수 #1 expand_cluster</title>
      <link>http://localhost:1313/docs/study/algorithm/algo13/</link>
      <pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/study/algorithm/algo13/</guid>
      <description>MutClust 함수 #1 expand_cluster # #2025-08-05&#xA;#1 input&#xA;ccm의 인덱스 ccm_idx mutation 중요도 정보 mut_list #2&#xA;# --- Cluster Expansion --- def expand_cluster(ccm_idx, mut_list, info): es_l = mut_list[ccm_idx][&amp;#39;eps_scaler&amp;#39;] l_idx = ccm_idx - 1 l_max = mut_list[ccm_idx][&amp;#39;left_distance&amp;#39;] l_pos = mut_list[ccm_idx][POS] es_l: ccm의 eps scaler l_idx: 최초 이웃의 인덱스 l_max: ccm의 최초 eps l_pos: ccm의 postion #3&#xA;# --- Cluster Expansion --- def expand_cluster(ccm_idx, mut_list, info): #es_l = mut_list[ccm_idx][&amp;#39;eps_scaler&amp;#39;] #l_idx = ccm_idx - 1 #l_max = mut_list[ccm_idx][&amp;#39;left_distance&amp;#39;] #l_pos = mut_list[ccm_idx][POS] while l_idx &amp;gt;= 0 and (l_pos - mut_list[l_idx][POS]) &amp;lt;= l_max: delta = es_l - mut_list[l_idx][&amp;#39;eps_scaler&amp;#39;] es_l -= delta / info.</description>
    </item>
  </channel>
</rss>
