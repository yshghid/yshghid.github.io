<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>생물정보학 on DAILY NOTE</title>
    <link>http://localhost:1313/docs/hobby/study/</link>
    <description>Recent content in 생물정보학 on DAILY NOTE</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/hobby/study/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>깃허브 오류 Ubuntu 20.04 brownout</title>
      <link>http://localhost:1313/docs/hobby/study/study1/</link>
      <pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/study1/</guid>
      <description>[깃허브] 깃허브 오류 Ubuntu 20.04 brownout # 블로그 수정하는데 갑자기 처음보는 오류가 발생,,&#xA;찾아보니 ubuntu-20.04 GitHub Actions runner가 2025년 4월 15일에 지원 종료함에 따라 workflow에서 runs-on: ubuntu-20.04를 사용중이라면 runs-on: ubuntu-22.04로 수정하라는 내용이었다.&#xA;jobs: deploy: runs-on: ubuntu-20.04 gh-pages.yml에 들어가서 runs-on: ubuntu-20.04를 runs-on: ubuntu-22.04로 바꿔주니까 다시 돌아간다!</description>
    </item>
    <item>
      <title>프로그래머스 알고리즘 고득점 kit</title>
      <link>http://localhost:1313/docs/hobby/study/study2/</link>
      <pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/study2/</guid>
      <description>[코테] 프로그래머스 알고리즘 고득점 kit # 목록 # 2024-04-09 ⋯ [해시] 완주하지 못한 선수&#xA;2024-04-09 ⋯ [해시] 전화번호 목록&#xA;2024-04-09 ⋯ [해시] 의상&#xA;2024-04-09 ⋯ [정렬] 완주하지 못한 선수&#xA;2024-04-09 ⋯ [정렬] H-Index&#xA;2024-04-09 ⋯ [스택/큐] 기능개발&#xA;2024-04-10 ⋯ [스택/큐] 올바른 괄호&#xA;2024-04-10 ⋯ [해시] 베스트앨범&#xA;2024-04-10 ⋯ [스택/큐] 프로세스&#xA;2024-04-10 ⋯ [스택/큐] 다리를 지나는 트럭&#xA;완주하지 못한 선수 # 입출력 예 # participant = [&amp;#34;leo&amp;#34;, &amp;#34;kiki&amp;#34;, &amp;#34;eden&amp;#34;]&#x9;completion = [&amp;#34;eden&amp;#34;, &amp;#34;kiki&amp;#34;]&#x9;return = &amp;#34;leo&amp;#34; 개념 # Counter([&amp;#34;leo&amp;#34;, &amp;#34;kiki&amp;#34;, &amp;#34;eden&amp;#34;]) -&amp;gt; {&amp;#39;leo&amp;#39;:1, &amp;#39;kiki&amp;#39;:1, &amp;#39;eden&amp;#39;:1} Counter([&amp;#34;leo&amp;#34;, &amp;#34;kiki&amp;#34;, &amp;#34;eden&amp;#34;]) - Counter([&amp;#34;kiki&amp;#34;, &amp;#34;eden&amp;#34;]) -&amp;gt; {&amp;#39;leo&amp;#39;:1} (key별로 value를 빼서 0이나 음수되면 제거) 코드 # from collections import Counter def solution(participant, completion): answer = Counter(participant) - Counter(completion) return list(answer.</description>
    </item>
    <item>
      <title>대학원생 면접대비캠프</title>
      <link>http://localhost:1313/docs/hobby/study/bi12/</link>
      <pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/bi12/</guid>
      <description>대학원생 면접대비캠프 # 대학원생 대상으로 면접대비 강의가 있길래 신청해봤다!&#xA;화수목은 5시부터 9시이구 금요일은 1시부터 6시반이라서 금요일은 일찍 퇴근할수있으면 퇴근하고 듣는게 좋을듯. 토요일은 10시부터 오프라인으로 한다.&#xA;이번주 랩미팅이 목요일 2시에 있고 논문 미팅은 금요일 아침 9시라서 크게 겹치지는 않아 매우 다행이다!!&#xA;커리큘럼 # 2025-01-07 ⋯ 1일차 - 면접 기초 &amp;raquo;&#xA;2025-01-08 ⋯ 2일차 - 면접유형별 대응 전략 &amp;raquo;&#xA;2025-01-09 ⋯ 3일차 - 면접답변 노하우 &amp;raquo;&#xA;2025-01-10 ⋯ 4일차 - 모의면접(PT, 세미나) &amp;raquo;</description>
    </item>
    <item>
      <title>DESeq2 워크플로우</title>
      <link>http://localhost:1313/docs/hobby/study/bi1/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/bi1/</guid>
      <description>[코드] DESeq2 워크플로우 # Load package # suppressMessages({ library(&amp;#34;DESeq2&amp;#34;) library(pheatmap) library(withr) #library(tidyverse) library(RColorBrewer) library(gplots) library(dplyr) }) Set path # setwd(&amp;#34;/data-blog/bi1&amp;#34;) getwd() &amp;#39;/data-blog/bi1&amp;#39; Run DESeq2 # S1 &amp;lt;- &amp;#39;33&amp;#39; S2 &amp;lt;- &amp;#39;150&amp;#39; countdata &amp;lt;- read.csv(&amp;#34;results.csv&amp;#34;, header=TRUE, sep=&amp;#39;,&amp;#39;) colnames(countdata) &amp;lt;- c(&amp;#39;GeneID&amp;#39;,&amp;#39;150-1&amp;#39;,&amp;#39;150-2&amp;#39;,&amp;#39;150-3&amp;#39;,&amp;#39;33-1&amp;#39;,&amp;#39;33-2&amp;#39;,&amp;#39;33-3&amp;#39;,&amp;#39;con-1&amp;#39;,&amp;#39;con-2&amp;#39;,&amp;#39;con-3&amp;#39;) countdata &amp;lt;- countdata[, c(&amp;#39;GeneID&amp;#39;,&amp;#39;150-1&amp;#39;,&amp;#39;150-2&amp;#39;,&amp;#39;150-3&amp;#39;,&amp;#39;33-1&amp;#39;,&amp;#39;33-2&amp;#39;,&amp;#39;33-3&amp;#39;,&amp;#39;con-1&amp;#39;,&amp;#39;con-2&amp;#39;,&amp;#39;con-3&amp;#39;)] selected_columns &amp;lt;- paste(c(&amp;#39;GeneID&amp;#39;,paste0(S2,&amp;#34;-1&amp;#34;), paste0(S2,&amp;#34;-2&amp;#34;), paste0(S2,&amp;#34;-3&amp;#34;),paste0(S1,&amp;#34;-1&amp;#34;), paste0(S1,&amp;#34;-2&amp;#34;), paste0(S1,&amp;#34;-3&amp;#34;)), sep=&amp;#34;&amp;#34;) countdata &amp;lt;- countdata[, selected_columns] countdata &amp;lt;- countdata[rowSums(countdata[, -1]) != 0, ] sample.names &amp;lt;- paste(c(paste0(S2,&amp;#34;-1&amp;#34;), paste0(S2,&amp;#34;-2&amp;#34;), paste0(S2,&amp;#34;-3&amp;#34;),paste0(S1,&amp;#34;-1&amp;#34;), paste0(S1,&amp;#34;-2&amp;#34;), paste0(S1,&amp;#34;-3&amp;#34;)), sep=&amp;#34;&amp;#34;) conditions &amp;lt;- factor(c(S2,S2,S2,S1,S1,S1)) metadata &amp;lt;- data.</description>
    </item>
    <item>
      <title>EndNote 사용법</title>
      <link>http://localhost:1313/docs/hobby/study/bi16/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/bi16/</guid>
      <description>EndNote 사용법 # 1. EndNote 설치 및 계정 설정 # 계정 설정: 공식 웹사이트에서 End note 계정을 생성한다.&#xA;설치: 나의 경우 여기에서 다운로드해줬다.&#xA;2. 레퍼런스 추가 방법 # Google Scholar에 논문 제목을 검색해서 인용&amp;gt;EndNote를 클릭하면 .enw 파일이 다운로드된다. 3. 레퍼런스 관리 # Endnote에 접속한다. Collect&amp;gt;Import References로 들어간다 파일 선택&amp;gt;아까 저장한 .enw 파일을 선택해준다 Import Option&amp;gt;EndNote Import를 선택해준다 To&amp;gt;New Group을 하면 논문 주제별로 그룹을 생성하여 정리 가능. 생성한 그룹이 이미 있으면 원하는 그룹 선택해준다.</description>
    </item>
    <item>
      <title>Hugo로 깃허브 블로그 만들기</title>
      <link>http://localhost:1313/docs/hobby/study/cs1/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs1/</guid>
      <description>[Github] Hugo로 깃허브 블로그 만들기 # 목록 # 2024-12-31 ⋯ 사이트 생성, 깃허브 배포&#xA;2024-12-31 ⋯ Favicon 변경, Giscus 댓글창 추가&#xA;사이트 생성, 깃허브 배포 # Hugo 설치 # $ brew install hugo $ hugo version hugo v0.131.0+extended darwin/arm64 BuildDate=2024-08-02T09:03:48Z VendorInfo=brew Hugo v0.112.0 이상인지 확인하면 된다.&#xA;Hugo 사이트 생성 # 작업하고 싶은 위치에 Hugo 디렉토리를 만들어준다.&#xA;$ mkdir Hugo $ cd Hugo Hugo로 들어가서 hugo 사이트 틀을 생성해준다. 나는 blog라는 이름으로 생성하였다.</description>
    </item>
    <item>
      <title>구글 BERT의 정석 | BERT 입문</title>
      <link>http://localhost:1313/docs/hobby/study/cs16/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs16/</guid>
      <description>[딥러닝] 구글 BERT의 정석 | BERT 입문 # 목록 # 2024-12-31 ⋯ 2.3 BERT의 구조&#xA;2024-12-31 ⋯ 2.4 BERT 사전 학습&#xA;2.3 BERT의 구조 # BERT의 전체 구조 # 트랜스포머의 인코더(Encoder) 블록을 여러 개 쌓은 형태. 입력: 문장 (토큰화된 형태) 내부 구조: N개의 Transformer Encoder Blocks (기본 모델은 12개, 큰 모델은 24개) 출력: 각 토큰의 벡터 표현 (Contextual Embedding) cf) BERT의 대표적인 모델 크기&#xA;모델 # 인코더 층 숨겨진 차원 (dmodel) 어텐션 헤드 수 파라미터 수 BERT-Base 12 768 12 110M BERT-Large 24 1024 16 340M BERT의 입력 처리 # 입력 토큰 (Token Embedding) WordPiece Tokenization을 사용하며, 단어를 서브워드(subword) 단위로 분할하고 각 토큰은 고유한 임베딩 벡터로 변환된다.</description>
    </item>
    <item>
      <title>구글 BERT의 정석 | BERT의 파생 모델</title>
      <link>http://localhost:1313/docs/hobby/study/cs17/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs17/</guid>
      <description>[딥러닝] 구글 BERT의 정석 | BERT의 파생 모델: ALBERT, RoBERTa, ELECTRA, SpanBERT # 목록 # 2024-12-31 ⋯ 4.1 ALBERT&#xA;2024-12-31 ⋯ 4.3 RoBERTa&#xA;2024-12-31 ⋯ 4.4 ELECTRA&#xA;4.1 ALBERT # ALBERT (A Lite BERT)는 BERT 모델의 성능을 유지하면서도 파라미터 수를 줄이고, 더 효율적인 학습을 목표로 한 모델.&#xA;크로스 레이어 변수 공유 # BERT는 각 Transformer 레이어마다 별도의 가중치와 바이어스를 갖는다. ALBERT는 동일한 파라미터 집합을 여러 레이어에 걸쳐 사용하여 모델의 파라미터 수를 크게 줄인다.</description>
    </item>
    <item>
      <title>구글 BERT의 정석 | 트랜스포머 입문</title>
      <link>http://localhost:1313/docs/hobby/study/cs15/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs15/</guid>
      <description>[딥러닝] 구글 BERT의 정석 | 트랜스포머 입문 # 목록 # 2024-12-31 ⋯ 1.2 트랜스포머의 인코더 이해하기&#xA;2024-12-31 ⋯ 1.3 트랜스포머의 디코더 이해하기&#xA;1.2 트랜스포머의 인코더 이해하기 # 셀프 어텐션 # 셀프 어텐션은 문장 내 단어들이 서로 얼마나 중요한지를 계산하는 과정. 트랜스포머는 이를 위해 입력 단어를 쿼리(Query), 키(Key), 밸류(Value) 세 가지 벡터로 변환하여 연관성을 구한다. 어텐션 점수 계산 예제 # &amp;ldquo;The cat sat on the mat.&amp;rdquo;&#xA;각 단어 벡터(예: 512차원)를 가중치 행렬과 곱하여 쿼리(Q), 키(K), 밸류(V)벡터를 생성한다.</description>
    </item>
    <item>
      <title>깃허브 오류 There was an error committing your changes: File could not be edited</title>
      <link>http://localhost:1313/docs/hobby/study/cs5/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs5/</guid>
      <description>[깃허브] 깃허브 오류 There was an error committing your changes: File could not be edited # 갑자기 모든 파일의 수정이 안되고 page deployment도 오류가 났다. 브라우저 캐시 문제인가 해서 방문기록이랑 캐시를 모두 삭제해보았다. 그래도 오류가 났다. 구글링하니까 내 경우랑 맞아떨어지는 한국인 블로그글이 있어서 시키는대로 https://www.githubstatus.com/에 들어가봤다. 블로그 글이랑 같은 창이 떴는데 그냥 기다려야된다길래 그냥 기다림. 2시간 뒤에 들어가니까 이 창으로 바뀌었다. 그리고 된다. 또 블로그 부셔진줄&amp;hellip; 다행이다&amp;hellip;.</description>
    </item>
    <item>
      <title>딥러닝을 이용한 자연어 처리 입문 | BERT</title>
      <link>http://localhost:1313/docs/hobby/study/cs14/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs14/</guid>
      <description>[딥러닝] 딥러닝을 이용한 자연어 처리 입문 | BERT # 목록 # 2024-12-31 ⋯ 17-02 버트(Bidirectional Encoder Representations from Transformers, BERT)&#xA;2024-12-31 ⋯ 17-03 구글 BERT의 마스크드 언어 모델&#xA;2024-12-31 ⋯ 17-04 한국어 BERT의 마스크드 언어 모델&#xA;2024-12-31 ⋯ 17-05 구글 BERT의 다음 문장 예측&#xA;2024-12-31 ⋯ 17-06 한국어 BERT의 다음 문장 예측&#xA;17-02 버트(Bidirectional Encoder Representations from Transformers, BERT) # BERT?&#xA;BERT는 문맥 정보를 반영한 임베딩(Contextual Embedding)을 사용함. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 모델이 학습하도록 설계된 방식.</description>
    </item>
    <item>
      <title>혼자 공부하는 딥러닝 | ANN</title>
      <link>http://localhost:1313/docs/hobby/study/cs12/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/hobby/study/cs12/</guid>
      <description>[딥러닝] 혼자 공부하는 딥러닝 | ANN # 목록 # 2024-12-31 ⋯ 17. 간단한 인공 신경망 모델 만들기&#xA;2024-12-31 ⋯ 18. 인공 신경망에 층을 추가하여 심층 신경망 만들어 보기&#xA;2024-12-31 ⋯ 19. 인경 신경망 모델 훈련의 모범 사례 학습하기&#xA;17. 간단한 인공 신경망 모델 만들기 # 데이터 준비 fashion_mnist 데이터셋에서 학습과 테스트용 이미지 데이터를 가져온다. 학습 데이터는 60,000개의 28x28 픽셀 이미지, 테스트 데이터는 10,000개의 28x28 픽셀 이미지. train_target과 test_target은 각 이미지에 해당하는 레이블(0~9)을 갖고있다.</description>
    </item>
  </channel>
</rss>
